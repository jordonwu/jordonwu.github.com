<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Jordon Wu's Blog]]></title>
  <link href="http://jordonwu.github.io/atom.xml" rel="self"/>
  <link href="http://jordonwu.github.io/"/>
  <updated>2015-04-24T16:38:07+08:00</updated>
  <id>http://jordonwu.github.io/</id>
  <author>
    <name><![CDATA[Jordon Wu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Build Linux for Imx6]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/16/build-linux-for-imx6/"/>
    <updated>2015-04-16T19:26:06+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/16/build-linux-for-imx6</id>
    <content type="html"><![CDATA[<h1>1.      Install Host OS</h1>

<h2>1.1     Install VMware</h2>

<pre><code>Version: VMware10.03
</code></pre>

<h2>1.2     Install ubuntu server on VMware</h2>

<pre><code>Version: ubuntu-14.04.2-server-amd64
</code></pre>

<h2>1.3     Update Sources</h2>

<pre><code>$sudo apt-get update
</code></pre>

<h1>2.      Install Host OS Service</h1>

<h2>2.1     Install ssh service</h2>

<pre><code>$ sudo apt-get install openssh-client openssh-server
</code></pre>

<h2>2.2     Install samba service</h2>

<pre><code>$ sudo apt-get install samba

$ sudo vim /etc/samba/smb.conf and add below section to the file end

[home]
comment = samba share path /home
browseable = yes
writeable = yes
path = /home
valid users = smb

$ sudo useradd smb          //add user smb

$ sudo smbpasswd -a smb     //set password for smb user

$ /etc/init.d/smbd restart  //restart smbd service
</code></pre>

<h1>3.      Install Host OS build essential</h1>

<pre><code>$ sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib \
    build-essential chrpath socat libsdl1.2-dev xterm curl tcl rpm bison m4 \
    zlib1g zlib1g-dev libncurses5-dev liblzo2-dev uuid-dev lzop texi2html texinfo \
    texlive gettext libgtk2.0-dev rpm bison m4 libfreetype6-dev libdbus-glib-1-dev \
    liborbit2-dev intltool ccache libtool uuid-dev liblzo2-dev tcl dpkg asciidoc \
    texlive-latex-base dblatex xutils-dev texlive texinfo lib32z1 lib32ncurses5 \
    lib32bz2-1.0 libc6-dev-i386 u-boot-tools scrollkeeper dos2unix
</code></pre>

<h1>4.      Build image for imx6 using yocto</h1>

<h2>4.1     Install repo</h2>

<pre><code>$ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo

$ export PATH=$PATH:/home/vmuser/bin

$ git config --global user.email "user name@email.com"

$ git config --global user.name "User Name" 
</code></pre>

<h2>4.2     Download freescale community bsp source code</h2>

<pre><code>$ mkdir fsl-community-bsp
$ cd fsl-community-bsp
$ repo init -u https://github.com/Freescale/fsl-community-bsp-platform -b dora
$ repo sync
</code></pre>

<h2>4.3     Change branch and sync</h2>

<pre><code>$ cd fsl-community-bsp
$ repo init -b master   //master or other branch
$ repo sync
</code></pre>

<h2>4.4     First build</h2>

<h3>4.4.1   Sync source code and setup environment</h3>

<pre><code>$ cd fsl-community-bsp
$ repo sync
$ source setup-environment build
$ ls
conf
</code></pre>

<h3>4.4.2   Choose your board</h3>

<pre><code>$ cd fsl-community-bsp

$ cd build

$ vim conf/local.conf #you can change MACHINE

MACHINE ??= 'imx6qsabresd'
DISTRO ?= 'poky'
PACKAGE_CLASSES ?= "package_rpm"
EXTRA_IMAGE_FEATURES = "debug-tweaks"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"
BB_DISKMON_DIRS = "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K"
CONF_VERSION = "1"

BB_NUMBER_THREADS = '1'
PARALLEL_MAKE = '-j 1'

DL_DIR ?= "${BSPDIR}/downloads/"
ACCEPT_FSL_EULA = "1"


//list all freescale boards conf
$ ls ../sources/meta-fsl-arm/conf/machine/*.conf -l
    -rw-rw-r-- 1 vmuser vmuser  539 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx23evk.conf
    -rw-rw-r-- 1 vmuser vmuser 2440 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx28evk.conf
    -rw-rw-r-- 1 vmuser vmuser  667 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx31pdk.conf
    -rw-rw-r-- 1 vmuser vmuser  603 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx35pdk.conf
    -rw-rw-r-- 1 vmuser vmuser  333 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx51evk.conf
    -rw-rw-r-- 1 vmuser vmuser  469 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx53ard.conf
    -rw-rw-r-- 1 vmuser vmuser  460 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx53qsb.conf
    -rw-rw-r-- 1 vmuser vmuser  638 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6dlsabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  393 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6dlsabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  533 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6qsabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  432 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6qsabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  432 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6slevk.conf
    -rw-rw-r-- 1 vmuser vmuser  615 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6solosabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  468 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6solosabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  542 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/twr-vf65gs10.conf

//list all non-freescale boards conf
$ ls ../sources/meta-fsl-arm-extra/conf/machine/*.conf -l
    -rw-rw-r-- 1 vmuser vmuser  155 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10036.conf
    -rw-rw-r-- 1 vmuser vmuser  199 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10037.conf
    -rw-rw-r-- 1 vmuser vmuser  234 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10049.conf
    -rw-rw-r-- 1 vmuser vmuser  234 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10055.conf
    -rw-rw-r-- 1 vmuser vmuser  229 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10056.conf
    -rw-rw-r-- 1 vmuser vmuser  255 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10057.conf
    -rw-rw-r-- 1 vmuser vmuser  255 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10058.conf
    -rw-rw-r-- 1 vmuser vmuser  466 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cgtqmx6.conf
    -rw-rw-r-- 1 vmuser vmuser  246 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-maxi.conf
    -rw-rw-r-- 1 vmuser vmuser  190 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-micro.conf
    -rw-rw-r-- 1 vmuser vmuser  188 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-mini.conf
    -rw-rw-r-- 1 vmuser vmuser  508 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx6qsabrelite.conf
    -rw-rw-r-- 1 vmuser vmuser  726 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/m28evk.conf
    -rw-rw-r-- 1 vmuser vmuser  767 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/m53evk.conf
    -rw-rw-r-- 1 vmuser vmuser 1641 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/nitrogen6x.conf
    -rw-rw-r-- 1 vmuser vmuser  786 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/nitrogen6x-lite.conf
    -rw-rw-r-- 1 vmuser vmuser  538 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-dual.conf
    -rw-rw-r-- 1 vmuser vmuser  529 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-quad.conf
    -rw-rw-r-- 1 vmuser vmuser  465 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-solo.conf

//list available images
$ find ../sources -name *image*
    ../sources/meta-fsl-arm/scripts/lib/image
    ../sources/meta-fsl-arm/classes/mfgtool-initramfs-image.bbclass
    ../sources/meta-fsl-arm/classes/image_types_fsl.bbclass
    ../sources/meta-fsl-arm/recipes-fsl/images
    ../sources/meta-fsl-arm/recipes-fsl/images/fsl-image-mfgtool-initramfs.bb
    ../sources/poky/scripts/lib/image
    ../sources/poky/scripts/lib/image/canned-wks/sdimage-bootpart.wks
    ../sources/poky/scripts/lib/wic/plugins/imager
    ../sources/poky/scripts/lib/wic/plugins/source/fsimage.py
    ../sources/poky/scripts/lib/wic/imager
    ../sources/poky/scripts/lib/wic/imager/baseimager.py
    ../sources/poky/scripts/test-remote-image
    ../sources/poky/scripts/contrib/ddimage
    ../sources/poky/scripts/runqemu-addptable2image
    ../sources/poky/documentation/ref-manual/ref-images.xml
    ../sources/poky/documentation/ref-manual/figures/image-generation.png
    ../sources/poky/documentation/ref-manual/figures/images.png
    ../sources/poky/documentation/mega-manual/figures/image-generation.png
    ../sources/poky/documentation/mega-manual/figures/images.png
    ../sources/poky/documentation/mega-manual/figures/using-a-pre-built-image.png
    ../sources/poky/documentation/mega-manual/figures/building-an-image.png
    ../sources/poky/documentation/yocto-project-qs/figures/using-a-pre-built-image.png
    ../sources/poky/documentation/yocto-project-qs/figures/building-an-image.png
    ../sources/poky/bitbake/bin/image-writer
    ../sources/poky/bitbake/lib/toaster/orm/migrations/0005_auto__add_target_image_file__add_target_file__add_field_variablehistor.py
    ../sources/poky/bitbake/lib/toaster/orm/migrations/0006_auto__add_field_target_image_size__add_field_target_license_manifest_p.py
    ../sources/poky/bitbake/lib/toaster/toastergui/static/css/images
    ../sources/poky/bitbake/lib/bb/ui/icons/images
    ../sources/poky/bitbake/lib/bb/ui/icons/images/images_hover.png
    ../sources/poky/bitbake/lib/bb/ui/icons/images/images_display.png
    ../sources/poky/bitbake/lib/bb/ui/crumbs/imagedetailspage.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/imageconfigurationpage.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/saveimagedialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/retrieveimagedialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/imageselectiondialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/deployimagedialog.py
    ../sources/poky/meta-selftest/recipes-test/images
    ../sources/poky/meta-selftest/recipes-test/images/oe-selftest-image.bb
    ../sources/poky/meta/recipes-extended/images
    ../sources/poky/meta/recipes-extended/images/core-image-lsb-sdk.bb
    ../sources/poky/meta/recipes-extended/images/core-image-full-cmdline.bb
    ../sources/poky/meta/recipes-extended/images/core-image-kernel-dev.bb
    ../sources/poky/meta/recipes-extended/images/core-image-lsb.bb
    ../sources/poky/meta/recipes-extended/images/core-image-testmaster.bb
    ../sources/poky/meta/recipes-extended/images/core-image-lsb-dev.bb
    ../sources/poky/meta/recipes-extended/images/core-image-testmaster-initramfs.bb
    ../sources/poky/meta/recipes-multimedia/gstreamer/gst-ffmpeg-0.10.13/0001-avcodec-msrle-use-av_image_get_linesize-to-calculate.patch
    ../sources/poky/meta/recipes-qt/images
    ../sources/poky/meta/recipes-qt/images/qt4e-demo-image.bb
    ../sources/poky/meta/recipes-qt/qt4/qt4-4.8.6/0028-Don-t-crash-on-broken-GIF-images.patch
    ../sources/poky/meta/recipes-graphics/xorg-lib/xcb-util-image_0.4.0.bb
    ../sources/poky/meta/recipes-graphics/images
    ../sources/poky/meta/recipes-graphics/images/core-image-x11.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-directfb.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-weston.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-clutter.bb
    ../sources/poky/meta/recipes-devtools/mkelfimage
    ../sources/poky/meta/recipes-devtools/mkelfimage/mkelfimage
    ../sources/poky/meta/recipes-devtools/mkelfimage/mkelfimage_git.bb
    ../sources/poky/meta/recipes-core/images
    ../sources/poky/meta/recipes-core/images/core-image-minimal.bb
    ../sources/poky/meta/recipes-core/images/core-image-base.bb
    ../sources/poky/meta/recipes-core/images/build-appliance-image_12.0.1.bb
    ../sources/poky/meta/recipes-core/images/build-appliance-image
    ../sources/poky/meta/recipes-core/images/core-image-minimal-mtdutils.bb
    ../sources/poky/meta/recipes-core/images/core-image-minimal-dev.bb
    ../sources/poky/meta/recipes-core/images/core-image-minimal-initramfs.bb
    ../sources/poky/meta/classes/image-buildinfo.bbclass
    ../sources/poky/meta/classes/testimage-auto.bbclass
    ../sources/poky/meta/classes/testimage.bbclass
    ../sources/poky/meta/classes/image_types_uboot.bbclass
    ../sources/poky/meta/classes/image-vmdk.bbclass
    ../sources/poky/meta/classes/core-image.bbclass
    ../sources/poky/meta/classes/image.bbclass
    ../sources/poky/meta/classes/image_types.bbclass
    ../sources/poky/meta/classes/image-prelink.bbclass
    ../sources/poky/meta/classes/image-swab.bbclass
    ../sources/poky/meta/classes/image-live.bbclass
    ../sources/poky/meta/classes/image-mklibs.bbclass
    ../sources/poky/meta/lib/oe/image.py
    ../sources/poky/meta/lib/oeqa/controllers/masterimage.py
    ../sources/poky/meta/recipes-bsp/u-boot/u-boot-mkimage_2015.01.bb
    ../sources/poky/meta/recipes-rt/images
    ../sources/poky/meta/recipes-rt/images/core-image-rt.bb
    ../sources/poky/meta/recipes-rt/images/core-image-rt-sdk.bb
    ../sources/poky/meta/recipes-connectivity/connman/connman-gnome/images
    ../sources/poky/meta/recipes-sato/images
    ../sources/poky/meta/recipes-sato/images/core-image-sato.bb
    ../sources/poky/meta/recipes-sato/images/core-image-sato-dev.bb
    ../sources/poky/meta/recipes-sato/images/core-image-sato-sdk.bb
    ../sources/poky/meta-skeleton/recipes-multilib/images
    ../sources/poky/meta-skeleton/recipes-multilib/images/core-image-multilib-example.bb
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image/libsdl-image
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image/libsdl-image_1.2.12.bb
    ../sources/meta-openembedded/meta-oe/recipes-graphics/lxdm/lxdm/0001-lxdm.conf.in-blacklist-root-for-release-images.patch
    ../sources/meta-openembedded/meta-oe/recipes-graphics/nonworking/slim/slim/0002-Fix-image-handling-integer-overflows.patch
    ../sources/meta-openembedded/meta-oe/recipes-support/imagemagick
    ../sources/meta-openembedded/meta-oe/recipes-support/imagemagick/imagemagick_6.8.9.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-kexecboot-klibc-image.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-debug-image.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-kexecboot-image.bb
    ../sources/Documentation/release-notes/source/images.inc
    ../sources/Documentation/user-guide/source/images.rst
    ../sources/Documentation/user-guide/source/image-list.inc
    ../sources/meta-fsl-demos/recipes-qt/images
    ../sources/meta-fsl-demos/recipes-qt/images/qt-in-use-image.bb
    ../sources/meta-fsl-demos/recipes-qt/images/qte-in-use-image.bb
    ../sources/meta-fsl-demos/recipes-fsl/images
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-machine-test.bb
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-multimedia-full.bb
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-multimedia.bb
</code></pre>

<h3>4.4.3   Start to build</h3>

<pre><code>//list core-image-base all task 
$ bitbake -c listtasks core-image-base

// download all source only 
$ bitbake -c fetchall core-image-base

//build
$ bitbake core-image-base
</code></pre>

<h1>5.      Build image for imx6 using ltib</h1>

<h2>5.1     Get imx6 bsp source from fresscale sit</h2>

<pre><code>Version: L3.0.35_4.1.0_130816_source.gz
$ cd ~/ltib_src
$ tar xvf L3.0.35_4.1.0_130816_source.gz
</code></pre>

<h2>5.2     Add user super privilege to visudo</h2>

<pre><code>$sudo /usr/sbin/visudo

#add below line for vmuser account super privilege
vmuser ALL = NOPASSWD: /usr/bin/rpm, /opt/freescale/ltib/usr/bin/rpm
</code></pre>

<h2>5.3     Install LTIB</h2>

<pre><code>$ cd ~/ltib_src
$ ./L3.0.35_4.1.0_130816_source/install

......
Installation complete, your ltib installation has been placed in 
/home/vmuser/ltib_src/ltib, to complete the installation:

cd /home/vmuser/ltib_src/ltib
./ltib
</code></pre>

<h2>5.4     Apply ltib ubuntu patch</h2>

<h3>5.4.1   Add librt.so link</h3>

<pre><code>$ sudo ln -s /usr/lib/x86_64-linux-gnu/librt.so   /usr/lib/librt.so
</code></pre>

<h3>5.4.2   Apply 0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch</h3>

<pre><code>$ cd /home/vmuser/ltib_src/ltib
$ wget https://community.freescale.com/servlet/JiveServlet/download/100725-3-274381/0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch.zip
$ unzip 0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch.zip
$ git apply 0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch
</code></pre>

<h2>5.5     Fist build LTIB for imx6q-sdb</h2>

<pre><code>$ cd /home/vmuser/ltib_src/ltib

$ ./ltib -m config

Platform choice (Freescale iMX reference boards)  ---&gt;


Choose the platform type
Selection (imx6q)  ---&gt;


Choose the packages profile
Selection (use packages in preconfig (Min profile))  ---&gt;


(imx6q) Platform
--- LTIB settings
     System features  ---&gt;
--- Choose the target C library type
    Target C library type (glibc)  ---&gt;
    C library package (from toolchain only)  ---&gt;
    Toolchain component options  ---&gt;
--- Toolchain selection.
    Toolchain (ARM, gcc-4.6.2, multilib, neon optimized, gnueabi/eglibc2.13)  ---&gt;
(-O2 -march=armv7-a -mfpu=vfpv3 -mfloat-abi=softfp) Enter any CFLAGS for gcc/g++ (NEW)
--- Choose your bootloader for U-Boot
    bootloader (u-boot)  ---&gt;
    u-boot version (u-boot v2009.08)  ---&gt;
--- Choose your board for u-boot
    board (mx6q_sabresd)  ---&gt;
--- Choose your Kernel
    kernel (Linux 3.0.35-imx)  ---&gt;
[ ] Always rebuild the kernel
[ ] Produce cscope index
--- Include kernel headers
[*] Configure the kernel

...

--- Package selection 
    Package list  ---&gt;
--- Target System Configuration
    Options  ---&gt;
--- Target Image Generation
    Options  ---&gt;
---
Load an Alternate Configuration File
Save Configuration to an Alternate File


--- Platform specific package selection

[*] gpu-viv-bin-mx6q

[*] dbus

[*] expat

[*] libjpeg

[*] libpng


$ ./ltib

$ config kernel 

Device Driver ---&gt;
MXC support drivers ---&gt;
        MXC Vivante GPU Support ---&gt;
    &lt;*&gt; MXC vivante GPU support
</code></pre>

<h2>5.6     Build IMX6 GPU SDK</h2>

<pre><code>$ tar -xzvf gpu_sdk_v1.00.tar.gz -C ./gpu_sdk_v1.00
$ cd gpu_sdk_v1.00
</code></pre>

<h3>5.6.1   Build DevIL lib</h3>

<pre><code>$ cd gpu_sdk_v1.00
$ cp Demos/MultiAPI/GIFT/resources/required_libs/DevIL/DevIL-1.7.8.tar.gz  /opt/freescale/pkgs/
$ cp Demos/MultiAPI/GIFT/resources/required_libs/DevIL/DevIL-1.7.8.tar.gz.md5  /opt/freescale/pkgs/
$ mkdir /home/vmuser/ltib_src/ltib/dist/lfs-5.1/devil
$ cp Demos/MultiAPI/GIFT/resources/required_libs/DevIL/DevIL-1.7.8.spec /home/vmuser/ltib_src/ltib/dist/lfs-5.1/devil/
$ 
$ cd /home/vmuser/ltib_src/ltib/
$ dos2unix dist/lfs-5.1/devil/DevIL-1.7.8.spec
$ ./ltib -m prep -p DevIL-1.7.8.spec
$ ./ltib -m scbuild -p DevIL-1.7.8.spec
$ ./ltib -m scdeploy -p DevIL-1.7.8.spec
</code></pre>

<h3>5.6.2   Build assimp-2.0.863-sdk</h3>

<pre><code>$ cd /home/vmuser/project/gpu_sdk/gpu_sdk_v1.00/Demos/MultiAPI/GIFT/resources/required_libs/assimp-2.0.863
$ tar -xzvf assimp-2.0.863-sdk.tar.gz -C ./assimp-2.0.863-sdk
$ cd assimp-2.0.863-sdk
$ cd imx6
$ edit imx6_toolchain as below

# this one is important
SET(CMAKE_SYSTEM_NAME Linux)
#this one not so much
SET(CMAKE_SYSTEM_VERSION 1)

# specify the cross compiler
SET(CMAKE_C_COMPILER   /opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/bin/arm-fsl-linux-gnueabi-gcc)
SET(CMAKE_CXX_COMPILER /opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/bin/arm-fsl-linux-gnueabi-g++)

# where is the target environment 
SET(CMAKE_FIND_ROOT_PATH  /home/vmuser/ltib_src/ltib/rootfs)

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

$ cmake -DCMAKE_TOOLCHAIN_FILE=./imx6_toolchain -DENABLE_BOOST_WORKAROUND=ON ..
$ make


$ ls code/ -alh
total 9.9M
drwxrwxr-x 3 vmuser vmuser 4.0K Apr 20 19:24 .
drwxr-xr-x 5 vmuser vmuser 4.0K Apr 20 18:50 ..
drwxrwxr-x 3 vmuser vmuser 4.0K Apr 20 18:50 CMakeFiles
-rw-rw-r-- 1 vmuser vmuser  12K Apr 20 18:50 cmake_install.cmake
lrwxrwxrwx 1 vmuser vmuser   14 Apr 20 19:24 libassimp.so -&gt; libassimp.so.2
lrwxrwxrwx 1 vmuser vmuser   18 Apr 20 19:24 libassimp.so.2 -&gt; libassimp.so.2.0.0
-rwxrwxr-x 1 vmuser vmuser 9.7M Apr 20 19:24 libassimp.so.2.0.0
-rw-rw-r-- 1 vmuser vmuser 143K Apr 20 18:50 Makefile

$ ls ../include/ -alh
total 440K
drwxr-xr-x  3 vmuser vmuser 4.0K Apr 20 18:34 .
drwxrwxr-x 13 vmuser vmuser 4.0K Apr 20 18:34 ..
-rw-r--r--  1 vmuser vmuser  15K Nov 22  2010 aiAnim.h
-rw-r--r--  1 vmuser vmuser  701 Nov 22  2010 aiAssert.h
-rw-r--r--  1 vmuser vmuser 7.3K Nov 22  2010 aiCamera.h
-rw-r--r--  1 vmuser vmuser 3.5K Nov 22  2010 aiColor4D.h
-rw-r--r--  1 vmuser vmuser 6.9K Nov 22  2010 aiColor4D.inl
-rw-r--r--  1 vmuser vmuser  27K Nov 22  2010 aiConfig.h
-rw-r--r--  1 vmuser vmuser 9.8K Nov  2  2011 aiDefines.h
-rw-r--r--  1 vmuser vmuser 4.5K Nov 22  2010 aiFileIO.h
-rw-r--r--  1 vmuser vmuser 7.8K Nov 22  2010 aiLight.h
-rw-r--r--  1 vmuser vmuser  48K Nov 22  2010 aiMaterial.h
-rw-r--r--  1 vmuser vmuser 6.1K Nov 22  2010 aiMaterial.inl
-rw-r--r--  1 vmuser vmuser 5.7K Nov 22  2010 aiMatrix3x3.h
-rw-r--r--  1 vmuser vmuser 7.7K Nov 22  2010 aiMatrix3x3.inl
-rw-r--r--  1 vmuser vmuser 8.7K Nov 22  2010 aiMatrix4x4.h
-rw-r--r--  1 vmuser vmuser  15K Nov 22  2010 aiMatrix4x4.inl
-rw-r--r--  1 vmuser vmuser  24K Nov 22  2010 aiMesh.h
-rw-r--r--  1 vmuser vmuser  28K Nov 22  2010 aiPostProcess.h
-rw-r--r--  1 vmuser vmuser  11K Nov 22  2010 aiQuaternion.h
-rw-r--r--  1 vmuser vmuser  14K Nov 22  2010 aiScene.h
-rw-r--r--  1 vmuser vmuser 6.4K Nov 22  2010 aiTexture.h
-rw-r--r--  1 vmuser vmuser  15K Nov 22  2010 aiTypes.h
-rw-r--r--  1 vmuser vmuser 5.5K Nov 22  2010 aiVector2D.h
-rw-r--r--  1 vmuser vmuser 4.0K Nov 22  2010 aiVector3D.h
-rw-r--r--  1 vmuser vmuser 8.6K Nov 22  2010 aiVector3D.inl
-rw-r--r--  1 vmuser vmuser 4.1K Nov 22  2010 aiVersion.h
-rw-r--r--  1 vmuser vmuser  19K Nov 22  2010 assimp.h
-rw-r--r--  1 vmuser vmuser  27K Nov 22  2010 assimp.hpp
drwxr-xr-x  2 vmuser vmuser 4.0K Apr 20 18:34 Compiler
-rw-r--r--  1 vmuser vmuser 7.5K Nov 22  2010 DefaultLogger.h
-rw-r--r--  1 vmuser vmuser 4.8K Nov 22  2010 IOStream.h
-rw-r--r--  1 vmuser vmuser 8.0K Nov 22  2010 IOSystem.h
-rw-r--r--  1 vmuser vmuser 8.9K Nov 22  2010 Logger.h
-rw-r--r--  1 vmuser vmuser 3.8K Nov 22  2010 LogStream.h
-rw-r--r--  1 vmuser vmuser 3.3K Nov 22  2010 NullLogger.h
-rw-r--r--  1 vmuser vmuser 3.7K Nov 22  2010 ProgressHandler.h

$ copy *.so to  /home/vmuser/ltib_src/ltib/usr/lib

$ copy *.h to   /home/vmuser/ltib_src/ltib/usr/include/ASSIMP

$ ced /home/vmuser/ltib_src/ltib/usr/lib
$ sudo ln -s libassimp.so.2.0.0 libassimp.so.2
$ sudo ln -s libassimp.so.2 libassimp.so
$ ls libassimp.so* -alh
lrwxrwxrwx 1 root root   14 Apr 20 19:51 libassimp.so -&gt; libassimp.so.2
lrwxrwxrwx 1 root root   18 Apr 20 19:51 libassimp.so.2 -&gt; libassimp.so.2.0.0
-rwxr-xr-x 1 root root 9.7M Apr 20 19:49 libassimp.so.2.0.0
</code></pre>

<h3>5.6.3   Build GIFT</h3>

<pre><code>$ tar -xzvf GIFT_v4.tar.gz -C ./GIFT_v4
$ cd GIFT_v4

$ edit Makefile as below

#----------------- development environment here
#important so we know where the libraries are
LTIB_ROOTFS=/home/vmuser/ltib_src/ltib/rootfs
LTIB_SRC=/home/vmuser/ltib_src/ltib/rpm/BUILD/linux

#set CROSS_COMPILE as below
CROSS_COMPILE = /opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/bin/arm-fsl-linux-gnueabi-

#extra headers
EXTRA_INC =  $(LTIB_SRC)/include

#system headers
FSL_PLATFORM_INC = $(LTIB_ROOTFS)/usr/include

#extra libraries
EXTRA_LIB = 

#system libraries
FSL_PLATFORM_LIB = $(LTIB_ROOTFS)/usr/lib

#random needed vars
ARCH = arm
CD = cd
DEL_FILE = rm -f
MKDIR = mkdir -p
RMDIR = rmdir
CC = $(CROSS_COMPILE)g++
AR = $(CROSS_COMPILE)ar
LD = $(CROSS_COMPILE)g++
CP = cp
MAKE = make

#CFLAGS = -DDEBUG -D_DEBUG -D_GNU_SOURCE -mfloat-abi=softfp -mfpu=neon -fPIC -O3 -fno-strict-aliasing -fno-optimize-sibling-calls -Wall -g

CFLAGS = -DLINUX -DEGL_API_FB -mfloat-abi=softfp -mfpu=vfpv3 -fPIC -fno-strict-aliasing -fno-optimize-sibling-calls -O2 -march=armv7-a -mapcs-frame -fPIC -Wall -W -Wno-unused-parameter

CFLAGS += -I$(FSL_PLATFORM_INC) -I$(EXTRA_INC)

LFLAGS = -Wl,--library-path=$(FSL_PLATFORM_LIB),-rpath-link=$(FSL_PLATFORM_LIB) -ldl

EGL_FLAGS = -lEGL

ES11_FLAGS = -lGLESv1_CM

ES20_FLAGS = -lGLESv2 

VG11_FLAGS = -lOpenVG

ASSIMP_FLAGS = -lassimp

DEVIL_FLAGS = -lIL

#-----------------for each app here

APPNAME         = gift
DESTDIR         = ./bin
SRCDIR          = .

#LFLAGS                  += $(EGL_FLAGS) $(ES20_FLAGS) -lm
LFLAGS          += $(EGL_FLAGS) $(ES20_FLAGS) $(ASSIMP_FLAGS) $(DEVIL_FLAGS) -lm

OBJECTS         = GIFT.o obj3d.o TouchScreen.o SceneManager.o fslutil.o

first: all

all: $(APPNAME)

.PHONY: all

$(APPNAME): $(OBJECTS) 
    -@$(MKDIR) $(DESTDIR)
    $(LD) $(LFLAGS) -o $(DESTDIR)/$(APPNAME) $(OBJECTS)

%.o : %.cpp
    $(CC) $(CFLAGS) -c $&lt; -o $@

clean:
    $(DEL_FILE) $(OBJECTS) $(UTILOBJS)
    $(DEL_FILE) *~ core *.core

distclean: clean
    $(DEL_FILE) $(DESTDIR)/$(APPNAME)
    -@$(RMDIR) $(DESTDIR)


$ edit fslutil.c as below

...
#include &lt;EGL/egl.h&gt;
#include "fslutil.h" //#include &lt;fslutil.h&gt;
#include &lt;IL/il.h&gt;
...

$ make clean
$ make
$ ls bin/ -alh
total 60K
drwxrwxr-x 2 vmuser vmuser 4.0K Apr 20 20:16 .
drwxrwxr-x 4 vmuser vmuser 4.0K Apr 20 20:16 ..
-rwxrwxr-x 1 vmuser vmuser  52K Apr 20 20:16 gift
</code></pre>

<h1>6   Build image for imx6 using buildroot</h1>

<h2>6.1 Get buildroot source code</h2>

<pre><code>$ git clone http://git.buildroot.net/git/buildroot.git buildroot.git
$ cd buildroot.git
</code></pre>

<h2>6.2 Build using freescale_imx6qsabresd_defconfig default config</h2>

<pre><code>$ cd buildroot.git
$ make freescale_imx6qsabresd_defconfig
$ make
</code></pre>

<h2>6.3 Using eglibc</h2>

<pre><code>$ make menuconfig

    Toolchain type (Buildroot toolchain)  ---&gt;
    (buildroot) custom toolchain vendor name

    *** Kernel Header Options ***
    Kernel Headers (Manually specified Linux version)  ---&gt;
    (3.10.17) linux version
    Custom kernel headers series (3.10.x)  ---&gt;

    C library (eglibc)  ---&gt;
    eglibc version (2.18-svnr23787)  ---&gt; 

    ......

$ make
</code></pre>

<h2>6.4 Change device node management to static</h2>

<pre><code>$ cd buildroot.git
$ add system/device_table_imx6.txt as below
    # See package/makedevs/README for details
    #
    # This device table is used to assign proper ownership and permissions
    # on various files. It doesn't create any device file, as it is used
    # in both static device configurations (where /dev/ is static) and in
    # dynamic configurations (where devtmpfs, mdev or udev are used).
    #
    # &lt;name&gt;                        &lt;type&gt;  &lt;mode&gt;  &lt;uid&gt;   &lt;gid&gt;   &lt;major&gt; &lt;minor&gt; &lt;start&gt; &lt;inc&gt;   &lt;count&gt;
    /dev                            d       755     0       0       -       -       -       -       -
    /tmp                            d       1777    0       0       -       -       -       -       -
    /etc                            d       755     0       0       -       -       -       -       -
    /root                           d       700     0       0       -       -       -       -       -
    #/var/www                       d       755     33      33      -       -       -       -       -
    /etc/random-seed                f       600     0       0       -       -       -       -       -
    /etc/shadow                     f       600     0       0       -       -       -       -       -
    /etc/passwd                     f       644     0       0       -       -       -       -       -
    #/etc/network/if-up.d           d       755     0       0       -       -       -       -       -
    #/etc/network/if-pre-up.d       d       755     0       0       -       -       -       -       -
    #/etc/network/if-post-up.d      d       755     0       0       -       -       -       -       -
    #/etc/network/if-down.d         d       755     0       0       -       -       -       -       -
    #/etc/network/if-pre-down.d     d       755     0       0       -       -       -       -       -
    #/etc/network/if-post-down.d        d       755     0       0       -       -       -       -       -

    # uncomment this to allow starting x as non-root
    #/usr/X11R6/bin/Xfbdev          f       4755    0       0       -       -       -       -       -

$ add system/device_table_dev_imx6.txt as below
    # See package/makedevs/README for details
    #
    # This device table is used only to create device files when a static
    # device configuration is used (entries in /dev are static).
    #
    # &lt;name&gt;            &lt;type&gt;  &lt;mode&gt;  &lt;uid&gt;   &lt;gid&gt;   &lt;major&gt; &lt;minor&gt; &lt;start&gt; &lt;inc&gt;   &lt;count&gt;

    # Normal system devices
    /dev/null           c       666     0       0       1       3       0       0       -
    /dev/console        c       666     0       0       5       1       -       -       -
    /dev/ttymxc         c       666     0       0       207     16      0       1       4

$ make menuconfig

    (buildroot) System hostname
    (Welcome to Buildroot) System banner
        Passwords encoding (md5)  ---&gt;
        Init system (BusyBox)  ---&gt;
        /dev management (Static using device table)  ---&gt;
    (system/device_table_imx6.txt) Path to the permission tables
    (system/device_table_dev_imx6.txt) Path to the device tables
        Root FS skeleton (default target skeleton)  ---&gt;

    ......

$ make  
</code></pre>

<h2>6.5 Remove login prompt</h2>

<pre><code>//todo it seems not work correctly
$ cd buildroot.git
$ make menuconfig

    ......

    [ ] Run a getty (login prompt) after boot

    ......

$ make

//try this method
$ cd buildroot.git
$ make busybox-menuconfig

    ......

    [*] getty
    [ ] login                                                                                                                      
    [ ] Run logged in session in a child process

    ......

$ make
</code></pre>

<h2>6.6 Add gpu driver</h2>

<pre><code>$ cd buildroot.git
$ make menuconfig

    Target packages  ---&gt;

        Hardware handling  ---&gt;

            [*] Freescale i.MX libraries  ---&gt;

    --- Freescale i.MX libraries                                                                                            
    i.MX platform (imx6q)  ---&gt;                                                                                     
    *** imx-lib needs an imx-specific Linux kernel to be built ***                                                      
    *** imx-vpu needs an imx-specific Linux kernel to be built ***
    [ ]   firmware-imx (NEW)
    [*]   gpu-viv-bin-mx6q                                                                                                
    [*]     install examples 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build U-boot for Riot Board]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/15/build-u-boot-for-riot-board/"/>
    <updated>2015-04-15T14:52:23+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/15/build-u-boot-for-riot-board</id>
    <content type="html"><![CDATA[<h2>1. Get u-boot source</h2>

<pre><code>git clone https://github.com/Freescale/u-boot-fslc.git
</code></pre>

<h2>2. make &amp; build</h2>

<pre><code>$cd u-boot-fslc
$export ARCH=arm 
$export CROSS_COMPILE=arm-linux-gnueabihf-
$make riotboard_defconfig 
$make
$ls ls -l u-boot.*
    -rw-rw-r-- 1 jordon jordon 331492 Dec  7 05:44 u-boot.bin
    -rw-rw-r-- 1 jordon jordon 334848 Dec  7 05:44 u-boot.imx
    -rw-rw-r-- 1 jordon jordon   1286 Dec  7 05:44 u-boot.lds
    -rw-rw-r-- 1 jordon jordon 317244 Dec  7 05:44 u-boot.map
    -rw-rw-r-- 1 jordon jordon 994618 Dec  7 05:44 u-boot.srec
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Openwrt Firmware]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/15/build-openwrt-firmware/"/>
    <updated>2015-04-15T14:51:54+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/15/build-openwrt-firmware</id>
    <content type="html"><![CDATA[<h1>1. Hardware</h1>

<p>wrtnode board <a href="http://cn.wrtnode.com/">http://cn.wrtnode.com/</a></p>

<h1>2. Backup firmware</h1>

<h2>1) ssh to wrtnode board</h2>

<pre><code>root@OpenWrt:/tmp# cat /proc/mtd
dev:    size   erasesize  name
mtd0: 00030000 00010000 "u-boot"
mtd1: 00010000 00010000 "u-boot-env"
mtd2: 00010000 00010000 "factory"
mtd3: 00fb0000 00010000 "firmware"
mtd4: 00e96447 00010000 "rootfs"
mtd5: 00780000 00010000 "rootfs_data"
</code></pre>

<h2>2) back up u-boot and factory partition to /tmp</h2>

<pre><code>root@OpenWrt:/tmp# dd if=/dev/mtd0 of=/tmp/wrtnode_u-boot.backup
root@OpenWrt:/tmp# dd if=/dev/mtd1 of=/tmp/wrtnode_u-boot-env.backup
root@OpenWrt:/tmp# dd if=/dev/mtd2 of=/tmp/wrtnode_factory.backup
root@OpenWrt:/tmp# cat /proc/mtd &gt; wrtnode_mtd_info.txt
</code></pre>

<h2>3) scp backup firmware to local pc</h2>

<pre><code>$ scp root@192.168.8.1:/tmp/wrtnode_u-boot.backup .
$ scp root@192.168.8.1:/tmp/wrtnode_u-boot-env.backup .
$ scp root@192.168.8.1:/tmp/wrtnode_factory.backup .
$ scp root@192.168.8.1:/tmp/wrtnode_mtd_info.txt .
</code></pre>

<h1>3. Build u-boot</h1>

<h1>4. Build kernel</h1>

<h1>5. Build openwrt image</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Install and Usage on Windows 7]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/14/install-octopress-on-windows-7/"/>
    <updated>2015-04-14T09:15:12+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/14/install-octopress-on-windows-7</id>
    <content type="html"><![CDATA[<h2>1.   Install git</h2>

<pre><code>    Version : Git-1.9.2-preview20140411.exe
</code></pre>

<h2>2.   Install RubyInstaller</h2>

<pre><code>    Version: rubyinstaller-2.1.5-x64
</code></pre>

<h2>3.   Add Ruby install path(Example: D:\Ruby\Ruby21-x64\bin) to user&rsquo;s PATH Environment Variable</h2>

<h2>4.   Install RubyInstaller DevKit</h2>

<pre><code>    Version: DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe
</code></pre>

<h2>5.   RubyInstaller DevKit configure</h2>

<h3>5.1 change to DevKit install dir</h3>

<pre><code>    D:\&gt; cd d:\Ruby\DevKit
</code></pre>

<h3>5.2 ruby dk.rb init</h3>

<pre><code>    d:\Ruby\DevKit&gt; ruby dk.rb init

    Initialization complete! Please review and modify the auto-generated
    'config.yml' file to ensure it contains the root directories to all
    of the installed Rubies you want enhanced by the DevKit.

    Add Ruby install path to config.yml as below

    #####################################################################
    #
    # Example:
    #
    # ---
    # - C:/ruby19trunk
    # - C:/ruby192dev
    #

    - D:\Ruby\Ruby21-x64        

    ######################################################################
</code></pre>

<h3>5.3 ruby dk.rb install</h3>

<pre><code>    d:\Ruby\DevKit&gt; ruby dk.rb install
</code></pre>

<h2>6.   Change ruby sources to &ldquo;<a href="http://ruby.taobao.org/">http://ruby.taobao.org/</a>&rdquo;</h2>

<pre><code>    D:\&gt; cd d:\Ruby\DevKit

    d:\Ruby\DevKit&gt; gem sources --remove http://rubygems.org/

    d:\Ruby\DevKit&gt; gem sources --remove https://rubygems.org/

    d:\Ruby\DevKit&gt; gem sources -a http://ruby.taobao.org/

    d:\Ruby\DevKit&gt; gem sources -l

    *** CURRENT SOURCES ***

    http://ruby.taobao.org/
</code></pre>

<h2>7.   Install rdoc and bundler</h2>

<pre><code>    D:\&gt; cd d:\Ruby\DevKit

    d:\Ruby\DevKit&gt;gem install rdoc bundler

    Depending on your version of ruby, you may need to install ruby rdoc/ri data:

    &lt;= 1.8.6 : unsupported
     = 1.8.7 : gem install rdoc-data; rdoc-data --install
     = 1.9.1 : gem install rdoc-data; rdoc-data --install
    &gt;= 1.9.2 : nothing to do! Yay!
    Successfully installed rdoc-4.2.0
    Parsing documentation for rdoc-4.2.0
    Done installing documentation for rdoc after 5 seconds
    Successfully installed bundler-1.9.3
    Parsing documentation for bundler-1.9.3
    Done installing documentation for bundler after 2 seconds
    2 gems installed
</code></pre>

<h2>8    Install Octopress blog if you first using it on github</h2>

<h3>8.1 Create repo on your github</h3>

<pre><code>    Create a repo named username.github.com.git on your github
</code></pre>

<h3>8.2 Clone octopress.git</h3>

<pre><code>    $ git clone git://github.com/imathis/octopress.git username.github.com
</code></pre>

<h3>8.3 Modify octopress GEM Source</h3>

<pre><code>    $cd username.github.com

    $edit Gemfile  and change source "http://rubygems.org/"  to source "http://ruby.taobao.org/" 

    source "http://ruby.taobao.org/"
</code></pre>

<h3>8.4 Install GEM component</h3>

<pre><code>    $ bundle install

    DL is deprecated, please use Fiddle
    Fetching source index from http://ruby.taobao.org/
    Resolving dependencies...............
    Installing rake 10.4.2
    Using RedCloth 4.2.9
    Installing blankslate 2.1.2.4
    Installing hitimes 1.2.2
    Installing timers 4.0.1
    Installing celluloid 0.16.0
    Using chunky_png 1.3.4
    Using fast-stemmer 1.0.2
    Installing classifier-reborn 2.0.3
    Installing coffee-script-source 1.9.1.1
    Installing execjs 2.5.2
    Installing coffee-script 2.4.1
    Installing colorator 0.1
    Installing multi_json 1.11.0
    Installing sass 3.4.13
    Installing compass-core 1.0.3
    Installing compass-import-once 1.0.5
    Using rb-fsevent 0.9.4
    Installing ffi 1.9.8
    Installing rb-inotify 0.9.5
    Installing compass 1.0.3
    Using tilt 2.0.1
    Installing haml 4.0.6
    Installing jekyll-coffeescript 1.0.1
    Installing jekyll-gist 1.2.1
    Installing jekyll-paginate 1.1.0
    Installing jekyll-sass-converter 1.3.0
    Installing listen 2.10.0
    Installing jekyll-watch 1.2.1
    Installing kramdown 1.6.0
    Installing liquid 2.6.2
    Installing mercenary 0.3.5
    Using posix-spawn 0.3.11
    Installing yajl-ruby 1.2.1
    Installing pygments.rb 0.6.3
    Installing redcarpet 3.2.3
    Installing safe_yaml 1.0.4
    Installing parslet 1.5.0
    Installing toml 0.1.2
    Installing jekyll 2.5.3
    Installing jekyll-sitemap 0.8.1
    Installing octopress-hooks 2.6.0
    Installing octopress-date-format 2.0.2
    Using rack 1.6.0
    Using rack-protection 1.5.3
    Installing rdiscount 2.1.8
    Using rubypants 0.2.0
    Using sass-globbing 1.0.0
    Using sinatra 1.4.6
    Using stringex 1.4.0
    Using bundler 1.9.3
    Bundle complete! 14 Gemfile dependencies, 51 gems now installed.
    Use `bundle show [gemname]` to see where a bundled gem is installed.
    Post-install message from compass:
        Compass is charityware. If you love it, please donate on our behalf at http://umdf.org/compass Thanks!
    Post-install message from haml:

    HEADS UP! Haml 4.0 has many improvements, but also has changes that may break
    your application:

    * Support for Ruby 1.8.6 dropped
    * Support for Rails 2 dropped
    * Sass filter now always outputs &lt;style&gt; tags
    * Data attributes are now hyphenated, not underscored
    * html2haml utility moved to the html2haml gem
    * Textile and Maruku filters moved to the haml-contrib gem

    For more info see:

    http://rubydoc.info/github/haml/haml/file/CHANGELOG.md
</code></pre>

<h3>8.5 Install Octopress template file</h3>

<pre><code>    $ rake install

    rake aborted!
    You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6. Prepending `bundle exec` to your command may solve this.
    e:/study/username.github.com/Rakefile:2:in `&lt;top (required)&gt;'
    (See full trace by running task with --trace)


    #add "aliasalias rake='bundle exec rake'" to git bash bash_profile if display error as above

    $ echo "alias rake='bundle exec rake'" &gt;&gt; ~/.bash_profile

    $ . ~/.bash_profile
    $ aliasalias rake='bundle exec rake'
    $ rake install
</code></pre>

<h2>9    Clone your Octopress if you had used it on github</h2>

<h3>9.1 Clone your Octopress repo</h3>

<pre><code>    $ git clone -b source https://github.com/username/username.github.com.git username.github.com.git   # replace username using yours

    Cloning into 'username.github.com'...
    remote: Counting objects: 5279, done.
    remote: Total 5279 (delta 0), reused 0 (delta 0), pack-reused 5279R
    Receiving objects: 100% (5279/5279), 1.37 MiB | 129.00 KiB/s, done.
    Resolving deltas: 100% (2537/2537), done.
    Checking connectivity... done.
</code></pre>

<h3>9.2 Install Octopress GEM component</h3>

<pre><code>    $ cd username.github.com.git

    $ bundle install

    DL is deprecated, please use Fiddle
    Fetching source index from http://ruby.taobao.org/
    Resolving dependencies...
    Installing rake 0.9.2.2
    Installing RedCloth 4.2.9
    Installing chunky_png 1.2.5
    Installing fast-stemmer 1.0.1
    Installing classifier 1.3.3
    Installing fssm 0.2.9
    Installing sass 3.2.9
    Installing compass 0.12.2
    Installing directory_watcher 1.4.1
    Installing haml 3.1.7
    Installing kramdown 0.13.8
    Installing liquid 2.3.0
    Installing syntax 1.0.0
    Installing maruku 0.6.1
    Installing posix-spawn 0.3.6
    Installing yajl-ruby 1.1.0
    Installing pygments.rb 0.3.4
    Installing jekyll 0.12.0
    Installing rack 1.5.2
    Installing rack-protection 1.5.0
    Installing rb-fsevent 0.9.1
    Installing rdiscount 2.0.7.3
    Installing rubypants 0.2.0
    Installing sass-globbing 1.0.0
    Installing tilt 1.3.7
    Installing sinatra 1.4.2
    Installing stringex 1.4.0
    Using bundler 1.9.3
    Bundle complete! 15 Gemfile dependencies, 28 gems now installed.
    Use `bundle show [gemname]` to see where a bundled gem is installed.
</code></pre>

<h3>9.3 Install Octopress template file</h3>

<pre><code>    $ rake install

    rake aborted!
    You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6. Prepending `bundle exec` to your command may solve this.
    e:/study/username.github.com/Rakefile:2:in `&lt;top (required)&gt;'
    (See full trace by running task with --trace)


    #add "aliasalias rake='bundle exec rake'" to git bash bash_profile if display error as above

    $ echo "alias rake='bundle exec rake'" &gt;&gt; ~/.bash_profile

    $ . ~/.bash_profile
    $ aliasalias rake='bundle exec rake'
    $ rake install
</code></pre>

<h2>10   Add a remote name(default is origin) for the repository git@github.com:username/username.github.com.git</h2>

<pre><code>    $ cd username.github.com.git
    $ git remote

    origin

    $ git remote add origin git@github.com:username/username.github.com.git #default name is origin, you can change it
</code></pre>

<h2>11   setup octopress and github</h2>

<pre><code>    $ cd username.github.com.git
    $ rake setup_github_pages       #you need input username and password of you github account and blog url(https://github.com/username/username.github.com.git)
</code></pre>

<h2>12.  Management blog</h2>

<pre><code>    $ cd username.github.com.git
</code></pre>

<h3>12.1 Add blog</h3>

<pre><code>    $ rake new_post["blog_name"]
</code></pre>

<h3>12.2 Generate static file</h3>

<pre><code>    $ rake generate
</code></pre>

<h3>12.3 Preview blog</h3>

<pre><code>    $ rake preview

    #now you can preview blog using local address on any browser: http://localhost:4000
</code></pre>

<h3>12.4 Deploy blog to github</h3>

<pre><code>    $rake deploy

    #now you can access you blog using github address on any browser: http://username.github.com
</code></pre>

<h2>13. Management blog source code</h2>

<h3>13.1 Add file to local repo</h3>

<pre><code>    $ git add .
</code></pre>

<h3>13.2 Commit file to repo</h3>

<pre><code>    $ git commit -m "commit file comment"
</code></pre>

<h3>13.3 Push local repo file to remote</h3>

<pre><code>    $ git push origin source #origin is local repo name, source is branch name
</code></pre>

<h3>13.4 Pull last remote repo file to local</h3>

<pre><code>    $ git pull orign source
</code></pre>

<h3>13.5 Add a image to your blog</h3>

<pre><code>    1) add image file to source/images folder
    2) add below code to you blog

    ![a brick](../images/a_brick.png "A brick")
</code></pre>

<h3>13.6 Add attach file to your blog</h3>

<pre><code>    1) add attach file to source/images folder
    2) add a hyperlink and link address point to your file(such as ../images/test.txt)
</code></pre>

<p>=<a href="../images/test.txt">Attached file here(test.txt)</a></p>

<h2>14  Enable comment</h2>

<h3>14.1 Register an account on www.disqus.com</h3>

<h3>14.2 Register &ldquo;unique Disqus URL&rdquo; for github blog</h3>

<h3>14.3 Edit _config.yml as below</h3>

<pre><code># Disqus Comments
disqus_short_name: site_short_name_register_on_disqus
disqus_show_comment_count: true
</code></pre>

<h3>14.4 Enable comment on your blog as below</h3>

<pre><code>---
layout: post
title: "title name"
date: 2015-04-15 14:51:54 +0800
comments: true
categories: category1, category2 
---
</code></pre>
]]></content>
  </entry>
  
</feed>
