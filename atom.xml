<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Jordon Wu's Blog]]></title>
  <link href="http://jordonwu.github.io/atom.xml" rel="self"/>
  <link href="http://jordonwu.github.io/"/>
  <updated>2015-09-23T14:33:52+08:00</updated>
  <id>http://jordonwu.github.io/</id>
  <author>
    <name><![CDATA[Jordon Wu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[linux command summary]]></title>
    <link href="http://jordonwu.github.io/blog/2015/09/07/linux-command-summary/"/>
    <updated>2015-09-07T09:18:08+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/09/07/linux-command-summary</id>
    <content type="html"><![CDATA[<h1>1. How to find files by content</h1>

<pre><code>$ find "main(" string in *.c file of current path
$ find . -name "*.c" -print | xargs grep "main("
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sync a fork of a repository to keep it up-to-date with the upstream repository]]></title>
    <link href="http://jordonwu.github.io/blog/2015/06/10/sync-a-fork-of-a-repository-to-keep-it-up-to-date-with-the-upstream-repository/"/>
    <updated>2015-06-10T15:05:40+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/06/10/sync-a-fork-of-a-repository-to-keep-it-up-to-date-with-the-upstream-repository</id>
    <content type="html"><![CDATA[<h1>1. Configuring a remote for a fork</h1>

<p>To sync changes you make in a fork with the original repository, you must configure a remote that points to the upstream repository in Git.</p>

<h2>1.1 Open Terminal (for Mac users) or the command prompt (for Windows and Linux users)</h2>

<h2>1.2 List the current configured remote repository for your fork</h2>

<pre><code>$ git remote -v
  origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
  origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
</code></pre>

<h2>1.3 Specify a new remote upstream repository that will be synced with the fork</h2>

<pre><code>$ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
</code></pre>

<h2>1.4 Verify the new upstream repository you&rsquo;ve specified for your fork</h2>

<pre><code>$ git remote -v
  origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
  origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
  upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)
  upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)
</code></pre>

<h1>2. Syncing a fork</h1>

<p>Sync a fork of a repository to keep it up-to-date with the upstream repository</p>

<p>2.1 Change the current working directory to your local project</p>

<p>2.2 Fetch the branches and their respective commits from the upstream repository. Commits to master will be stored in a local branch, upstream/master.</p>

<pre><code>$ git fetch upstream
  remote: Counting objects: 75, done.
  remote: Compressing objects: 100% (53/53), done.
  remote: Total 62 (delta 27), reused 44 (delta 9)
  Unpacking objects: 100% (62/62), done.
  From https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY
   * [new branch]      master     -&gt; upstream/master
</code></pre>

<p>2.3 Check out your fork&rsquo;s local master branch</p>

<pre><code>$ git checkout master
  Switched to branch 'master'
</code></pre>

<p>2.4 Merge the changes from upstream/master into your local master branch. This brings your fork&rsquo;s master branch into sync with the upstream repository, without losing your local changes.</p>

<pre><code>$ git merge upstream/master
  Updating a422352..5fdff0f
  Fast-forward
  README                    |    9 -------
  README.md                 |    7 ++++++
  2 files changed, 7 insertions(+), 9 deletions(-)
  delete mode 100644 README
  create mode 100644 README.md
</code></pre>

<p>2.5 If your local branch didn&rsquo;t have any unique commits, Git will instead perform a &ldquo;fast-forward&rdquo;:</p>

<pre><code>$ git merge upstream/master
  Updating 34e91da..16c56ad
  Fast-forward
  README.md                 |    5 +++--
  1 file changed, 3 insertions(+), 2 deletions(-)
</code></pre>

<h1>3. Pushing to a remote</h1>

<pre><code>$ git push  &lt;REMOTENAME&gt; &lt;BRANCHNAME&gt;   
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[imx6 summary upgrade ltib L3.0.35_4.1.0 to L3.0.101_4.1.1]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/28/imx6-summary-upgrade-ltib-l3-dot-0-35-4-dot-1-0-to-l3-dot-0-101-4-dot-1-1/"/>
    <updated>2015-05-28T10:50:25+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/28/imx6-summary-upgrade-ltib-l3-dot-0-35-4-dot-1-0-to-l3-dot-0-101-4-dot-1-1</id>
    <content type="html"><![CDATA[<h1>1. Setup and build ltib using bsp L3.0.35_4.1.0_130816</h1>

<h1>2. Download L3.0.101_4.1.1 package</h1>

<pre><code>Version: 
    L3.0.101_4.1.1_141016_source.gz
    IMX_MMCODEC_3.0.101_4.1.1_Bundle.gz
</code></pre>

<h1>3. Upgrade to L3.0.101_4.1.1</h1>

<h2>3.1 Copy the following packages to host /opt/freescale/pkgs</h2>

<pre><code>firmware-imx-3.0.101-4.1.1.tar.gz
imx-vpu-lib-3.0.101-4.1.1.tar.gz
libfslcodec-3.0.11.tar.gz
libfslparser-3.0.11.tar.gz
libfslvpuwrap-1.0.46.tar.gz
gst-fsl-plugins-3.0.11.tar.gz
gst-fsl-plugins-3.0.11-configure.patch
glib2-2.12.1-atomic.patch
gpu-viv-bin-mx6q-3.0.101-4.1.1.tar.gz
gpu-viv-bin-mx6s-3.0.101-4.1.1.tar.gz
gpu-viv-wl-bin-mx6q-3.0.101-4.1.1.tar.gz
gpu-viv-wl-bin-mx6s-3.0.101-4.1.1.tar.gz
linux-3.0.101.tar.bz2 
linux-3.0.101-imx_4.1.1.bz2
u-boot-v2009.08-imx_3.0.101_4.1.1.tar.bz2
</code></pre>

<h2>3.2 Patch ltib_config_platform_imx.patch</h2>

<pre><code>$ cp ltib_config_platform_imx.patch Ltib_installed/config/platform/imx
$ cd Ltib_installed/config/platform/imx
$ patch -p1 –i ltib_config_platform_imx.patch
</code></pre>

<h2>3.3 Patch ltib_dist_lfs-5.1.patch</h2>

<pre><code>$ cp ltib_dist_lfs-5.1.patch Ltib_installed/dist
$ cd Ltib_installed/dist
$ patch -p1 –i ltib_dist_lfs-5.1.patch
</code></pre>

<h1>4. Config and build ltib</h1>

<pre><code>$ cd Ltib_installed/
$ ./ltib –config
$ ./ltib

$ ./ltib -m prep -p u-boot  # fetch u-boot sourc code
$ ./ltib -m prep -p kernel  # fetch kernel souce code
</code></pre>

<p>Done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Imx6 Summary Build Image for Imx6 Using Yocto]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/26/imx6-summary-build-image-for-imx6-using-yocto/"/>
    <updated>2015-05-26T17:07:56+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/26/imx6-summary-build-image-for-imx6-using-yocto</id>
    <content type="html"><![CDATA[<h1>1. Install repo</h1>

<pre><code>$ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo

or

$ install a local repo (repo-local)

$ export PATH=$PATH:/home/vmuser/bin

$ git config --global user.email "user name@email.com"

$ git config --global user.name "User Name" 
</code></pre>

<h1>2. Download freescale community bsp source code</h1>

<pre><code>$ mkdir fsl-community-bsp
$ cd fsl-community-bsp
$ repo init -u https://github.com/Freescale/fsl-community-bsp-platform -b fido
$ repo sync
</code></pre>

<h1>3. Change branch and sync</h1>

<pre><code>$ cd fsl-community-bsp
$ repo init -b master   //master or other branch
$ repo sync
</code></pre>

<h1>4. First build</h1>

<h2>4.1 Sync source code and setup environment</h2>

<pre><code>$ cd fsl-community-bsp
$ repo sync
$ source setup-environment build
$ ls
conf
</code></pre>

<h2>4.2 Choose your board</h2>

<pre><code>$ cd fsl-community-bsp

$ cd build

$ vim conf/local.conf #you can change MACHINE

MACHINE ??= 'imx6qsabresd'
DISTRO ?= 'poky'
PACKAGE_CLASSES ?= "package_rpm"
EXTRA_IMAGE_FEATURES = "debug-tweaks"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"
BB_DISKMON_DIRS = "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K"
CONF_VERSION = "1"

BB_NUMBER_THREADS = '1'
PARALLEL_MAKE = '-j 1'

DL_DIR ?= "${BSPDIR}/downloads/"
ACCEPT_FSL_EULA = "1"


//list all freescale boards conf
$ ls ../sources/meta-fsl-arm/conf/machine/*.conf -l
    -rw-rw-r-- 1 vmuser vmuser  539 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx23evk.conf
    -rw-rw-r-- 1 vmuser vmuser 2440 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx28evk.conf
    -rw-rw-r-- 1 vmuser vmuser  667 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx31pdk.conf
    -rw-rw-r-- 1 vmuser vmuser  603 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx35pdk.conf
    -rw-rw-r-- 1 vmuser vmuser  333 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx51evk.conf
    -rw-rw-r-- 1 vmuser vmuser  469 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx53ard.conf
    -rw-rw-r-- 1 vmuser vmuser  460 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx53qsb.conf
    -rw-rw-r-- 1 vmuser vmuser  638 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6dlsabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  393 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6dlsabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  533 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6qsabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  432 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6qsabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  432 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6slevk.conf
    -rw-rw-r-- 1 vmuser vmuser  615 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6solosabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  468 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6solosabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  542 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/twr-vf65gs10.conf

//list all non-freescale boards conf
$ ls ../sources/meta-fsl-arm-extra/conf/machine/*.conf -l
    -rw-rw-r-- 1 vmuser vmuser  155 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10036.conf
    -rw-rw-r-- 1 vmuser vmuser  199 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10037.conf
    -rw-rw-r-- 1 vmuser vmuser  234 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10049.conf
    -rw-rw-r-- 1 vmuser vmuser  234 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10055.conf
    -rw-rw-r-- 1 vmuser vmuser  229 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10056.conf
    -rw-rw-r-- 1 vmuser vmuser  255 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10057.conf
    -rw-rw-r-- 1 vmuser vmuser  255 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10058.conf
    -rw-rw-r-- 1 vmuser vmuser  466 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cgtqmx6.conf
    -rw-rw-r-- 1 vmuser vmuser  246 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-maxi.conf
    -rw-rw-r-- 1 vmuser vmuser  190 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-micro.conf
    -rw-rw-r-- 1 vmuser vmuser  188 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-mini.conf
    -rw-rw-r-- 1 vmuser vmuser  508 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx6qsabrelite.conf
    -rw-rw-r-- 1 vmuser vmuser  726 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/m28evk.conf
    -rw-rw-r-- 1 vmuser vmuser  767 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/m53evk.conf
    -rw-rw-r-- 1 vmuser vmuser 1641 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/nitrogen6x.conf
    -rw-rw-r-- 1 vmuser vmuser  786 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/nitrogen6x-lite.conf
    -rw-rw-r-- 1 vmuser vmuser  538 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-dual.conf
    -rw-rw-r-- 1 vmuser vmuser  529 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-quad.conf
    -rw-rw-r-- 1 vmuser vmuser  465 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-solo.conf

//list available images
$ find ../sources -name *image*
    ../sources/meta-fsl-arm/scripts/lib/image
    ../sources/meta-fsl-arm/classes/mfgtool-initramfs-image.bbclass
    ../sources/meta-fsl-arm/classes/image_types_fsl.bbclass
    ../sources/meta-fsl-arm/recipes-fsl/images
    ../sources/meta-fsl-arm/recipes-fsl/images/fsl-image-mfgtool-initramfs.bb
    ../sources/poky/scripts/lib/image
    ../sources/poky/scripts/lib/image/canned-wks/sdimage-bootpart.wks
    ../sources/poky/scripts/lib/wic/plugins/imager
    ../sources/poky/scripts/lib/wic/plugins/source/fsimage.py
    ../sources/poky/scripts/lib/wic/imager
    ../sources/poky/scripts/lib/wic/imager/baseimager.py
    ../sources/poky/scripts/test-remote-image
    ../sources/poky/scripts/contrib/ddimage
    ../sources/poky/scripts/runqemu-addptable2image
    ../sources/poky/documentation/ref-manual/ref-images.xml
    ../sources/poky/documentation/ref-manual/figures/image-generation.png
    ../sources/poky/documentation/ref-manual/figures/images.png
    ../sources/poky/documentation/mega-manual/figures/image-generation.png
    ../sources/poky/documentation/mega-manual/figures/images.png
    ../sources/poky/documentation/mega-manual/figures/using-a-pre-built-image.png
    ../sources/poky/documentation/mega-manual/figures/building-an-image.png
    ../sources/poky/documentation/yocto-project-qs/figures/using-a-pre-built-image.png
    ../sources/poky/documentation/yocto-project-qs/figures/building-an-image.png
    ../sources/poky/bitbake/bin/image-writer
    ../sources/poky/bitbake/lib/toaster/orm/migrations/0005_auto__add_target_image_file__add_target_file__add_field_variablehistor.py
    ../sources/poky/bitbake/lib/toaster/orm/migrations/0006_auto__add_field_target_image_size__add_field_target_license_manifest_p.py
    ../sources/poky/bitbake/lib/toaster/toastergui/static/css/images
    ../sources/poky/bitbake/lib/bb/ui/icons/images
    ../sources/poky/bitbake/lib/bb/ui/icons/images/images_hover.png
    ../sources/poky/bitbake/lib/bb/ui/icons/images/images_display.png
    ../sources/poky/bitbake/lib/bb/ui/crumbs/imagedetailspage.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/imageconfigurationpage.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/saveimagedialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/retrieveimagedialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/imageselectiondialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/deployimagedialog.py
    ../sources/poky/meta-selftest/recipes-test/images
    ../sources/poky/meta-selftest/recipes-test/images/oe-selftest-image.bb
    ../sources/poky/meta/recipes-extended/images
    ../sources/poky/meta/recipes-extended/images/core-image-lsb-sdk.bb
    ../sources/poky/meta/recipes-extended/images/core-image-full-cmdline.bb
    ../sources/poky/meta/recipes-extended/images/core-image-kernel-dev.bb
    ../sources/poky/meta/recipes-extended/images/core-image-lsb.bb
    ../sources/poky/meta/recipes-extended/images/core-image-testmaster.bb
    ../sources/poky/meta/recipes-extended/images/core-image-lsb-dev.bb
    ../sources/poky/meta/recipes-extended/images/core-image-testmaster-initramfs.bb
    ../sources/poky/meta/recipes-multimedia/gstreamer/gst-ffmpeg-0.10.13/0001-avcodec-msrle-use-av_image_get_linesize-to-calculate.patch
    ../sources/poky/meta/recipes-qt/images
    ../sources/poky/meta/recipes-qt/images/qt4e-demo-image.bb
    ../sources/poky/meta/recipes-qt/qt4/qt4-4.8.6/0028-Don-t-crash-on-broken-GIF-images.patch
    ../sources/poky/meta/recipes-graphics/xorg-lib/xcb-util-image_0.4.0.bb
    ../sources/poky/meta/recipes-graphics/images
    ../sources/poky/meta/recipes-graphics/images/core-image-x11.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-directfb.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-weston.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-clutter.bb
    ../sources/poky/meta/recipes-devtools/mkelfimage
    ../sources/poky/meta/recipes-devtools/mkelfimage/mkelfimage
    ../sources/poky/meta/recipes-devtools/mkelfimage/mkelfimage_git.bb
    ../sources/poky/meta/recipes-core/images
    ../sources/poky/meta/recipes-core/images/core-image-minimal.bb
    ../sources/poky/meta/recipes-core/images/core-image-base.bb
    ../sources/poky/meta/recipes-core/images/build-appliance-image_12.0.1.bb
    ../sources/poky/meta/recipes-core/images/build-appliance-image
    ../sources/poky/meta/recipes-core/images/core-image-minimal-mtdutils.bb
    ../sources/poky/meta/recipes-core/images/core-image-minimal-dev.bb
    ../sources/poky/meta/recipes-core/images/core-image-minimal-initramfs.bb
    ../sources/poky/meta/classes/image-buildinfo.bbclass
    ../sources/poky/meta/classes/testimage-auto.bbclass
    ../sources/poky/meta/classes/testimage.bbclass
    ../sources/poky/meta/classes/image_types_uboot.bbclass
    ../sources/poky/meta/classes/image-vmdk.bbclass
    ../sources/poky/meta/classes/core-image.bbclass
    ../sources/poky/meta/classes/image.bbclass
    ../sources/poky/meta/classes/image_types.bbclass
    ../sources/poky/meta/classes/image-prelink.bbclass
    ../sources/poky/meta/classes/image-swab.bbclass
    ../sources/poky/meta/classes/image-live.bbclass
    ../sources/poky/meta/classes/image-mklibs.bbclass
    ../sources/poky/meta/lib/oe/image.py
    ../sources/poky/meta/lib/oeqa/controllers/masterimage.py
    ../sources/poky/meta/recipes-bsp/u-boot/u-boot-mkimage_2015.01.bb
    ../sources/poky/meta/recipes-rt/images
    ../sources/poky/meta/recipes-rt/images/core-image-rt.bb
    ../sources/poky/meta/recipes-rt/images/core-image-rt-sdk.bb
    ../sources/poky/meta/recipes-connectivity/connman/connman-gnome/images
    ../sources/poky/meta/recipes-sato/images
    ../sources/poky/meta/recipes-sato/images/core-image-sato.bb
    ../sources/poky/meta/recipes-sato/images/core-image-sato-dev.bb
    ../sources/poky/meta/recipes-sato/images/core-image-sato-sdk.bb
    ../sources/poky/meta-skeleton/recipes-multilib/images
    ../sources/poky/meta-skeleton/recipes-multilib/images/core-image-multilib-example.bb
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image/libsdl-image
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image/libsdl-image_1.2.12.bb
    ../sources/meta-openembedded/meta-oe/recipes-graphics/lxdm/lxdm/0001-lxdm.conf.in-blacklist-root-for-release-images.patch
    ../sources/meta-openembedded/meta-oe/recipes-graphics/nonworking/slim/slim/0002-Fix-image-handling-integer-overflows.patch
    ../sources/meta-openembedded/meta-oe/recipes-support/imagemagick
    ../sources/meta-openembedded/meta-oe/recipes-support/imagemagick/imagemagick_6.8.9.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-kexecboot-klibc-image.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-debug-image.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-kexecboot-image.bb
    ../sources/Documentation/release-notes/source/images.inc
    ../sources/Documentation/user-guide/source/images.rst
    ../sources/Documentation/user-guide/source/image-list.inc
    ../sources/meta-fsl-demos/recipes-qt/images
    ../sources/meta-fsl-demos/recipes-qt/images/qt-in-use-image.bb
    ../sources/meta-fsl-demos/recipes-qt/images/qte-in-use-image.bb
    ../sources/meta-fsl-demos/recipes-fsl/images
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-machine-test.bb
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-multimedia-full.bb
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-multimedia.bb
</code></pre>

<h2>4.3 Start to build</h2>

<pre><code>//list core-image-base all task 
$ bitbake -c listtasks core-image-base

// download all source only 
$ bitbake -c fetchall core-image-base

//build
$ bitbake core-image-base
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[imx6 summary linux host environment setup]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/26/imx6-summary-linux-host-environment-setup/"/>
    <updated>2015-05-26T08:52:12+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/26/imx6-summary-linux-host-environment-setup</id>
    <content type="html"><![CDATA[<h1>1.  Install Host OS</h1>

<h2>1.1 Install VMware</h2>

<pre><code>Version: VMware10.03
</code></pre>

<h2>1.2 Install ubuntu server on VMware</h2>

<pre><code>Version: ubuntu-14.04.2-server-amd64
</code></pre>

<h2>1.3 Update Sources</h2>

<pre><code>$sudo apt-get update
</code></pre>

<h1>2.  Install Host OS Service</h1>

<h2>2.1 Install ssh service</h2>

<pre><code>$ sudo apt-get install openssh-client openssh-server
</code></pre>

<h2>2.2 Install samba service</h2>

<pre><code>$ sudo apt-get install samba

$ sudo vim /etc/samba/smb.conf and add below section to the file end

[home]
comment = samba share path /home
browseable = yes
writeable = yes
path = /home
valid users = smb

$ sudo useradd smb          //add user smb

$ sudo smbpasswd -a smb     //set password for smb user

$ /etc/init.d/smbd restart  //restart smbd service
</code></pre>

<h1>3.  Install Host OS build essential</h1>

<pre><code>$ sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib \
    build-essential chrpath socat libsdl1.2-dev xterm curl tcl rpm bison m4 \
    zlib1g zlib1g-dev libncurses5-dev liblzo2-dev uuid-dev lzop texi2html texinfo \
    texlive gettext libgtk2.0-dev rpm bison m4 libfreetype6-dev libdbus-glib-1-dev \
    liborbit2-dev intltool ccache libtool uuid-dev liblzo2-dev tcl dpkg asciidoc \
    texlive-latex-base dblatex xutils-dev texlive texinfo lib32z1 lib32ncurses5 \
    lib32bz2-1.0 libc6-dev-i386 u-boot-tools scrollkeeper dos2unix
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding an existing project to Github]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/26/adding-an-existing-project-to-github/"/>
    <updated>2015-05-26T08:12:55+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/26/adding-an-existing-project-to-github</id>
    <content type="html"><![CDATA[<p>Ref: <a href="https://help.github.com/articles/pushing-to-a-remote/">https://help.github.com/articles/pushing-to-a-remote/</a></p>

<h1>1. Create a new repository on Github</h1>

<pre><code>Example repo: https://github.com/github-username/test-repo.git

#To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub
</code></pre>

<h1>2. Create a local repository on local machine</h1>

<pre><code>$ mkdir test-repo
$ cd test-repo
$ git init
$ git config --global user.name "Your Name"         # remove --global for current git reop only
$ git config --global user.email you@example.com    # remove --global for current git reop only
$ git config --list                                 # list config
$ touch test.txt
$ git add .
$ git commit -m "First commit"
</code></pre>

<h1>3. Adding a remote repository url to local repository</h1>

<pre><code>$ git remote -v

$ git remote add origin https://github.com/github-username/test-repo.git
or
$ git remote set-url origin https://github.com/github-username/test-repo.git    # for windows git command

$ git remote -v
    origin  https://github.com/github-username/test-repo.git (fetch)
    origin  https://github.com/github-username/test-repo.git (push)
</code></pre>

<h1>4. Push the changes in your local repository to Github</h1>

<pre><code>$ git push origin master
</code></pre>

<h1>5. Renaming branches (remote)</h1>

<p>To rename a branch, you&rsquo;d use the same git push command, but you would add one more argument: the name of the new branch. For example:</p>

<pre><code>git push  &lt;REMOTENAME&gt; &lt;LOCALBRANCHNAME&gt;:&lt;REMOTEBRANCHNAME&gt;
</code></pre>

<p>This pushes the LOCALBRANCHNAME to your REMOTENAME, but it is renamed to REMOTEBRANCHNAME.</p>

<h1>6. Pushing tags</h1>

<p>By default, and without additional parameters, git push sends all matching branches that have the same names as remote branches.</p>

<p>To push a single tag, you can issue the same command as pushing a branch:</p>

<pre><code>git push  &lt;REMOTENAME&gt; &lt;TAGNAME&gt;
</code></pre>

<p>To push all your tags, you can type the command:</p>

<pre><code>git push  &lt;REMOTENAME&gt; --tags
</code></pre>

<h1>7. Deleting a remote branch or tag</h1>

<p>The syntax to delete a branch is a bit arcane at first glance:</p>

<pre><code>git push  &lt;REMOTENAME&gt; :&lt;BRANCHNAME&gt; 
</code></pre>

<p>Note that there is a space before the colon. The command resembles the same steps you&rsquo;d take to rename a branch. However, here, you&rsquo;re telling Git to push nothing into BRANCHNAME on REMOTENAME. Because of this, git push deletes the branch on the remote repository.</p>

<h2>7.1 Deleting your master branch</h2>

<p>You’ve forked some project on github.</p>

<p>You clone your fork.</p>

<p>Now you’ve got a master branch. It’s the master branch of your fork.</p>

<p>It can be tempting to do work in the master branch and ask for a pull request.</p>

<p>That is best avoided because:</p>

<p>It’s natural to carry on working in your master and that will pollute your pull request with other commits
master is not a descriptive name for a set of changes. It’s easier for the person reviewing your code to have something like fix-for-issue-12.
You may well also have a tracking branch pointing to the main upstream repo. You might call that something like upstream-master. It’s easy to lose concentration and forget you are on upstream-master instead of your master, and nasty errors can result.
To avoid this, I delete the master branch from my forked copy. However, to make that work, you have to tell github not to monitor your master branch.</p>

<h2>7.2 How to delete master</h2>

<p>First you delete master in your local clone. To do this we first make a new branch called placeholder or similar, and delete master from there:</p>

<pre><code>git branch placeholder
git checkout placeholder
git branch -D master
</code></pre>

<p>All good so far. We next want to delete the branch on github. However, if we do this the naive way:</p>

<pre><code>git push origin :master
</code></pre>

<p>we just get an error like this:</p>

<pre><code>remote: error: refusing to delete the current branch: refs/heads/master
To git@github.com:matthew-brett/datarray.git
! [remote rejected] master (deletion of the current branch prohibited)
error: failed to push some refs to 'git@github.com:matthew-brett/datarray.git'
</code></pre>

<p>That is because github is looking at the master branch to provide the web content when you browse that repository. So we first have to make github look at our placeholder branch instead, then delete master.</p>

<p>First push up the placeholder branch:</p>

<pre><code>git checkout placeholder # if not on placeholder already
git push origin placeholder
</code></pre>

<p>Then set placeholder to be the github default branch. Go to the main github page for your forked repository, and click on the “Admin” button.</p>

<p>There’s a “Default branch” dropdown list near the top of the screen. From there, select placeholder. On the interface I’m looking at, a green tick appears above the dropdown list. Now you can do (from the command line):</p>

<pre><code>git push origin :master
</code></pre>

<p>and - no master branch&hellip;</p>

<h1>8. Remotes and forks</h1>

<p>You might already know that you can &ldquo;fork&rdquo; repositories on GitHub.</p>

<p>When you clone a repository you own, you provide it with a remote URL that tells Git where to fetch and push updates. If you want to collaborate with the original repository, you&rsquo;d add a new remote URL, typically called upstream, to your local Git clone:</p>

<pre><code>git remote set-url upstream  &lt;THEIR_REMOTE_URL&gt;
</code></pre>

<p>Now, you can fetch updates and branches from their fork:</p>

<pre><code>git fetch upstream branch
# Grab the upstream remote's branches
# remote: Counting objects: 75, done.
# remote: Compressing objects: 100% (53/53), done.
# remote: Total 62 (delta 27), reused 44 (delta 9)
# Unpacking objects: 100% (62/62), done.
# From https://github.com/octocat/repo
#  * [new branch]      master     -&gt; upstream/master
</code></pre>

<p>When you&rsquo;re done making local changes, you can push your local branch to GitHub and initiate a pull request.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Qt5.5.0 for Imx6]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/15/build-qt5-dot-5-0-for-imx6/"/>
    <updated>2015-05-15T16:18:48+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/15/build-qt5-dot-5-0-for-imx6</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MFGTool Emmc mksdcard.sh]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/14/mfgtool-emmc-mksdcard-dot-sh/"/>
    <updated>2015-05-14T19:07:18+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/14/mfgtool-emmc-mksdcard-dot-sh</id>
    <content type="html"><![CDATA[<h1>MFGTool Emmc mksdcard.sh comment</h1>

<h2>1.烧写脚本：</h2>

<pre><code>&lt;CMD state="Updater" type="push" body="send" file="mksdcard.sh.tar"&gt;Sending partition shell&lt;/CMD&gt; 

&lt;CMD state="Updater" type="push" body="$ tar xf $FILE "&gt; Partitioning...&lt;/CMD&gt;

&lt;CMD state="Updater" type="push" body="$ sh mksdcard.sh /dev/mmcblk0"&gt; Partitioning...&lt;/CMD&gt; 
</code></pre>

<h2>2 其中 ：$ sh mksdcard.sh /dev/mmcblk0</h2>

<pre><code>mksdcard.sh文件内容为：

#######################################################################
#!/bin/sh

# partition size in MB
BOOT_ROM_SIZE=10
BOOT_SYSTEM_SIZE=100


# call sfdisk to create partition table
# destroy the partition table
node=$1
dd if=/dev/zero of=${node} bs=1024 count=1

sfdisk --force -uM ${node} &lt;&lt; EOF
${BOOT_ROM_SIZE},${BOOT_SYSTEM_SIZE},83
,,83
EOF
######################################################################

#!/bin/sh
#partition size in MB

BOOT_ROM_SIZE=10                            #这里定义的是启动ROM 10MB
ROOT_SYSTEM_SIZE=1024                       #这里定义的是系统大小 1024mb

#call sfdisk to create partition table
#destroy the partition table

node=$1                                     #$1为命令行第一个传递的参数 在此为 /dev/mmcblk0
dd if=/dev/zero of=${node} bs=1024 count=1  #将前导一个1024字节(1KB)大小的分区零0

sfdisk--force -uM ${node} &lt;&lt; EOF            #SmartFdisk –uM表示以MB为单位生成报告  即： sfdisk --force -um  /dev/mmcblk0 &lt;&lt;EOF
${BOOT_ROM_SIZE},${ROOT_SYSTEM_SIZE},0c 
,,83
EOF

#(,,83) 将其他所有空间再分成一个区,，此处应该就是mmcblk0p2 其中 83是Linux分区标识 Uboot和kernel是直接使用dd写入mmcblk0中的，而分区则是使用sfdisk进行的，空出了uboot和kernel的位置，从起始地址10MB开始的
</code></pre>

<h2>3. linux  sfdisk命令说明</h2>

<pre><code>sfdisk reads lines of the form

         &lt;start&gt; &lt;size&gt; &lt;id&gt;&lt; bootable&gt; &lt;c,h,s&gt; &lt;c,h,s&gt;

  where each line fills one partition descriptor.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[using ltib's u-boot kernel and rootfs to boot board step by step]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/14/using-ltibs-u-boot-kernel-and-rootfs-to-boot-board-step-by-step/"/>
    <updated>2015-05-14T14:47:48+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/14/using-ltibs-u-boot-kernel-and-rootfs-to-boot-board-step-by-step</id>
    <content type="html"><![CDATA[<h1>1. Config and build ltib for sabre sdb imx6q</h1>

<h1>2. Get source code</h1>

<pre><code>$ cd path/ltib

$ ./ltib -m prep -p u-boot

$ cd path/ltib

$ ./ltib -m prep -p kernel
</code></pre>

<h1>3. Modify and build u-boot</h1>

<pre><code>$ cd path/ltib/rpm/BUILD/u-boot-2009.08

$ modify inlcude/configs/mx6q_sabresd.h as below

////////////////////////////////////////////////////////////////////

#if 0   //boot from nfs
#define CONFIG_EXTRA_ENV_SETTINGS                   \
        "netdev=eth0\0"                     \
        "ethprime=FEC0\0"                   \
        "uboot=u-boot.bin\0"            \
        "kernel=uImage\0"               \
        "nfsroot=/opt/eldk/arm\0"               \
        "bootargs_base=setenv bootargs console=ttymxc0,115200\0"\
        "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs "\
            "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0"\
        "bootcmd_net=run bootargs_base bootargs_nfs; "      \
            "tftpboot ${loadaddr} ${kernel}; bootm\0"   \
        "bootargs_mmc=setenv bootargs ${bootargs} ip=dhcp "     \
            "root=/dev/mmcblk0p1 rootwait\0"                \
        "bootcmd_mmc=run bootargs_base bootargs_mmc; "   \
        "mmc dev 3; "   \
        "mmc read ${loadaddr} 0x800 0x2000; bootm\0"    \
        "bootcmd=run bootcmd_net\0"
#endif

#if 1   //boot from mmc and display on lvds1 to LDB-CLAA(1280x420)
#define CONFIG_EXTRA_ENV_SETTINGS                   \
        "netdev=eth0\0"                     \
        "ethprime=FEC0\0"                   \
        "uboot=u-boot.bin\0"                    \
        "kernel=uImage\0"                   \
        "nfsroot=/opt/eldk/arm\0"               \
        "bootargs_base=setenv bootargs console=ttymxc0,115200 \0"\
        "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs "\
            "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0"\
        "bootcmd_net=run bootargs_base bootargs_nfs; "      \
            "tftpboot ${loadaddr} ${kernel}; bootm\0"   \
        "bootargs_mmc=setenv bootargs ${bootargs} "     \
            "root=/dev/mmcblk0p1 rootfstype=ext4 rootwait rw lpj=7905280 printk.time=1 verify=no" \
            " ldb=sin1 video=mxcfb0:dev=ldb,LDB-CLAA,if=RGB666,bpp=32 video=mxcfb1:off consoleblank=0 \0"\
        "bootcmd_mmc=run bootargs_base bootargs_mmc; "  \
        "mmc dev 3; "                   \
        "mmc read ${loadaddr} 0x800 0x2000; bootm\0"    \
        "bootcmd=run bootcmd_mmc\0"
#endif

#if 0   //boot from mmc and display on twice lvds to LDB-1080P60(1920x720)
#define CONFIG_EXTRA_ENV_SETTINGS                   \
        "netdev=eth0\0"                     \
        "ethprime=FEC0\0"                   \
        "uboot=u-boot.bin\0"            \
        "kernel=uImage\0"               \
        "nfsroot=/opt/eldk/arm\0"               \
        "bootargs_base=setenv bootargs console=ttymxc0,115200 \0"\
        "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs "\
            "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0"\
        "bootcmd_net=run bootargs_base bootargs_nfs; "      \
            "tftpboot ${loadaddr} ${kernel}; bootm\0"   \
        "bootargs_mmc=setenv bootargs ${bootargs} "     \
            "root=/dev/mmcblk0p1 rootfstype=ext4 rootwait rw lpj=7905280 printk.time=1 verify=no" \
            " ldb=spl0 video=mxcfb0:dev=ldb,LDB-1080P60,if=RGB24,bpp=32 video=mxcfb1:off consoleblank=0 \0"                \
        "bootcmd_mmc=run bootargs_base bootargs_mmc; "   \
        "mmc dev 3; "   \
        "mmc read ${loadaddr} 0x800 0x2000; bootm\0"    \
        "bootcmd=run bootcmd_mmc\0"
#endif

#if 0 //ltib default nfs boot
#define CONFIG_EXTRA_ENV_SETTINGS \
        "netdev=eth0\0" \
        "ethprime=FEC0\0" \
        "uboot=u-boot.bin\0" \
        "kernel=uImage\0" \
        "nfsroot=/opt/eldk/arm\0" \
        "bootargs_base=setenv bootargs console=ttymxc0,115200\0" \
        "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs " \
            "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
        "bootcmd_net=run bootargs_base bootargs_nfs; " \
            "tftpboot ${loadaddr} ${kernel}; bootm\0" \
        "bootargs_mmc=setenv bootargs ${bootargs} ip=dhcp " \
            "root=/dev/mmcblk0p1 rootwait\0" \
        "bootcmd_mmc=run bootargs_base bootargs_mmc; " \
        "mmc dev 3; " \
        "mmc read ${loadaddr} 0x800 0x2000; bootm\0"    \
        "bootcmd=run bootcmd_net\0"                             \

#else // for mmc boot

#define CONFIG_EXTRA_ENV_SETTINGS \
    "netdev=eth0\0" \
    "ethprime=FEC0\0" \
    "uboot=u-boot.bin\0" \
    "kernel=uImage\0" \
    "nfsroot=/opt/eldk/arm\0" \
    "bootargs_base=setenv bootargs console=ttymxc0,115200 \0" \
    "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs " \
        "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
    "bootcmd_net=run bootargs_base bootargs_nfs; " \
        "tftpboot ${loadaddr} ${kernel}; bootm\0" \
    "bootargs_mmc=setenv bootargs ${bootargs} " \
        "root=/dev/mmcblk0p1 rootfstype=ext4 rootwait rw lpj=7905280 printk.time=1 verify=no" \
        " ldb=spl0 video=mxcfb0:dev=ldb,LDB-1080P60,if=RGB24,bpp=32 video=mxcfb1:off consoleblank=0 \0" \
    "bootcmd_mmc=run bootargs_base bootargs_mmc; " \
    "mmc dev 3; " \
    "mmc read ${loadaddr} 0x800 0x2000; bootm\0" \
    "bootcmd=run bootcmd_mmc\0" \

#endif

/////////////////////////////////////////////////////////////////////////

$ export ARCH=arm
$ export CROSS_COMPILE=/opt/gcc-linaro-arm-linux-gnueabi-2012.04-20120426_linux/bin/arm-linux-gnueabi-

$ make mx6q_sabresd_config

$ make

////////////////////////////Note/////////////////////////////////

uboot mmc read/write命令用法

mmc read用来读取mmc内容到内存，

mmc write用来写入内存内容到mmc中

具体用法,

mmc read &lt;device num&gt; addr blk# cnt [partition]

mmc write &lt;device num&gt; addr blk# cnt [partition]

mmc list

device num是mmc的设备号，可以通过mmc list查询

addr是内存地址

blk# 是mmc内的块号

cnt 块数目 ( 块大小为512Byte )

使用范例：

mmc write 2 0x90000000 0x600 0x10

把内存0x90000000开始，长度为16x512大小的数据，写入到第2个mmc设备块偏移位置为0x600处

mmc read 2 0x90000000 0x600 0x10

把第二个mmc设备块偏移为0x600处开始，长度为16x512大小的数据，读出到内存0x90000000处
///////////////////////////////////////////////
</code></pre>

<h1>4. Modify and build kernel</h1>

<pre><code>$ cd path/ltib/rpm/BUILD/linux-3.0.35

$ export ARCH=arm

$ export CROSS_COMPILE=/opt/gcc-linaro-arm-linux-gnueabi-2012.04-20120426_linux/bin/arm-linux-gnueabi-

$ make imx6_defconfig

$ make uImage
</code></pre>

<h1>5. Reduce rootfs</h1>

<pre><code>$ cd path/ltib/rootfs

$ add post_build.sh
##########################################
#!/bin/sh
cd dev
sudo mknod null c 1 3
sudo chmod 666 null

sudo mknod console c 5 1
sudo chmod 777 console

for i in 0 1 2 3 4 5 6 7 8 9 10 11 12; do sudo mknod fb$i c 29 $i; done

sudo mknod mxc_ipu c 253 0
sudo mknod mxc_vpu c 252 0
sudo mknod ttymxc0 c 207 16
sudo mknod video0 c 81 0
sudo mknod galcore c 199 0

cd ..
sudo rm -rf unit_tests
sudo rm -rf boot
sudo rm -rf opt/fsl_samples
sudo rm -rf opt/viv_samples
sudo rm -rf share

sudo rm -rf usr/include
sudo rm -rf usr/info
sudo rm -rf usr/man
sudo rm -rf usr/src
sudo rm -rf usr/share

sudo rm -rf var/spool
sudo rm -rf var/ftp
sudo rm -rf var/log
sudo rm -rf var/run
sudo rm -rf var/mail
sudo rm -rf var/lock
sudo rm -rf var/lib
sudo rm -rf var/www
###############################################

$ ./post_build.sh

$ sudo tar -cjvf ../rootfs.tar.bz2 ./*
</code></pre>

<h1>6. Flash u-boot.bin, uImage and rootfs.tar.bz2 to board mmc</h1>

<h1>7. Reset board. Done!</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build ltib for sabre sdb on ubuntu14.04]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/11/build-ltib-for-sabre-sdb-on-ubuntu14-dot-04/"/>
    <updated>2015-05-11T14:48:34+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/11/build-ltib-for-sabre-sdb-on-ubuntu14-dot-04</id>
    <content type="html"><![CDATA[<h1>1. Package</h1>

<pre><code>1) L3.0.35_4.1.0_130816_source.gz
2) 0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch.zip
</code></pre>

<h1>2. Add user super privilege to visudo</h1>

<pre><code>$sudo /usr/sbin/visudo

#add below line for vmuser account super privilege
vmuser ALL = NOPASSWD: /usr/bin/rpm, /opt/freescale/ltib/usr/bin/rpm
</code></pre>

<h1>3. Install LTIB and Apply Patch</h1>

<pre><code>$ cd ~
$ tar zxvf L3.0.35_4.1.0_130816_source.tar.gz
$ ./L3.0.35_4.1.0_130816_source/install     #suggest install ltib to none root user directory

$ cd /home/vmuser/ltib_src/ltib
$ wget https://community.freescale.com/servlet/JiveServlet/download/100725-3-274381/0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch.zip
$ unzip 0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch.zip
$ git apply 0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch
</code></pre>

<h1>4. Configure and build LTIB for imx6q-sdb</h1>

<pre><code>$ cd /home/vmuser/ltib_src/ltib

$ ./ltib -m config

Platform choice (Freescale iMX reference boards)  ---&gt;


Choose the platform type
Selection (imx6q)  ---&gt;


Choose the packages profile
Selection (use packages in preconfig (Min profile))  ---&gt;


(imx6q) Platform
--- LTIB settings
     System features  ---&gt;
--- Choose the target C library type
    Target C library type (glibc)  ---&gt;
    C library package (from toolchain only)  ---&gt;
    Toolchain component options  ---&gt;
--- Toolchain selection.
    Toolchain (ARM, gcc-4.6.2, multilib, neon optimized, gnueabi/eglibc2.13)  ---&gt;
(-O2 -march=armv7-a -mfpu=vfpv3 -mfloat-abi=softfp) Enter any CFLAGS for gcc/g++ (NEW)
--- Choose your bootloader for U-Boot
    bootloader (u-boot)  ---&gt;
    u-boot version (u-boot v2009.08)  ---&gt;
--- Choose your board for u-boot
    board (mx6q_sabresd)  ---&gt;
--- Choose your Kernel
    kernel (Linux 3.0.35-imx)  ---&gt;
[ ] Always rebuild the kernel
[ ] Produce cscope index
--- Include kernel headers
[*] Configure the kernel

...

--- Package selection 
    Package list  ---&gt;
--- Target System Configuration
    Options  ---&gt;
--- Target Image Generation
    Options  ---&gt;
---
Load an Alternate Configuration File
Save Configuration to an Alternate File


--- Platform specific package selection

[*] gpu-viv-bin-mx6q

[*] dbus

    device nodes (udev)  ---&gt;
      udev
[ ]     Include automount rules
[*]     Modify udev rules for non-raid systems
[*]     Include i.MX rules

[*] expat

[*] libjpeg

[*] libpng


$ ./ltib

$ config kernel 

Device Driver ---&gt;
MXC support drivers ---&gt;
        MXC Vivante GPU Support ---&gt;
    &lt;*&gt; MXC vivante GPU support

========== ltib\config\platform\imx\defconfig.dev ==========
#
# Automatically generated make config: don't edit
# LTIB version: 8.1.2
#
CONFIG_CONFIG_TITLE="Freescale iMX6x Based Boards"
CONFIG_PLATFORM_COMMENT="Freescale iMX6x Based Boards"
CONFIG_VENDOR="Freescale"
CONFIG_PLATFORM="imx6q"
CONFIG_PLATFORM_SUBDIR="imx"
CONFIG_GNUTARCH="arm"
CONFIG_LINTARCH="arm"
CONFIG_CFGHOST="arm-linux"
CONFIG_ARMEABI_ARCH=y
CONFIG_VFP_ARCH=y

#
# LTIB settings
#

#
# System features
#
CONFIG_FEAT_CACHE_RPMS=y
CONFIG_ENDIAN="little"

#
# Choose the target C library type
#
CONFIG_GLIBC=y
# CONFIG_UCLIBC is not set
CONFIG_CHOICE_BASE_LIBS=y
# CONFIG_CHOICE_GLIBC is not set
# CONFIG_CHOICE_UCLIBC is not set
# CONFIG_LIBC_NONE is not set
# CONFIG_PKG_GLIBC is not set
# CONFIG_PKG_UCLIBC is not set

#
# Toolchain component options
#
CONFIG_PKG_BASE_LIBS=y
CONFIG_PKG_LIBC_WANT_SHARED_LIBS=y
# CONFIG_PKG_LIBC_WANT_CRT_FILES is not set
# CONFIG_PKG_LIBC_WANT_HEADERS1 is not set
# CONFIG_PKG_LIBC_WANT_STATIC_LIBS is not set
# CONFIG_PKG_LIBC_WANT_C_LOCALES is not set
CONFIG_PKG_CXX_WANT_SHARED_LIBS=y
# CONFIG_PKG_CXX_WANT_HEADERS is not set
# CONFIG_PKG_CXX_WANT_STATIC_LIBS is not set
CONFIG_PKG_GCC_WANT_LIBGCC_SHARED=y
CONFIG_DYNAMIC_LINKER="/lib/ld.so.1"
CONFIG_SYS_WANT_MMU=y
CONFIG_SYS_WANT_SHARED=y

#
# Toolchain selection.
#
CONFIG_TOOLCHAIN_ARMEABI_FSL_GCC_LINARO_MULTILIB=y
# CONFIG_TOOLCHAIN_ARMEABI_FSL_GCC_MULTILIB is not set
# CONFIG_TOOLCHAIN_ARMEABI_CODE_SOURCERY is not set
# CONFIG_TOOLCHAIN_ARMEABI_GLIBC1 is not set
# CONFIG_TOOLCHAIN_ARMEABI_CUSTOM is not set
CONFIG_TOOLCHAIN="gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12-1.i386.rpm"
CONFIG_TOOLCHAIN_PATH="/opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain"
CONFIG_TOOLCHAIN_PREFIX="arm-none-linux-gnueabi-"
CONFIG_TOOLCHAIN_CFLAGS="-O2 -march=armv7-a -mfpu=vfpv3 -mfloat-abi=softfp"

#
# Choose your bootloader for U-Boot
#
CONFIG_BOOTLOADER_U_BOOT=y
# CONFIG_BOOTLOADER_GIT is not set
# CONFIG_U_BOOT_DIR_BUILD is not set
# CONFIG_BOOTLOADER_NONE is not set
CONFIG_BOOTLOADER_U_BOOT_200908=y
# CONFIG_BOOTLOADER_U_BOOT_201210 is not set

#
# Choose your board for u-boot
#
# CONFIG_BOARD_MX6Q_ARM2 is not set
# CONFIG_BOARD_MX6Q_ARM2_LPDDR2 is not set
# CONFIG_BOARD_MX6Q_ARM2_LPDDR2POP is not set
# CONFIG_BOARD_MX6Q_SABRELITE is not set
# CONFIG_BOARD_MX6Q_SABREAUTO is not set
# CONFIG_BOARD_MX6Q_SABREAUTO_NAND is not set
# CONFIG_BOARD_MX6Q_SABREAUTO_WEIMNOR is not set
# CONFIG_BOARD_MX6Q_SABREAUTO_SPI-NOR is not set
CONFIG_BOARD_MX6Q_SABRESD=y
# CONFIG_BOARD_MX6Q_HDMIDONGLE is not set
# CONFIG_BOARD_MX6Q_HDMIDONGLE_NAND is not set
# CONFIG_BOARD_MX6DL_ARM2 is not set
# CONFIG_BOARD_MX6DL_ARM2_LPDDR2 is not set
# CONFIG_BOARD_MX6DL_SABRESD is not set
# CONFIG_BOARD_MX6DL_SABREAUTO is not set
# CONFIG_BOARD_MX6DL_SABREAUTO_NAND is not set
# CONFIG_BOARD_MX6DL_SABREAUTO_SPI-NOR is not set
# CONFIG_BOARD_MX6DL_SABREAUTO_WEIMNOR is not set
# CONFIG_BOARD_MX6DL_HDMIDONGLE is not set
# CONFIG_BOARD_MX6DL_HDMIDONGLE_NAND is not set
# CONFIG_BOARD_MX6SOLO_SABREAUTO is not set
# CONFIG_BOARD_MX6SOLO_SABREAUTO_NAND is not set
# CONFIG_BOARD_MX6SOLO_SABREAUTO_WEIMNOR is not set
# CONFIG_BOARD_MX6SOLO_SABREAUTO_SPI-NOR is not set
# CONFIG_BOARD_MX6SOLO_SABRESD is not set
CONFIG_PKG_U_BOOT="u-boot-v2009.08"
CONFIG_PKG_U_BOOT_CONFIG_TYPE="mx6q_sabresd_config"
CONFIG_PKG_U_BOOT_BUILD_ARGS="OPTFLAGS=-Os"
CONFIG_SYSCFG_KTARG="uImage"
CONFIG_SYSCFG_BOOT_KERNEL="arch/arm/boot/uImage arch/arm/boot/zImage"

#
# Choose your Kernel
#
# CONFIG_KERNEL_3507 is not set
CONFIG_KERNEL_3035=y
# CONFIG_KERNEL_3015 is not set
# CONFIG_KERNEL_38 is not set
# CONFIG_KERNEL_35 is not set
# CONFIG_KERNEL_31 is not set
# CONFIG_KERNEL_28 is not set
# CONFIG_KERNEL_GIT is not set
# CONFIG_KERNEL_DIR_BUILD is not set
# CONFIG_KERNEL_NONE is not set
# CONFIG_PKG_KERNEL_FORCE is not set
# CONFIG_PKG_KERNEL_WANT_CSCOPE is not set
CONFIG_PKG_KERNEL="kernel-3.0.35"
CONFIG_PKG_KERNEL_WANT_HEADERS=y
# CONFIG_PKG_KERNEL_WANT_CF is not set
CONFIG_PKG_KERNEL_LEAVESRC=y
# CONFIG_PKG_KERNEL_UPDATER is not set
CONFIG_PKG_KERNEL_PRECONFIG="imx6_defconfig"
CONFIG_DISTRO="dist/lfs-5.1"

#
# Package selection
#

#
# Package list
#

#
# Platform specific package selection
#
CONFIG_PKG_FIRMWARE_IMX=y
CONFIG_PKG_IMX_TEST=y
CONFIG_PKG_IMX_LIB=y
CONFIG_PKG_IMX_VPU_LIB=y
CONFIG_PKG_KOBS_NG=y
# CONFIG_PKG_LTP_IMX is not set
# CONFIG_PKG_WPA_SUPPLICANT is not set
CONFIG_PKG_GPU_VIV_BIN_MX6Q=y
# CONFIG_PKG_UUC is not set
# CONFIG_PKG_ATHEROS_WIFI is not set
# CONFIG_PKG_MTDEV is not set
# CONFIG_PKG_GPU_VIV_WL_BIN_MX6Q is not set
# CONFIG_PKG_WESTON_IMX_BIN is not set
# CONFIG_PKG_HDCP_APP_BIN is not set

#
# Freescale Multimedia Plugins/Codecs
#
# CONFIG_PKG_LIBFSLCODEC is not set
# CONFIG_PKG_LIBFSLPARSER is not set
# CONFIG_PKG_LIBFSLVPUWRAP is not set
# CONFIG_PKG_LIBFSLAACPCODEC is not set
# CONFIG_PKG_LIBFSLAC3CODEC is not set
# CONFIG_PKG_LIBFSLMSCODEC is not set
# CONFIG_PKG_LIBFSLMSPARSER is not set
# CONFIG_PKG_GST_FSL_PLUGINS is not set
# CONFIG_PKG_GST_PLUGINS_GL is not set
# CONFIG_PKG_FSL_ALSA_PLUGINS is not set

#
# Common package selection list
#
# CONFIG_PKG_ASTERISK is not set
# CONFIG_PKG_ATK is not set
# CONFIG_PKG_AUTOCONF is not set
# CONFIG_PKG_AUTOMAKE is not set
# CONFIG_PKG_ALSA_LIB is not set
# CONFIG_PKG_ALSA_UTILS is not set
CONFIG_PKG_BASH=y
# CONFIG_PKG_BASH_WANT_NO_SH_SYMLINK is not set
# CONFIG_PKG_BIND is not set
# CONFIG_PKG_BINUTILS is not set
# CONFIG_PKG_BISON is not set
# CONFIG_PKG_BLUEZ_HCIDUMP is not set
# CONFIG_PKG_BLUEZ_LIBS is not set
# CONFIG_PKG_BLUEZ_UTILS is not set
# CONFIG_PKG_BOA is not set
# CONFIG_PKG_BONNIE_PLUS_PLUS is not set
# CONFIG_PKG_BRIDGE_UTILS is not set
CONFIG_PKG_BUSYBOX=y
CONFIG_PKG_BUSYBOX_PRECONFIG="busybox.config"
# CONFIG_PKG_BUSYBOX_WANT_CF is not set
# CONFIG_PKG_BZIP2 is not set
# CONFIG_PKG_CAIRO is not set
# CONFIG_PKG_CAN4LINUX is not set
# CONFIG_PKG_CANTEST is not set
# CONFIG_PKG_CCACHE is not set
# CONFIG_PKG_CHEESE is not set
# CONFIG_PKG_CLAMAV is not set
# CONFIG_PKG_CONNTRACK_TOOLS is not set
# CONFIG_PKG_COREUTILS is not set
# CONFIG_PKG_CPIO is not set
# CONFIG_PKG_CPUFREQUTILS is not set
# CONFIG_PKG_CRACKLIB is not set
# CONFIG_PKG_CRAMFS is not set
# CONFIG_PKG_CRASHME is not set
# CONFIG_PKG_CURL is not set
# CONFIG_PKG_DAEMONIZER is not set
# CONFIG_PKG_DEVMEM2 is not set
# CONFIG_PKG_DHCP is not set
# CONFIG_PKG_DB1 is not set
# CONFIG_PKG_DB4 is not set
CONFIG_PKG_DBUS=y
# CONFIG_PKG_DBUS_GLIB is not set
# CONFIG_PKG_DEV is not set
# CONFIG_PKG_MDEV is not set
CONFIG_PKG_UDEV=y
# CONFIG_PKG_UDEV_WANT_AUTOMOUNT is not set
CONFIG_PKG_UDEV_WANT_NON_RAID=y
CONFIG_PKG_UDEV_WANT_IMX=y
# CONFIG_PKG_DEVFSD is not set
# CONFIG_PKG_DEV_NONE is not set
# CONFIG_PKG_DIFFUTILS is not set
# CONFIG_PKG_DIRECTFB is not set
# CONFIG_PKG_DISTCC is not set
# CONFIG_PKG_DOSFSTOOLS is not set
# CONFIG_PKG_NEWFS_MSDOS is not set
# CONFIG_PKG_DROPBEAR is not set
# CONFIG_PKG_DTC is not set
# CONFIG_PKG_DT_D is not set
# CONFIG_PKG_E2FSPROGS is not set

#
# Enlightenment window manager packages
#
CONFIG_CHOICE_ENLIGHTENMENT_NONE=y
# CONFIG_CHOICE_ENLIGHTENMENT is not set
# CONFIG_PKG_ED is not set
# CONFIG_PKG_EEL is not set
# CONFIG_PKG_ENCHANT is not set
# CONFIG_PKG_EOG is not set
# CONFIG_PKG_EPDFVIEW is not set
# CONFIG_PKG_ETHTOOL is not set
# CONFIG_PKG_EVOLUTION is not set
# CONFIG_PKG_EVOLUTION_DATA_SERVER is not set
# CONFIG_PKG_EVTEST is not set
CONFIG_PKG_EXPAT=y
# CONFIG_PKG_FAAD2 is not set
# CONFIG_PKG_FAKEROOT is not set
CONFIG_PKG_FAKE_PROVIDES=y
# CONFIG_PKG_FARSIGHT is not set
# CONFIG_PKG_FBPAN is not set
# CONFIG_PKG_FBSET is not set
# CONFIG_PKG_FBV is not set
# CONFIG_PKG_FFMPEG is not set
# CONFIG_PKG_FINDUTILS is not set
# CONFIG_PKG_FLEX is not set
# CONFIG_PKG_FMTOOLS is not set
# CONFIG_PKG_FONTCONFIG is not set
# CONFIG_PKG_FREETYPE is not set
# CONFIG_PKG_GAWK is not set
# CONFIG_PKG_GCONF_DBUS is not set
# CONFIG_PKG_GDBM is not set
# CONFIG_PKG_GDB is not set
# CONFIG_PKG_GENEXT2FS is not set
# CONFIG_PKG_GENROMFS is not set
# CONFIG_PKG_GEN_INIT_CPIO is not set
# CONFIG_PKG_GETTEXT is not set
# CONFIG_PKG_GIT is not set
# CONFIG_PKG_GLIB2 is not set
# CONFIG_PKG_GMP is not set
# CONFIG_PKG_GNOME_DESKTOP is not set
# CONFIG_PKG_GNOME_MIME_DATA is not set
# CONFIG_PKG_GNOME_ICON_THEME is not set
# CONFIG_PKG_GNOME_VFS is not set
# CONFIG_PKG_GNOME_KEYRING is not set
# CONFIG_PKG_GPSD is not set
# CONFIG_PKG_GREP is not set
# CONFIG_PKG_GROFF is not set
# CONFIG_PKG_GSTREAMER_CORE is not set
# CONFIG_PKG_GST_PLUGINS_FARSIGHT is not set
# CONFIG_PKG_GTK2 is not set
# CONFIG_PKG_GTKHTML is not set
# CONFIG_PKG_HAL is not set
# CONFIG_PKG_HDPARM is not set
# CONFIG_PKG_HELLOWORLD is not set
# CONFIG_PKG_HELLOWORLD_MOD is not set
# CONFIG_PKG_HESIOD is not set
# CONFIG_PKG_HOSTAPD is not set
CONFIG_PKG_HOTPLUG=y
# CONFIG_PKG_HTTPD is not set
# CONFIG_PKG_I2C_TOOLS is not set
# CONFIG_PKG_IOZONE is not set
# CONFIG_PKG_INPUT_UTILS is not set
CONFIG_PKG_IPROUTE=y
# CONFIG_PKG_INETUTILS is not set
# CONFIG_PKG_IPERF is not set
# CONFIG_PKG_OPENSWAN is not set
# CONFIG_PKG_STRONGSWAN is not set
CONFIG_PKG_IPSEC_SUITE_NONE=y
# CONFIG_PKG_IPSEC_TOOLS is not set
# CONFIG_PKG_IPSECADM is not set
# CONFIG_PKG_IPTABLES is not set
# CONFIG_PKG_IPUTILS is not set
# CONFIG_PKG_IRATTACH is not set
# CONFIG_PKG_IRDADUMP is not set
# CONFIG_PKG_ISO_CODES is not set
# CONFIG_PKG_KBD is not set
# CONFIG_PKG_KEYFUZZ is not set
# CONFIG_PKG_KRB5 is not set
# CONFIG_PKG_LESS is not set
# CONFIG_PKG_LFS_UTILS is not set
# CONFIG_PKG_LIBERATION_FONTS is not set
# CONFIG_PKG_LIBART_LGPL is not set
# CONFIG_PKG_LIBBONOBO is not set
# CONFIG_PKG_LIBBONOBOUI is not set
# CONFIG_PKG_LIBGCRYPT is not set
# CONFIG_PKG_LIBGPG_ERROR is not set
# CONFIG_PKG_LIBGLADE is not set
# CONFIG_PKG_LIBGNOME is not set
# CONFIG_PKG_LIBGNOMECANVAS is not set
# CONFIG_PKG_LIBGNOMEUI is not set
# CONFIG_PKG_LIBICONV is not set
# CONFIG_PKG_LIBIDL is not set
# CONFIG_PKG_LIBID3TAG is not set
# CONFIG_PKG_LIBMAD is not set
# CONFIG_PKG_LIBMPEG2 is not set
# CONFIG_PKG_LIBNETFILTER_CONNTRACK is not set
# CONFIG_PKG_LIBNFNETLINK is not set
# CONFIG_PKG_LIBNL is not set
CONFIG_PKG_LIBJPEG=y
# CONFIG_PKG_LIBELF is not set
# CONFIG_PKG_LIBNET is not set
# CONFIG_PKG_LIBOGG is not set
# CONFIG_PKG_LIBPCAP is not set
CONFIG_PKG_LIBPNG=y
# CONFIG_PKG_LIBOIL is not set
# CONFIG_PKG_LIBRSVG is not set
# CONFIG_PKG_LIBSOUP is not set
# CONFIG_PKG_LIBTASN1 is not set
CONFIG_PKG_LIBTERMCAP=y
# CONFIG_PKG_LIBTIFF is not set
# CONFIG_PKG_LIBTOOL is not set
# CONFIG_PKG_LIBUSB is not set
# CONFIG_PKG_LIBXML2 is not set
# CONFIG_PKG_LINUX_ATM is not set
# CONFIG_PKG_LINUX_WLAN is not set
# CONFIG_PKG_MPFR is not set
# CONFIG_PKG_LKC is not set
# CONFIG_PKG_LOGROTATE is not set
# CONFIG_PKG_LTP is not set
# CONFIG_PKG_LMBENCH is not set
# CONFIG_PKG_LM_SENSORS is not set
# CONFIG_PKG_LRZSZ is not set
# CONFIG_PKG_LZO is not set
# CONFIG_PKG_M4 is not set
# CONFIG_PKG_MADPLAY is not set
# CONFIG_PKG_MAKE is not set
# CONFIG_PKG_MAN is not set

#
# Matchbox window manager packages
#
CONFIG_CHOICE_MATCHBOX_NONE=y
# CONFIG_CHOICE_MATCHBOX is not set
# CONFIG_PKG_MDADM is not set
CONFIG_PKG_MERGE=y
# CONFIG_PKG_MICROWINDOWS is not set
# CONFIG_PKG_MIITOOL is not set
# CONFIG_PKG_MINICOM is not set
CONFIG_PKG_MODEPS=y
# CONFIG_PKG_MODUTILS is not set
# CONFIG_PKG_MODULE_INIT_TOOLS is not set
CONFIG_MODUTILS_NONE=y
# CONFIG_PKG_MPLAYER is not set
# CONFIG_PKG_MP3PLAY is not set
# CONFIG_PKG_MTD_UTILS is not set
# CONFIG_PKG_MUX_SERVER is not set
# CONFIG_PKG_MYSQL is not set
# CONFIG_PKG_NAUTILUS is not set
# CONFIG_PKG_NCURSES is not set
# CONFIG_PKG_NET_SNMP is not set
# CONFIG_PKG_NET_TOOLS is not set
# CONFIG_PKG_NETCAT is not set
# CONFIG_PKG_NETPERF is not set
# CONFIG_PKG_NFS_UTILS is not set
# CONFIG_PKG_NSS_MDNS is not set
# CONFIG_PKG_NTPCLIENT is not set
# CONFIG_PKG_OPENOBEX is not set
# CONFIG_PKG_OPENCV is not set
# CONFIG_PKG_OPENSSH is not set
# CONFIG_PKG_OPENSSL is not set
# CONFIG_PKG_OPROFILE is not set
# CONFIG_PKG_ORBIT2 is not set
# CONFIG_PKG_PANGO is not set
# CONFIG_PKG_PATCH is not set
# CONFIG_PKG_PCIUTILS is not set
# CONFIG_PKG_PCMCIAUTILS is not set
# CONFIG_PKG_PCRE is not set
# CONFIG_PKG_PERL is not set
# CONFIG_PKG_PHP is not set
# CONFIG_PKG_PIDENTD is not set
# CONFIG_PKG_PKGCONFIG is not set
# CONFIG_PKG_PLAY is not set
# CONFIG_PKG_POPPLER is not set
# CONFIG_PKG_POPT is not set
# CONFIG_PKG_PORTMAP is not set
# CONFIG_PKG_PPP is not set
# CONFIG_PKG_PROCINFO is not set
# CONFIG_PKG_PROCPS is not set
# CONFIG_PKG_PSMISC is not set
# CONFIG_PKG_PYTHON is not set

#
# Qt
#
CONFIG_QT_NONE=y
# CONFIG_PKG_QT_EMBEDDED is not set
# CONFIG_PKG_QT_X11 is not set

#
# Qtopia
#
CONFIG_QTOPIA_NONE=y
# CONFIG_PKG_QTOPIA is not set
# CONFIG_PKG_QTOPIA_4 is not set

#
# Applications
#

#
# Settings applications
#
# CONFIG_PKG_READLINE is not set
# CONFIG_PKG_RPM is not set
# CONFIG_PKG_RNG_TOOLS is not set
# CONFIG_PKG_RSYNC is not set
# CONFIG_PKG_RT_TESTS is not set
# CONFIG_PKG_RTCTEST is not set
# CONFIG_PKG_SAMBA is not set
# CONFIG_PKG_SASH is not set
# CONFIG_PKG_SCHEDUTILS is not set
# CONFIG_PKG_SCREEN is not set
# CONFIG_PKG_SED is not set
# CONFIG_PKG_SEQ is not set
# CONFIG_PKG_SETSERIAL is not set
# CONFIG_PKG_SIMICSFS_MOD is not set
CONFIG_PKG_SKELL=y
# CONFIG_PKG_SKELL_WANT_TERMINFO is not set
# CONFIG_PKG_SPARSE is not set
# CONFIG_PKG_STATSERIAL is not set
# CONFIG_PKG_SQLITE is not set
# CONFIG_PKG_STRACE is not set
CONFIG_PKG_SYSCONFIG=y
# CONFIG_PKG_SYSFSUTILS is not set
# CONFIG_PKG_SYSKLOGD is not set
# CONFIG_PKG_SYSSTAT is not set
# CONFIG_PKG_SYSVINIT is not set
# CONFIG_PKG_TAR is not set
# CONFIG_PKG_TCLAP is not set
# CONFIG_PKG_TCPDUMP is not set
# CONFIG_PKG_TCP_WRAPPERS is not set
# CONFIG_PKG_TERMCAP is not set
# CONFIG_PKG_TEXINFO is not set
# CONFIG_PKG_TIME is not set
# CONFIG_PKG_TIMEZONE is not set
# CONFIG_PKG_TINYLOGIN is not set
# CONFIG_PKG_TINYPROXY is not set
# CONFIG_PKG_TOTEM is not set
# CONFIG_PKG_TOTEM_PL_PARSER is not set
# CONFIG_PKG_TSLIB is not set
# CONFIG_PKG_TUNCTL is not set
# CONFIG_PKG_USBUTILS is not set
# CONFIG_PKG_UCLINUX_CKSUM is not set
# CONFIG_PKG_UTIL_LINUX is not set
# CONFIG_PKG_U_BOOT_TOOLS is not set
# CONFIG_PKG_UNIFDEF is not set
# CONFIG_PKG_UNZIP is not set
# CONFIG_PKG_VIM is not set
# CONFIG_PKG_VPLAY is not set
# CONFIG_PKG_VSFTPD is not set
# CONFIG_PKG_WATCHDOG is not set
# CONFIG_PKG_WGET is not set
# CONFIG_PKG_WHICH is not set
# CONFIG_PKG_WIRELESS_TOOLS is not set
# CONFIG_PKG_XFSPROGS is not set
# CONFIG_PKG_LIBXKBCOMMON is not set
# CONFIG_PKG_LIBXCB is not set
# CONFIG_PKG_LIBFFI is not set
# CONFIG_PKG_WAYLAND is not set

#
# X11
#
CONFIG_X11_NONE=y
# CONFIG_PKG_XORG_SERVER is not set

#
# X11 libraries and packages
#
# CONFIG_PKG_RANDRPROTO is not set
# CONFIG_PKG_RENDERPROTO is not set
# CONFIG_PKG_FIXESPROTO is not set
# CONFIG_PKG_DAMAGEPROTO is not set
# CONFIG_PKG_XF86DRIPROTO is not set
# CONFIG_PKG_XCMISCPROTO is not set
# CONFIG_PKG_XEXTPROTO is not set
# CONFIG_PKG_XPROTO is not set
# CONFIG_PKG_SCRNSAVERPROTO is not set
# CONFIG_PKG_BIGREQSPROTO is not set
# CONFIG_PKG_RESOURCEPROTO is not set
# CONFIG_PKG_FONTSPROTO is not set
# CONFIG_PKG_INPUTPROTO is not set
# CONFIG_PKG_KBPROTO is not set
# CONFIG_PKG_VIDEOPROTO is not set
# CONFIG_PKG_COMPOSITEPROTO is not set
# CONFIG_PKG_RECORDPROTO is not set
# CONFIG_PKG_FONTCACHEPROTO is not set
# CONFIG_PKG_XF86BIGFONTPROTO is not set
# CONFIG_PKG_XCB_PROTO is not set
# CONFIG_PKG_LIBPTHREAD_STUBS is not set
# CONFIG_PKG_LIBFONTENC is not set
# CONFIG_PKG_XTRANS is not set
# CONFIG_PKG_LIBDRM is not set
# CONFIG_PKG_PIXMAN is not set
# CONFIG_PKG_LIBXKBFILE is not set
# CONFIG_PKG_LIBXFONT is not set
# CONFIG_PKG_LIBXDMCP is not set
# CONFIG_PKG_LIBXAU is not set
# CONFIG_PKG_LIBX11 is not set
# CONFIG_PKG_LIBXEXT is not set
# CONFIG_PKG_LIBXFT is not set
# CONFIG_PKG_LIBXRANDR is not set
# CONFIG_PKG_LIBXRENDER is not set
# CONFIG_PKG_LIBXFIXES is not set
# CONFIG_PKG_LIBXDAMAGE is not set
# CONFIG_PKG_LIBPCIACCESS is not set
# CONFIG_PKG_FONTUTIL is not set
# CONFIG_PKG_LIBICE is not set
# CONFIG_PKG_LIBSM is not set
# CONFIG_PKG_LIBXPM is not set
# CONFIG_PKG_LIBXT is not set
# CONFIG_PKG_LIBXMU is not set
# CONFIG_PKG_LIBXAW is not set
# CONFIG_PKG_LIBXXF86DGA is not set
# CONFIG_PKG_XORG_X11_XKB_UTILS is not set
# CONFIG_PKG_XORG_X11_PROTO_DEVEL is not set
# CONFIG_PKG_XORG_X11_TWM is not set
# CONFIG_PKG_XTERM is not set
# CONFIG_PKG_YAFFS_UTILS is not set
# CONFIG_PKG_ZAPTEL is not set
CONFIG_PKG_ZLIB=y

#
# Additional Package selection
#

#
# Target System Configuration
#

#
# Options
#
CONFIG_SYSCFG_HOSTNAME="freescale"
CONFIG_SYSCFG_WANT_LOGIN_TTY=y
CONFIG_SYSCFG_LOGING_TTY="::respawn:/etc/rc.d/rc_mxc.S"
CONFIG_SYSCFG_MODLIST=""
CONFIG_SYSCFG_START_UDEV=y
# CONFIG_SYSCFG_START_NETWORK is not set
# CONFIG_SYSCFG_SETTIME is not set
# CONFIG_SYSCFG_START_SYSLOG is not set
CONFIG_SYSCFG_START_INETD=y
CONFIG_SYSCFG_INETD_ARGS=""

#
# Target Image Generation
#

#
# Options
#

#
# Choose your root filesystem image type
#
CONFIG_DEPLOYMENT_JFFS2=y
# CONFIG_DEPLOYMENT_UBIFS is not set
# CONFIG_DEPLOYMENT_RAMDISK is not set
# CONFIG_DEPLOYMENT_CRAMFS is not set
# CONFIG_DEPLOYMENT_INITRAMFS is not set
# CONFIG_DEPLOYMENT_ROMFS is not set
# CONFIG_DEPLOYMENT_NFS is not set
CONFIG_SYSCFG_DEPLOYMENT_STYLE="JFFS2"
# CONFIG_WANT_POST_BUILD_SCRIPT is not set
CONFIG_DEPLOYMENT_ERASE_BLOCK_SIZE="512"
# CONFIG_SYSCFG_READONLY_FS is not set
CONFIG_SYSCFG_TMPFS_SIZE="512k"
CONFIG_SYSCFG_RAM_DIRS="/tmp /var"
CONFIG_DEPLOYMENT_ROOTFS_DIR=""
CONFIG_DEPLOYMENT_ROOTFS_KEEPSTAGE=y
# CONFIG_DEPLOYMENT_HL2SL is not set
CONFIG_DEPLOYMENT_RM_DOCS=y
CONFIG_DEPLOYMENT_RM_BOOT=y
CONFIG_DEPLOYMENT_RM_USR_SRC=y
CONFIG_DEPLOYMENT_RM_USR_INCLUDE=y
CONFIG_DEPLOYMENT_RM_LOCALES=y
CONFIG_DEPLOYMENT_RM_USER_DIRS="/opt/qt /usr/share/man /usr/man /u /usr/arm-linux /usr/lib/fonts"
CONFIG_DEPLOYMENT_RM_USER_FILES="/usr/lib/libqte* /usr/include/q* /usr/include/jri*.h /usr/include/npapi.h /usr/include/npupp.h"
CONFIG_DEPLOYMENT_RM_STATIC_LIBS=y
CONFIG_DEPLOYMENT_RM_RPMDB="/var/lib/rpm"
CONFIG_DEPLOYMENT_STRIP=y
# CONFIG_DEPLOYMENT_STRIP_MORE is not set
# CONFIG_DEPLOYMENT_PADDING_EN is not set
CONFIG_DEPLOYMENT_PAGESIZE_KB="4"
CONFIG_ERASE_BLOCK_SIZE="64"
CONFIG_CAP_UCLIBC=y
CONFIG_CAP_GLIBC=y
CONFIG_CAP_LFS_5_1=y
CONFIG_CAP_HAS_MMU=y
CONFIG_CAP_HAS_SHARED=y
CONFIG_PKG_GCC_NAME="nobuild"
CONFIG_SYSCFG_TMPFS="tmpfs"
CONFIG_INITTAB_LINE="::respawn:-/sbin/getty -L console 0 screen"
CONFIG_UCLIBC_DYNAMIC_LINKER="/lib/ld-uClibc.so.0"
CONFIG_GLIBC_DYNAMIC_LINKER="/lib/ld.so.1"
CONFIG_SYSCFG_BAUD="115200"
CONFIG_SYSCFG_CONSOLEDEV="ttyS0"
CONFIG_SYSCFG_BOOTLOADER="u-boot"
CONFIG_U_BOOT_IMAGE_TYPE="ppc"
CONFIG_SYSCFG_RUNKERNELADDR="0x0"
CONFIG_SYSCFG_LOADKERNELADDR="0x800000"
CONFIG_SYSCFG_LOADDTBADDR="0x9F0000"
CONFIG_SYSCFG_LOADRAMADDR="0xB00000"
CONFIG_SYSCFG_CUTARG="zImage"
CONFIG_CAP_FSL_EXT=y
CONFIG_LTIB_RELEASE="8.1.2"


===============================================
</code></pre>

<h1>5. ltib/rootfs is your rootfs</h1>

<pre><code>$ cd ltib/rootfs
$ tar -cjvf ../rootfs.tar.bz2 ./*
$ download u-boot.bin, uImage and rootfs.tar.bz2 to board and reset to run --- Done
</code></pre>

<h1>6. Create device node if not using udev</h1>

<h2>6.1 Create device node manual</h2>

<pre><code>$ cd /home/vmuser/ltib_src/ltib
$ cd rootfs/dev
$ sudo mknod null c 1 3
$ sudo chmod 666 null

$ sudo mknod console c 5 1
$ sudo chmod 777 console

$ for i in 0 1 2 3 4 5 6 7 8 9 10 11 12; do sudo mknod fb$i c 29 $i; done
$ sudo mknod mxc_ipu c 253 0
$ sudo mknod mxc_vpu c 252 0
$ sudo mknod ttymxc0 c 207 16
$ sudo mknod video0  c 81  5
$ sudo mknod video1  c 81  6
$ sudo mknod video16 c 81  0
$ sudo mknod video17 c 81  1
$ sudo mknod galcore c 199 0
</code></pre>

<h2>5.2 Create device node via device_table.txt</h2>

<pre><code>$ edit ltib/bin/device_table.txt to add your device node as below

# Based on: buildroot/target/generic/device_table.txt
# see: http://buildroot.uclibc.org/
#
# When building a target filesystem, it is desirable to not have to
# become root and then run 'mknod' a thousand times.  Using a device 
# table you can create device nodes and directories "on the fly".
#
# This is a sample device table file for use with genext2fs.  You can
# do all sorts of interesting things with a device table file.  For
# example, if you want to adjust the permissions on a particular file
# you can just add an entry like:
#   /sbin/foobar        f       2755    0       0       -       -       -       -       -
# and (assuming the file /sbin/foobar exists) it will be made setuid
# root (regardless of what its permissions are on the host filesystem.
# Furthermore, you can use a single table entry to create a many device
# minors.  For example, if I wanted to create /dev/hda and /dev/hda[0-15]
# I could just use the following two table entries:
#   /dev/hda    b       640     0       0       3       0       0       0       -
#   /dev/hda    b       640     0       0       3       1       1       1       15
# 
# Device table entries take the form of:
# &lt;name&gt;    &lt;type&gt;      &lt;mode&gt;  &lt;uid&gt;   &lt;gid&gt;   &lt;major&gt; &lt;minor&gt; &lt;start&gt; &lt;inc&gt;   &lt;count&gt;
# where name is the file name,  type can be one of: 
#       f       A regular file
#       d       Directory
#       c       Character special device file
#       b       Block special device file
#       p       Fifo (named pipe)
# uid is the user id for the target file, gid is the group id for the
# target file.  The rest of the entries (major, minor, etc) apply only 
# to device special files.

# Have fun
# -Erik Andersen &lt;andersen@codepoet.org&gt;
#

#&lt;name&gt;     &lt;type&gt;  &lt;mode&gt;  &lt;uid&gt;   &lt;gid&gt;   &lt;major&gt; &lt;minor&gt; &lt;start&gt; &lt;inc&gt;   &lt;count&gt;
/dev        d   755 0   0   -   -   -   -   -
/dev/null   c   666 0   0   1   3   0   0   -
/dev/zero   c   666 0   0   1   5   0   0   -
/dev/console    c   666 0   0   5   1   -   -   -
/dev/fb     c   640 0   5   29  0   0   1   13

# iMX use /dev/ttymxc0 as default console
/dev/ttymxc c   660 0   0   207 16  0   1   3


# MTD stuff
/dev/mtd    c   640 0   0   90  0   0   2   7
/dev/mtdblock   b   640 0   0   31  0   0   1   7

# SD stuff
/dev/mmcblk0    b   640 0   0   179 0   -   -   -
/dev/mmcblk0p1  b   640 0   0   179 1   -   -   -

#video
/dev/video  c   640 0   0   81  0   0   1   2
/dev/video  c   640 0   0   81  2   16  1   4

#mmcblk
/dev/mmcblk0    b   640 0   0   179 0   -   -   -       
/dev/mmcblk0p   b   640 0   0   179 1   1   1   2
/dev/mmcblk0boot0 b 640 0   0   179 8   -   -   -
/dev/mmcblk0boot1 b 640 0   0   179 16  -   -   -

#mxc
/dev/mxc_asrc   c   640 0   0   250 0   -   -   -
/dev/mxc_vpu    c   640 0   0   251 0   -   -   -
/dev/mxc_hdmi   c   640 0   0   252 0   -   -   -
/dev/mxc_ipu    c   640 0   0   253 0   -   -   -


$  ./ltib -p dev -f //refresh dev node to rootfs 
</code></pre>

<h1>6. Modify /etc/inittab</h1>

<pre><code>//copy from buildroot

# /etc/inittab
#
# Copyright (C) 2001 Erik Andersen &lt;andersen@codepoet.org&gt;
#
# Note: BusyBox init doesn't support runlevels.  The runlevels field is
# completely ignored by BusyBox init. If you want runlevels, use
# sysvinit.
#
# Format for each entry: &lt;id&gt;:&lt;runlevels&gt;:&lt;action&gt;:&lt;process&gt;
#
# id        == tty to run on, or empty for /dev/console
# runlevels == ignored
# action    == one of sysinit, respawn, askfirst, wait, and once
# process   == program to run

# Startup the system
null::sysinit:/bin/mount -t proc proc /proc
null::sysinit:/bin/mount -o remount,rw /
null::sysinit:/bin/mkdir -p /dev/pts
null::sysinit:/bin/mkdir -p /dev/shm
null::sysinit:/bin/mount -a
null::sysinit:/bin/hostname -F /etc/hostname
# now run any rc scripts
::sysinit:/etc/init.d/rcS

# Put a getty on the serial port
ttymxc0::respawn:/sbin/getty -L  ttymxc0 0 vt100 # GENERIC_SERIAL

# Stuff to do for the 3-finger salute
::ctrlaltdel:/sbin/reboot

# Stuff to do before rebooting
::shutdown:/etc/init.d/rcK
::shutdown:/sbin/swapoff -a
::shutdown:/bin/umount -a -r
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build qt5.4.1 and qt3d using vs2013]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/07/build-qt5.4.1-and-qt3d-using-vs2013/"/>
    <updated>2015-05-07T09:55:40+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/07/build-qt5.4.1-and-qt3d-using-vs2013</id>
    <content type="html"><![CDATA[<h1>1. Install required tools</h1>

<ul>
<li>1) Install ActivePerl-5.20.2.2001-MSWin32-x86-64int-298913.msi</li>
<li>2) Install PowerVRSDKSetup-3.4.exe</li>
<li>3) Install gingkoVG SDK</li>
</ul>


<h1>2. Get qt5 source code</h1>

<pre><code>Version: qt-everywhere-opensource-src-5.4.1.tar.xz
</code></pre>

<h1>3. Extract source code and configure</h1>

<pre><code>Source dir: F:\download\qt-everywhere-opensource-src-5.4.1
Build  dir: F:\download\qt-everywhere-opensource-src-5.4.1-build

start cmd from "Developer Command Prompt for VS2013"

D:\Microsoft Visual Studio 12.0&gt;

&gt; set path=D:\perl\bin;%path%
&gt; 
&gt; set INCLUDE=D:\Imagination\PowerVR_Graphics\PowerVR_SDK\SDK_3.4\Builds\Include;%INCLUDE%
&gt; set LIB=D:\Imagination\PowerVR_Graphics\PowerVR_SDK\SDK_3.4\Builds\Windows\x86_64\Lib;%LIB%
&gt;  
&gt; F:
&gt; cd F:\download\qt-everywhere-opensource-src-5.4.1\qtbase
&gt; Add .gitignore file, contain "foo"
&gt;
&gt; cd F:\download\qt-everywhere-opensource-src-5.4.1
&gt; git clone https://github.com/chdinh/qt3d.git qt3d
&gt; 
&gt; cd F:\download\qt-everywhere-opensource-src-5.4.1-build
&gt; ..\qt-everywhere-opensource-src-5.4.1\configure -debug-and-release
    -confirm-license -opensource -platform win32-msvc2013 -prefix "D:\Qt\Qt5.4.1" -qt-libpng -qt-libjpeg -qt-freetype -opengl desktop -openvg -nomake tests -make examples -skip qtwebkit -skip qtwebengine

//configure output
        copy qmake.exe F:\download\qt-everywhere-opensource-src-5.4.1-build\qtbase\bin\qmake.exe
已复制         1 个文件。
Running configuration tests...
Environment:
    INCLUDE=
      D:\Imagination\PowerVR_Graphics\PowerVR_SDK\SDK_3.4\Builds\Include
      D:\Microsoft Visual Studio 12.0\VC\INCLUDE
      D:\Microsoft Visual Studio 12.0\VC\ATLMFC\INCLUDE
      C:\Program Files (x86)\Windows Kits\8.1\include\shared
      C:\Program Files (x86)\Windows Kits\8.1\include\um
      C:\Program Files (x86)\Windows Kits\8.1\include\winrt

    LIB=
      D:\Imagination\PowerVR_Graphics\PowerVR_SDK\SDK_3.4\Builds\Windows\x86_64\Lib
      D:\Microsoft Visual Studio 12.0\VC\LIB
      D:\Microsoft Visual Studio 12.0\VC\ATLMFC\LIB
      C:\Program Files (x86)\Windows Kits\8.1\lib\winv6.3\um\x86

    PATH=
      D:\perl\bin
      D:\Microsoft Visual Studio 12.0\Common7\IDE\CommonExtensions\Microsoft\TestWindow
      C:\Program Files (x86)\Microsoft SDKs\F#\3.1\Framework\v4.0\
      C:\Program Files (x86)\MSBuild\12.0\bin
      D:\Microsoft Visual Studio 12.0\Common7\IDE\
      D:\Microsoft Visual Studio 12.0\VC\BIN
      D:\Microsoft Visual Studio 12.0\Common7\Tools
      C:\Windows\Microsoft.NET\Framework\v4.0.30319
      D:\Microsoft Visual Studio 12.0\VC\VCPackages
      C:\Program Files (x86)\HTML Help Workshop
      D:\Microsoft Visual Studio 12.0\Team Tools\Performance Tools
      C:\Program Files (x86)\Windows Kits\8.1\bin\x86
      C:\Program Files (x86)\Microsoft SDKs\Windows\v8.1A\bin\NETFX 4.5.1 Tools\
      D:\assimp-3.1.1-win-binaries\bin32
      D:\Perl\site\bin
      D:\Perl\bin
      D:\Python27\
      D:\Python27\Scripts
      D:\Qt\Qt5.4.1\5.4\msvc2013_64\bin
      d:\Ruby\Ruby21-x64\bin
      C:\ProgramData\Oracle\Java\javapath
      C:\Windows\system32
      C:\Windows
      C:\Windows\System32\Wbem
      C:\Windows\System32\WindowsPowerShell\v1.0\
      C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\
      C:\Program Files\Microsoft SQL Server\110\Tools\Binn\
      D:\GL_Studio_3.2\\bin
      d:\Git\cmd
      D:\TortoiseSVN\bin
Configuration:
    pcre
    debug
    compile_examples
Qt Configuration:
    minimal-config
    small-config
    medium-config
    large-config
    full-config
    debug_and_release build_all release
    debug
    shared
    zlib
    png
    freetype
    harfbuzz
    build_all
    accessibility
    opengl
    openvg
    egl
    audio-backend
    wmf-backend
    native-gestures
    qpa
    concurrent

QMAKESPEC...................win32-msvc2013 (commandline)
Architecture................i386, features: sse sse2
Host Architecture...........i386, features: sse sse2
Maketool....................nmake
Debug build.................yes (combined)
Default build...............debug
Force debug info............no
C++11 support...............auto
Link Time Code Generation...no
Accessibility support.......yes
RTTI support................yes
SSE2 support................yes
SSE3 support................yes
SSSE3 support...............yes
SSE4.1 support..............yes
SSE4.2 support..............yes
AVX support.................yes
AVX2 support................yes
NEON support................no
OpenGL support..............yes
Large File support..........yes
NIS support.................no
Iconv support...............no
Evdev support...............no
Mtdev support...............no
Inotify support.............no
eventfd(7) support..........no
Glib support................no
CUPS support................no
OpenVG support..............yes
SSL support.................no
OpenSSL support.............no
Qt D-Bus support............no
Qt Widgets module support...yes
Qt GUI module support.......yes
QML debugging...............yes
DirectWrite support.........no
Use system proxies..........no

QPA Backends:
    GDI.....................yes
    Direct2D................no

Third Party Libraries:
    ZLIB support............qt
    GIF support.............plugin
    JPEG support............plugin
    PNG support.............yes
    FreeType support........yes
    Fontconfig support......no
    HarfBuzz support........qt
    PCRE support............qt
    ICU support.............no
    ANGLE...................no
    Dynamic OpenGL..........no

Styles:
    Windows.................yes
    Windows XP..............yes
    Windows Vista...........yes
    Fusion..................yes
    Windows CE..............no
    Windows Mobile..........no

Sql Drivers:
    ODBC....................no
    MySQL...................no
    OCI.....................no
    PostgreSQL..............no
    TDS.....................no
    DB2.....................no
    SQLite..................plugin (qt)
    SQLite2.................no
    InterBase...............no

Sources are in..............F:\download\qt-everywhere-opensource-src-5.4.1\qtbase
Build is done in............F:\download\qt-everywhere-opensource-src-5.4.1-build\qtbase
Install prefix..............D:\Qt\Qt5.4.1
Headers installed to........D:\Qt\Qt5.4.1\include
Libraries installed to......D:\Qt\Qt5.4.1\lib
Arch-dep. data to...........D:\Qt\Qt5.4.1
Plugins installed to........D:\Qt\Qt5.4.1\plugins
Library execs installed to..D:\Qt\Qt5.4.1\bin
QML1 imports installed to...D:\Qt\Qt5.4.1\imports
QML2 imports installed to...D:\Qt\Qt5.4.1\qml
Binaries installed to.......D:\Qt\Qt5.4.1\bin
Arch-indep. data to.........D:\Qt\Qt5.4.1
Docs installed to...........D:\Qt\Qt5.4.1\doc
Translations installed to...D:\Qt\Qt5.4.1\translations
Examples installed to.......D:\Qt\Qt5.4.1\examples
Tests installed to..........D:\Qt\Qt5.4.1\tests

Info: creating super cache file F:\download\qt-everywhere-opensource-src-5.4.1-build\.qmake.super


Qt is now configured for building. Just run nmake.
To reconfigure, run nmake confclean and configure.
</code></pre>

<h1>4. Make and Install</h1>

<pre><code>&gt;
&gt; nmake
&gt;
&gt; namke install
&gt; 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build qt5.5.0 using vs2013]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/05/build-qt5.5.0-using-vs2013/"/>
    <updated>2015-05-05T15:09:56+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/05/build-qt5.5.0-using-vs2013</id>
    <content type="html"><![CDATA[<h1>1. Install required tools</h1>

<ul>
<li>1) Install ActivePerl-5.20.2.2001-MSWin32-x86-64int-298913.msi</li>
<li>2) Install PowerVRSDKSetup-3.4.exe(for opengl)</li>
<li>3) Install gingkoVG SDK (for openvg,optinal)</li>
</ul>


<h1>2. Get qt5.5 source code and unzip</h1>

<pre><code>Version: http://download.qt.io/development_releases/qt/5.5/5.5.0-beta/single/qt-everywhere-opensource-src-5.5.0-beta.zip
</code></pre>

<h1>3. Extract source code and configure</h1>

<pre><code>Source dir: F:\download\qt-everywhere-opensource-src-5.5.0-beta
Build  dir: F:\download\qt-everywhere-opensource-src-5.5.0-beta-build

start cmd from "Developer Command Prompt for VS2013"

D:\Microsoft Visual Studio 12.0&gt;

&gt; set path=D:\perl\bin;%path%
&gt; 
&gt; set INCLUDE=D:\Imagination\PowerVR_Graphics\PowerVR_SDK\SDK_3.4\Builds\Include;%INCLUDE%
&gt; set LIB=D:\Imagination\PowerVR_Graphics\PowerVR_SDK\SDK_3.4\Builds\Windows\x86_32\Lib;%LIB%
&gt;
&gt; set INCLUDE=D:\assimp-3.1.1\include;%INCLUDE%
&gt; set LIB=D:\assimp-3.1.1\lib32;%LIB%
&gt; set PATH=D:\assimp-3.1.1\bin32;%PATH%
&gt;  
&gt; F:
&gt; cd F:\download\qt-everywhere-opensource-src-5.5.0-beta
&gt;
&gt; Modify qt3d\config.tests\assimp\assimp.pro, add below config
&gt;
&gt;
    win32 {
        CONFIG += console
    }  
&gt;
&gt; 
&gt; cd F:\download\qt-everywhere-opensource-src-5.5.0-beta-build
&gt;
&gt; ..\qt-everywhere-opensource-src-5.5.0-beta\configure -debug-and-release -confirm-license -opensource -platform win32-msvc2013 -prefix "D:\Qt\Qt5.5.0_x86_vs2013_development" -qt-libpng -qt-libjpeg -qt-freetype -opengl desktop -openvg -nomake tests -make examples -skip qtwebkit -skip qtwebengine 
&gt;
&gt;        

//configure output
copy qmake.exe ..\bin\qmake.exe
已复制         1 个文件。
Running configuration tests...
Environment:
    INCLUDE=
      D:\assimp-3.1.1-win-binaries\include
      D:\Imagination\PowerVR_Graphics\PowerVR_SDK\SDK_3.4\Builds\Include
      D:\Microsoft Visual Studio 12.0\VC\INCLUDE
      D:\Microsoft Visual Studio 12.0\VC\ATLMFC\INCLUDE
      C:\Program Files (x86)\Windows Kits\8.1\include\shared
      C:\Program Files (x86)\Windows Kits\8.1\include\um
      C:\Program Files (x86)\Windows Kits\8.1\include\winrt

    LIB=
      D:\assimp-3.1.1-win-binaries\lib32
      D:\Imagination\PowerVR_Graphics\PowerVR_SDK\SDK_3.4\Builds\Windows\x86_64\Lib
      D:\Microsoft Visual Studio 12.0\VC\LIB
      D:\Microsoft Visual Studio 12.0\VC\ATLMFC\LIB
      C:\Program Files (x86)\Windows Kits\8.1\lib\winv6.3\um\x86

    PATH=
      D:\assimp-3.1.1-win-binaries\bin32
      D:\perl\bin
      D:\Microsoft Visual Studio 12.0\Common7\IDE\CommonExtensions\Microsoft\TestWindow
      C:\Program Files (x86)\Microsoft SDKs\F#\3.1\Framework\v4.0\
      C:\Program Files (x86)\MSBuild\12.0\bin
      D:\Microsoft Visual Studio 12.0\Common7\IDE\
      D:\Microsoft Visual Studio 12.0\VC\BIN
      D:\Microsoft Visual Studio 12.0\Common7\Tools
      C:\Windows\Microsoft.NET\Framework\v4.0.30319
      D:\Microsoft Visual Studio 12.0\VC\VCPackages
      C:\Program Files (x86)\HTML Help Workshop
      D:\Microsoft Visual Studio 12.0\Team Tools\Performance Tools
      C:\Program Files (x86)\Windows Kits\8.1\bin\x86
      C:\Program Files (x86)\Microsoft SDKs\Windows\v8.1A\bin\NETFX 4.5.1 Tools\
      D:\Perl\site\bin
      D:\Perl\bin
      D:\Python27\
      D:\Python27\Scripts
      D:\Qt\Qt5.4.1\5.4\msvc2013_64\bin
      d:\Ruby\Ruby21-x64\bin
      C:\ProgramData\Oracle\Java\javapath
      C:\Windows\system32
      C:\Windows
      C:\Windows\System32\Wbem
      C:\Windows\System32\WindowsPowerShell\v1.0\
      C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\
      C:\Program Files\Microsoft SQL Server\110\Tools\Binn\
      D:\GL_Studio_3.2\\bin
      d:\Git\cmd
      D:\TortoiseSVN\bin
Configuration:
    pcre
    debug
    compile_examples
Qt Configuration:
    minimal-config
    small-config
    medium-config
    large-config
    full-config
    debug_and_release build_all release
    debug
    shared
    zlib
    png
    freetype
    harfbuzz
    build_all
    accessibility
    opengl
    openvg
    egl
    audio-backend
    wmf-backend
    native-gestures
    qpa
    concurrent

QMAKESPEC...................win32-msvc2013 (commandline)
Architecture................i386, features: sse sse2
Host Architecture...........i386, features: sse sse2
Maketool....................nmake
Debug build.................yes (combined)
Default build...............debug
Force debug info............no
C++11 support...............auto
Link Time Code Generation...no
Accessibility support.......yes
RTTI support................yes
SSE2 support................yes
SSE3 support................yes
SSSE3 support...............yes
SSE4.1 support..............yes
SSE4.2 support..............yes
AVX support.................yes
AVX2 support................yes
NEON support................no
OpenGL support..............yes
Large File support..........yes
NIS support.................no
Iconv support...............no
Evdev support...............no
Mtdev support...............no
Inotify support.............no
eventfd(7) support..........no
Glib support................no
CUPS support................no
OpenVG support..............yes
SSL support.................no
OpenSSL support.............no
libproxy support............no
Qt D-Bus support............no
Qt Widgets module support...yes
Qt GUI module support.......yes
QML debugging...............yes
DirectWrite support.........no
Use system proxies..........no

QPA Backends:
    GDI.....................yes
    Direct2D................no

Third Party Libraries:
    ZLIB support............qt
    GIF support.............plugin
    JPEG support............plugin
    PNG support.............yes
    FreeType support........yes
    Fontconfig support......no
    HarfBuzz support........qt
    PCRE support............qt
    ICU support.............no
    ANGLE...................no
    Dynamic OpenGL..........no

Styles:
    Windows.................yes
    Windows XP..............yes
    Windows Vista...........yes
    Fusion..................yes
    Windows CE..............no
    Windows Mobile..........no

Sql Drivers:
    ODBC....................no
    MySQL...................no
    OCI.....................no
    PostgreSQL..............no
    TDS.....................no
    DB2.....................no
    SQLite..................plugin (qt)
    SQLite2.................no
    InterBase...............no

Sources are in..............F:\download\qt-everywhere-opensource-src-5.5.0-beta\qtbase
Build is done in............F:\download\qt-everywhere-opensource-src-5.5.0-beta-build\qtbase
Install prefix..............D:\Qt\Qt5.5.0_x86_vs2013_development
Headers installed to........D:\Qt\Qt5.5.0_x86_vs2013_development\include
Libraries installed to......D:\Qt\Qt5.5.0_x86_vs2013_development\lib
Arch-dep. data to...........D:\Qt\Qt5.5.0_x86_vs2013_development
Plugins installed to........D:\Qt\Qt5.5.0_x86_vs2013_development\plugins
Library execs installed to..D:\Qt\Qt5.5.0_x86_vs2013_development\bin
QML1 imports installed to...D:\Qt\Qt5.5.0_x86_vs2013_development\imports
QML2 imports installed to...D:\Qt\Qt5.5.0_x86_vs2013_development\qml
Binaries installed to.......D:\Qt\Qt5.5.0_x86_vs2013_development\bin
Arch-indep. data to.........D:\Qt\Qt5.5.0_x86_vs2013_development
Docs installed to...........D:\Qt\Qt5.5.0_x86_vs2013_development\doc
Translations installed to...D:\Qt\Qt5.5.0_x86_vs2013_development\translations
Examples installed to.......D:\Qt\Qt5.5.0_x86_vs2013_development\examples
Tests installed to..........D:\Qt\Qt5.5.0_x86_vs2013_development\tests

Info: creating super cache file F:\download\qt-everywhere-opensource-src-5.5.0-beta-build\.qmake.super


Qt is now configured for building. Just run nmake.
To reconfigure, run nmake confclean and configure.


f:\download\qt-everywhere-opensource-src-5.5.0-beta-build&gt; 
</code></pre>

<h1>4. Make and Install</h1>

<pre><code>&gt; nmake module-qtbase         // make qtbase module
&gt;
&gt; nmake module-qtdeclarative  // make qtdeclarative module
&gt;
&gt; nmake
&gt;
&gt; namke install
&gt; 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build linux for imx6]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/16/build-linux-for-imx6/"/>
    <updated>2015-04-16T19:26:06+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/16/build-linux-for-imx6</id>
    <content type="html"><![CDATA[<h1>1.      Install Host OS</h1>

<h2>1.1     Install VMware</h2>

<pre><code>Version: VMware10.03
</code></pre>

<h2>1.2     Install ubuntu server on VMware</h2>

<pre><code>Version: ubuntu-14.04.2-server-amd64
</code></pre>

<h2>1.3     Update Sources</h2>

<pre><code>$sudo apt-get update
</code></pre>

<h1>2.      Install Host OS Service</h1>

<h2>2.1     Install ssh service</h2>

<pre><code>$ sudo apt-get install openssh-client openssh-server
</code></pre>

<h2>2.2     Install samba service</h2>

<pre><code>$ sudo apt-get install samba

$ sudo vim /etc/samba/smb.conf and add below section to the file end

[home]
comment = samba share path /home
browseable = yes
writeable = yes
path = /home
valid users = smb

$ sudo useradd smb          //add user smb

$ sudo smbpasswd -a smb     //set password for smb user

$ /etc/init.d/smbd restart  //restart smbd service
</code></pre>

<h1>3.      Install Host OS build essential</h1>

<pre><code>$ sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib \
    build-essential chrpath socat libsdl1.2-dev xterm curl tcl rpm bison m4 \
    zlib1g zlib1g-dev libncurses5-dev liblzo2-dev uuid-dev lzop texi2html texinfo \
    texlive gettext libgtk2.0-dev rpm bison m4 libfreetype6-dev libdbus-glib-1-dev \
    liborbit2-dev intltool ccache libtool uuid-dev liblzo2-dev tcl dpkg asciidoc \
    texlive-latex-base dblatex xutils-dev texlive texinfo lib32z1 lib32ncurses5 \
    lib32bz2-1.0 libc6-dev-i386 u-boot-tools scrollkeeper dos2unix
</code></pre>

<h1>4.      Build image for imx6 using yocto</h1>

<h2>4.1     Install repo</h2>

<pre><code>$ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo

$ export PATH=$PATH:/home/vmuser/bin

$ git config --global user.email "user name@email.com"

$ git config --global user.name "User Name" 
</code></pre>

<h2>4.2     Download freescale community bsp source code</h2>

<pre><code>$ mkdir fsl-community-bsp
$ cd fsl-community-bsp
$ repo init -u https://github.com/Freescale/fsl-community-bsp-platform -b dora
$ repo sync
</code></pre>

<h2>4.3     Change branch and sync</h2>

<pre><code>$ cd fsl-community-bsp
$ repo init -b master   //master or other branch
$ repo sync
</code></pre>

<h2>4.4     First build</h2>

<h3>4.4.1   Sync source code and setup environment</h3>

<pre><code>$ cd fsl-community-bsp
$ repo sync
$ source setup-environment build
$ ls
conf
</code></pre>

<h3>4.4.2   Choose your board</h3>

<pre><code>$ cd fsl-community-bsp

$ cd build

$ vim conf/local.conf #you can change MACHINE

MACHINE ??= 'imx6qsabresd'
DISTRO ?= 'poky'
PACKAGE_CLASSES ?= "package_rpm"
EXTRA_IMAGE_FEATURES = "debug-tweaks"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"
BB_DISKMON_DIRS = "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K"
CONF_VERSION = "1"

BB_NUMBER_THREADS = '1'
PARALLEL_MAKE = '-j 1'

DL_DIR ?= "${BSPDIR}/downloads/"
ACCEPT_FSL_EULA = "1"


//list all freescale boards conf
$ ls ../sources/meta-fsl-arm/conf/machine/*.conf -l
    -rw-rw-r-- 1 vmuser vmuser  539 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx23evk.conf
    -rw-rw-r-- 1 vmuser vmuser 2440 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx28evk.conf
    -rw-rw-r-- 1 vmuser vmuser  667 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx31pdk.conf
    -rw-rw-r-- 1 vmuser vmuser  603 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx35pdk.conf
    -rw-rw-r-- 1 vmuser vmuser  333 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx51evk.conf
    -rw-rw-r-- 1 vmuser vmuser  469 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx53ard.conf
    -rw-rw-r-- 1 vmuser vmuser  460 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx53qsb.conf
    -rw-rw-r-- 1 vmuser vmuser  638 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6dlsabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  393 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6dlsabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  533 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6qsabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  432 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6qsabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  432 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6slevk.conf
    -rw-rw-r-- 1 vmuser vmuser  615 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6solosabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  468 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6solosabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  542 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/twr-vf65gs10.conf

//list all non-freescale boards conf
$ ls ../sources/meta-fsl-arm-extra/conf/machine/*.conf -l
    -rw-rw-r-- 1 vmuser vmuser  155 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10036.conf
    -rw-rw-r-- 1 vmuser vmuser  199 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10037.conf
    -rw-rw-r-- 1 vmuser vmuser  234 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10049.conf
    -rw-rw-r-- 1 vmuser vmuser  234 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10055.conf
    -rw-rw-r-- 1 vmuser vmuser  229 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10056.conf
    -rw-rw-r-- 1 vmuser vmuser  255 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10057.conf
    -rw-rw-r-- 1 vmuser vmuser  255 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10058.conf
    -rw-rw-r-- 1 vmuser vmuser  466 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cgtqmx6.conf
    -rw-rw-r-- 1 vmuser vmuser  246 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-maxi.conf
    -rw-rw-r-- 1 vmuser vmuser  190 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-micro.conf
    -rw-rw-r-- 1 vmuser vmuser  188 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-mini.conf
    -rw-rw-r-- 1 vmuser vmuser  508 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx6qsabrelite.conf
    -rw-rw-r-- 1 vmuser vmuser  726 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/m28evk.conf
    -rw-rw-r-- 1 vmuser vmuser  767 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/m53evk.conf
    -rw-rw-r-- 1 vmuser vmuser 1641 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/nitrogen6x.conf
    -rw-rw-r-- 1 vmuser vmuser  786 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/nitrogen6x-lite.conf
    -rw-rw-r-- 1 vmuser vmuser  538 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-dual.conf
    -rw-rw-r-- 1 vmuser vmuser  529 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-quad.conf
    -rw-rw-r-- 1 vmuser vmuser  465 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-solo.conf

//list available images
$ find ../sources -name *image*
    ../sources/meta-fsl-arm/scripts/lib/image
    ../sources/meta-fsl-arm/classes/mfgtool-initramfs-image.bbclass
    ../sources/meta-fsl-arm/classes/image_types_fsl.bbclass
    ../sources/meta-fsl-arm/recipes-fsl/images
    ../sources/meta-fsl-arm/recipes-fsl/images/fsl-image-mfgtool-initramfs.bb
    ../sources/poky/scripts/lib/image
    ../sources/poky/scripts/lib/image/canned-wks/sdimage-bootpart.wks
    ../sources/poky/scripts/lib/wic/plugins/imager
    ../sources/poky/scripts/lib/wic/plugins/source/fsimage.py
    ../sources/poky/scripts/lib/wic/imager
    ../sources/poky/scripts/lib/wic/imager/baseimager.py
    ../sources/poky/scripts/test-remote-image
    ../sources/poky/scripts/contrib/ddimage
    ../sources/poky/scripts/runqemu-addptable2image
    ../sources/poky/documentation/ref-manual/ref-images.xml
    ../sources/poky/documentation/ref-manual/figures/image-generation.png
    ../sources/poky/documentation/ref-manual/figures/images.png
    ../sources/poky/documentation/mega-manual/figures/image-generation.png
    ../sources/poky/documentation/mega-manual/figures/images.png
    ../sources/poky/documentation/mega-manual/figures/using-a-pre-built-image.png
    ../sources/poky/documentation/mega-manual/figures/building-an-image.png
    ../sources/poky/documentation/yocto-project-qs/figures/using-a-pre-built-image.png
    ../sources/poky/documentation/yocto-project-qs/figures/building-an-image.png
    ../sources/poky/bitbake/bin/image-writer
    ../sources/poky/bitbake/lib/toaster/orm/migrations/0005_auto__add_target_image_file__add_target_file__add_field_variablehistor.py
    ../sources/poky/bitbake/lib/toaster/orm/migrations/0006_auto__add_field_target_image_size__add_field_target_license_manifest_p.py
    ../sources/poky/bitbake/lib/toaster/toastergui/static/css/images
    ../sources/poky/bitbake/lib/bb/ui/icons/images
    ../sources/poky/bitbake/lib/bb/ui/icons/images/images_hover.png
    ../sources/poky/bitbake/lib/bb/ui/icons/images/images_display.png
    ../sources/poky/bitbake/lib/bb/ui/crumbs/imagedetailspage.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/imageconfigurationpage.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/saveimagedialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/retrieveimagedialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/imageselectiondialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/deployimagedialog.py
    ../sources/poky/meta-selftest/recipes-test/images
    ../sources/poky/meta-selftest/recipes-test/images/oe-selftest-image.bb
    ../sources/poky/meta/recipes-extended/images
    ../sources/poky/meta/recipes-extended/images/core-image-lsb-sdk.bb
    ../sources/poky/meta/recipes-extended/images/core-image-full-cmdline.bb
    ../sources/poky/meta/recipes-extended/images/core-image-kernel-dev.bb
    ../sources/poky/meta/recipes-extended/images/core-image-lsb.bb
    ../sources/poky/meta/recipes-extended/images/core-image-testmaster.bb
    ../sources/poky/meta/recipes-extended/images/core-image-lsb-dev.bb
    ../sources/poky/meta/recipes-extended/images/core-image-testmaster-initramfs.bb
    ../sources/poky/meta/recipes-multimedia/gstreamer/gst-ffmpeg-0.10.13/0001-avcodec-msrle-use-av_image_get_linesize-to-calculate.patch
    ../sources/poky/meta/recipes-qt/images
    ../sources/poky/meta/recipes-qt/images/qt4e-demo-image.bb
    ../sources/poky/meta/recipes-qt/qt4/qt4-4.8.6/0028-Don-t-crash-on-broken-GIF-images.patch
    ../sources/poky/meta/recipes-graphics/xorg-lib/xcb-util-image_0.4.0.bb
    ../sources/poky/meta/recipes-graphics/images
    ../sources/poky/meta/recipes-graphics/images/core-image-x11.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-directfb.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-weston.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-clutter.bb
    ../sources/poky/meta/recipes-devtools/mkelfimage
    ../sources/poky/meta/recipes-devtools/mkelfimage/mkelfimage
    ../sources/poky/meta/recipes-devtools/mkelfimage/mkelfimage_git.bb
    ../sources/poky/meta/recipes-core/images
    ../sources/poky/meta/recipes-core/images/core-image-minimal.bb
    ../sources/poky/meta/recipes-core/images/core-image-base.bb
    ../sources/poky/meta/recipes-core/images/build-appliance-image_12.0.1.bb
    ../sources/poky/meta/recipes-core/images/build-appliance-image
    ../sources/poky/meta/recipes-core/images/core-image-minimal-mtdutils.bb
    ../sources/poky/meta/recipes-core/images/core-image-minimal-dev.bb
    ../sources/poky/meta/recipes-core/images/core-image-minimal-initramfs.bb
    ../sources/poky/meta/classes/image-buildinfo.bbclass
    ../sources/poky/meta/classes/testimage-auto.bbclass
    ../sources/poky/meta/classes/testimage.bbclass
    ../sources/poky/meta/classes/image_types_uboot.bbclass
    ../sources/poky/meta/classes/image-vmdk.bbclass
    ../sources/poky/meta/classes/core-image.bbclass
    ../sources/poky/meta/classes/image.bbclass
    ../sources/poky/meta/classes/image_types.bbclass
    ../sources/poky/meta/classes/image-prelink.bbclass
    ../sources/poky/meta/classes/image-swab.bbclass
    ../sources/poky/meta/classes/image-live.bbclass
    ../sources/poky/meta/classes/image-mklibs.bbclass
    ../sources/poky/meta/lib/oe/image.py
    ../sources/poky/meta/lib/oeqa/controllers/masterimage.py
    ../sources/poky/meta/recipes-bsp/u-boot/u-boot-mkimage_2015.01.bb
    ../sources/poky/meta/recipes-rt/images
    ../sources/poky/meta/recipes-rt/images/core-image-rt.bb
    ../sources/poky/meta/recipes-rt/images/core-image-rt-sdk.bb
    ../sources/poky/meta/recipes-connectivity/connman/connman-gnome/images
    ../sources/poky/meta/recipes-sato/images
    ../sources/poky/meta/recipes-sato/images/core-image-sato.bb
    ../sources/poky/meta/recipes-sato/images/core-image-sato-dev.bb
    ../sources/poky/meta/recipes-sato/images/core-image-sato-sdk.bb
    ../sources/poky/meta-skeleton/recipes-multilib/images
    ../sources/poky/meta-skeleton/recipes-multilib/images/core-image-multilib-example.bb
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image/libsdl-image
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image/libsdl-image_1.2.12.bb
    ../sources/meta-openembedded/meta-oe/recipes-graphics/lxdm/lxdm/0001-lxdm.conf.in-blacklist-root-for-release-images.patch
    ../sources/meta-openembedded/meta-oe/recipes-graphics/nonworking/slim/slim/0002-Fix-image-handling-integer-overflows.patch
    ../sources/meta-openembedded/meta-oe/recipes-support/imagemagick
    ../sources/meta-openembedded/meta-oe/recipes-support/imagemagick/imagemagick_6.8.9.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-kexecboot-klibc-image.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-debug-image.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-kexecboot-image.bb
    ../sources/Documentation/release-notes/source/images.inc
    ../sources/Documentation/user-guide/source/images.rst
    ../sources/Documentation/user-guide/source/image-list.inc
    ../sources/meta-fsl-demos/recipes-qt/images
    ../sources/meta-fsl-demos/recipes-qt/images/qt-in-use-image.bb
    ../sources/meta-fsl-demos/recipes-qt/images/qte-in-use-image.bb
    ../sources/meta-fsl-demos/recipes-fsl/images
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-machine-test.bb
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-multimedia-full.bb
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-multimedia.bb
</code></pre>

<h3>4.4.3   Start to build</h3>

<pre><code>//list core-image-base all task 
$ bitbake -c listtasks core-image-base

// download all source only 
$ bitbake -c fetchall core-image-base

//build
$ bitbake core-image-base
</code></pre>

<h1>5.      Build image for imx6 using ltib</h1>

<h2>5.1     Get imx6 bsp source from fresscale sit</h2>

<pre><code>Version: L3.0.35_4.1.0_130816_source.gz
$ cd ~/ltib_src
$ tar xvf L3.0.35_4.1.0_130816_source.gz
</code></pre>

<h2>5.2     Add user super privilege to visudo</h2>

<pre><code>$sudo /usr/sbin/visudo

#add below line for vmuser account super privilege
vmuser ALL = NOPASSWD: /usr/bin/rpm, /opt/freescale/ltib/usr/bin/rpm
</code></pre>

<h2>5.3     Install LTIB</h2>

<pre><code>$ cd ~/ltib_src
$ ./L3.0.35_4.1.0_130816_source/install

......
Installation complete, your ltib installation has been placed in 
/home/vmuser/ltib_src/ltib, to complete the installation:

cd /home/vmuser/ltib_src/ltib
./ltib
</code></pre>

<h2>5.4     Apply ltib ubuntu patch</h2>

<h3>5.4.1   Add librt.so link</h3>

<pre><code>$ sudo ln -s /usr/lib/x86_64-linux-gnu/librt.so   /usr/lib/librt.so
</code></pre>

<h3>5.4.2   Apply 0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch</h3>

<pre><code>$ cd /home/vmuser/ltib_src/ltib
$ wget https://community.freescale.com/servlet/JiveServlet/download/100725-3-274381/0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch.zip
$ unzip 0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch.zip
$ git apply 0001_make_L3.0.35_4.1.0_compile_on_Ubuntu_14.04_64bit_OS.patch
</code></pre>

<h2>5.5     Fist build LTIB for imx6q-sdb</h2>

<pre><code>$ cd /home/vmuser/ltib_src/ltib

$ ./ltib -m config

Platform choice (Freescale iMX reference boards)  ---&gt;


Choose the platform type
Selection (imx6q)  ---&gt;


Choose the packages profile
Selection (use packages in preconfig (Min profile))  ---&gt;


(imx6q) Platform
--- LTIB settings
     System features  ---&gt;
--- Choose the target C library type
    Target C library type (glibc)  ---&gt;
    C library package (from toolchain only)  ---&gt;
    Toolchain component options  ---&gt;
--- Toolchain selection.
    Toolchain (ARM, gcc-4.6.2, multilib, neon optimized, gnueabi/eglibc2.13)  ---&gt;
(-O2 -march=armv7-a -mfpu=vfpv3 -mfloat-abi=softfp) Enter any CFLAGS for gcc/g++ (NEW)
--- Choose your bootloader for U-Boot
    bootloader (u-boot)  ---&gt;
    u-boot version (u-boot v2009.08)  ---&gt;
--- Choose your board for u-boot
    board (mx6q_sabresd)  ---&gt;
--- Choose your Kernel
    kernel (Linux 3.0.35-imx)  ---&gt;
[ ] Always rebuild the kernel
[ ] Produce cscope index
--- Include kernel headers
[*] Configure the kernel

...

--- Package selection 
    Package list  ---&gt;
--- Target System Configuration
    Options  ---&gt;
--- Target Image Generation
    Options  ---&gt;
---
Load an Alternate Configuration File
Save Configuration to an Alternate File


--- Platform specific package selection

[*] gpu-viv-bin-mx6q

[*] dbus

[*] expat

[*] libjpeg

[*] libpng


$ ./ltib

$ config kernel 

Device Driver ---&gt;
MXC support drivers ---&gt;
        MXC Vivante GPU Support ---&gt;
    &lt;*&gt; MXC vivante GPU support
</code></pre>

<h2>5.6     Build IMX6 GPU SDK</h2>

<pre><code>$ tar -xzvf gpu_sdk_v1.00.tar.gz -C ./gpu_sdk_v1.00
$ cd gpu_sdk_v1.00
</code></pre>

<h3>5.6.1   Build DevIL lib</h3>

<pre><code>$ cd gpu_sdk_v1.00
$ cp Demos/MultiAPI/GIFT/resources/required_libs/DevIL/DevIL-1.7.8.tar.gz  /opt/freescale/pkgs/
$ cp Demos/MultiAPI/GIFT/resources/required_libs/DevIL/DevIL-1.7.8.tar.gz.md5  /opt/freescale/pkgs/
$ mkdir /home/vmuser/ltib_src/ltib/dist/lfs-5.1/devil
$ cp Demos/MultiAPI/GIFT/resources/required_libs/DevIL/DevIL-1.7.8.spec /home/vmuser/ltib_src/ltib/dist/lfs-5.1/devil/
$ 
$ cd /home/vmuser/ltib_src/ltib/
$ dos2unix dist/lfs-5.1/devil/DevIL-1.7.8.spec
$ ./ltib -m prep -p DevIL-1.7.8.spec
$ ./ltib -m scbuild -p DevIL-1.7.8.spec
$ ./ltib -m scdeploy -p DevIL-1.7.8.spec
</code></pre>

<h3>5.6.2   Build assimp-2.0.863-sdk</h3>

<pre><code>$ cd /home/vmuser/project/gpu_sdk/gpu_sdk_v1.00/Demos/MultiAPI/GIFT/resources/required_libs/assimp-2.0.863
$ tar -xzvf assimp-2.0.863-sdk.tar.gz -C ./assimp-2.0.863-sdk
$ cd assimp-2.0.863-sdk
$ cd imx6
$ edit imx6_toolchain as below

# this one is important
SET(CMAKE_SYSTEM_NAME Linux)
#this one not so much
SET(CMAKE_SYSTEM_VERSION 1)

# specify the cross compiler
SET(CMAKE_C_COMPILER   /opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/bin/arm-fsl-linux-gnueabi-gcc)
SET(CMAKE_CXX_COMPILER /opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/bin/arm-fsl-linux-gnueabi-g++)

# where is the target environment 
SET(CMAKE_FIND_ROOT_PATH  /home/vmuser/ltib_src/ltib/rootfs)

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

$ cmake -DCMAKE_TOOLCHAIN_FILE=./imx6_toolchain -DENABLE_BOOST_WORKAROUND=ON ..
$ make


$ ls code/ -alh
total 9.9M
drwxrwxr-x 3 vmuser vmuser 4.0K Apr 20 19:24 .
drwxr-xr-x 5 vmuser vmuser 4.0K Apr 20 18:50 ..
drwxrwxr-x 3 vmuser vmuser 4.0K Apr 20 18:50 CMakeFiles
-rw-rw-r-- 1 vmuser vmuser  12K Apr 20 18:50 cmake_install.cmake
lrwxrwxrwx 1 vmuser vmuser   14 Apr 20 19:24 libassimp.so -&gt; libassimp.so.2
lrwxrwxrwx 1 vmuser vmuser   18 Apr 20 19:24 libassimp.so.2 -&gt; libassimp.so.2.0.0
-rwxrwxr-x 1 vmuser vmuser 9.7M Apr 20 19:24 libassimp.so.2.0.0
-rw-rw-r-- 1 vmuser vmuser 143K Apr 20 18:50 Makefile

$ ls ../include/ -alh
total 440K
drwxr-xr-x  3 vmuser vmuser 4.0K Apr 20 18:34 .
drwxrwxr-x 13 vmuser vmuser 4.0K Apr 20 18:34 ..
-rw-r--r--  1 vmuser vmuser  15K Nov 22  2010 aiAnim.h
-rw-r--r--  1 vmuser vmuser  701 Nov 22  2010 aiAssert.h
-rw-r--r--  1 vmuser vmuser 7.3K Nov 22  2010 aiCamera.h
-rw-r--r--  1 vmuser vmuser 3.5K Nov 22  2010 aiColor4D.h
-rw-r--r--  1 vmuser vmuser 6.9K Nov 22  2010 aiColor4D.inl
-rw-r--r--  1 vmuser vmuser  27K Nov 22  2010 aiConfig.h
-rw-r--r--  1 vmuser vmuser 9.8K Nov  2  2011 aiDefines.h
-rw-r--r--  1 vmuser vmuser 4.5K Nov 22  2010 aiFileIO.h
-rw-r--r--  1 vmuser vmuser 7.8K Nov 22  2010 aiLight.h
-rw-r--r--  1 vmuser vmuser  48K Nov 22  2010 aiMaterial.h
-rw-r--r--  1 vmuser vmuser 6.1K Nov 22  2010 aiMaterial.inl
-rw-r--r--  1 vmuser vmuser 5.7K Nov 22  2010 aiMatrix3x3.h
-rw-r--r--  1 vmuser vmuser 7.7K Nov 22  2010 aiMatrix3x3.inl
-rw-r--r--  1 vmuser vmuser 8.7K Nov 22  2010 aiMatrix4x4.h
-rw-r--r--  1 vmuser vmuser  15K Nov 22  2010 aiMatrix4x4.inl
-rw-r--r--  1 vmuser vmuser  24K Nov 22  2010 aiMesh.h
-rw-r--r--  1 vmuser vmuser  28K Nov 22  2010 aiPostProcess.h
-rw-r--r--  1 vmuser vmuser  11K Nov 22  2010 aiQuaternion.h
-rw-r--r--  1 vmuser vmuser  14K Nov 22  2010 aiScene.h
-rw-r--r--  1 vmuser vmuser 6.4K Nov 22  2010 aiTexture.h
-rw-r--r--  1 vmuser vmuser  15K Nov 22  2010 aiTypes.h
-rw-r--r--  1 vmuser vmuser 5.5K Nov 22  2010 aiVector2D.h
-rw-r--r--  1 vmuser vmuser 4.0K Nov 22  2010 aiVector3D.h
-rw-r--r--  1 vmuser vmuser 8.6K Nov 22  2010 aiVector3D.inl
-rw-r--r--  1 vmuser vmuser 4.1K Nov 22  2010 aiVersion.h
-rw-r--r--  1 vmuser vmuser  19K Nov 22  2010 assimp.h
-rw-r--r--  1 vmuser vmuser  27K Nov 22  2010 assimp.hpp
drwxr-xr-x  2 vmuser vmuser 4.0K Apr 20 18:34 Compiler
-rw-r--r--  1 vmuser vmuser 7.5K Nov 22  2010 DefaultLogger.h
-rw-r--r--  1 vmuser vmuser 4.8K Nov 22  2010 IOStream.h
-rw-r--r--  1 vmuser vmuser 8.0K Nov 22  2010 IOSystem.h
-rw-r--r--  1 vmuser vmuser 8.9K Nov 22  2010 Logger.h
-rw-r--r--  1 vmuser vmuser 3.8K Nov 22  2010 LogStream.h
-rw-r--r--  1 vmuser vmuser 3.3K Nov 22  2010 NullLogger.h
-rw-r--r--  1 vmuser vmuser 3.7K Nov 22  2010 ProgressHandler.h

$ copy *.so to  /home/vmuser/ltib_src/ltib/usr/lib

$ copy *.h to   /home/vmuser/ltib_src/ltib/usr/include/ASSIMP

$ ced /home/vmuser/ltib_src/ltib/usr/lib
$ sudo ln -s libassimp.so.2.0.0 libassimp.so.2
$ sudo ln -s libassimp.so.2 libassimp.so
$ ls libassimp.so* -alh
lrwxrwxrwx 1 root root   14 Apr 20 19:51 libassimp.so -&gt; libassimp.so.2
lrwxrwxrwx 1 root root   18 Apr 20 19:51 libassimp.so.2 -&gt; libassimp.so.2.0.0
-rwxr-xr-x 1 root root 9.7M Apr 20 19:49 libassimp.so.2.0.0
</code></pre>

<h3>5.6.3   Build GIFT</h3>

<pre><code>$ tar -xzvf GIFT_v4.tar.gz -C ./GIFT_v4
$ cd GIFT_v4

$ edit Makefile as below

#----------------- development environment here
#important so we know where the libraries are
LTIB_ROOTFS=/home/vmuser/ltib_src/ltib/rootfs
LTIB_SRC=/home/vmuser/ltib_src/ltib/rpm/BUILD/linux

#set CROSS_COMPILE as below
CROSS_COMPILE = /opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/bin/arm-fsl-linux-gnueabi-

#extra headers
EXTRA_INC =  $(LTIB_SRC)/include

#system headers
FSL_PLATFORM_INC = $(LTIB_ROOTFS)/usr/include

#extra libraries
EXTRA_LIB = 

#system libraries
FSL_PLATFORM_LIB = $(LTIB_ROOTFS)/usr/lib

#random needed vars
ARCH = arm
CD = cd
DEL_FILE = rm -f
MKDIR = mkdir -p
RMDIR = rmdir
CC = $(CROSS_COMPILE)g++
AR = $(CROSS_COMPILE)ar
LD = $(CROSS_COMPILE)g++
CP = cp
MAKE = make

#CFLAGS = -DDEBUG -D_DEBUG -D_GNU_SOURCE -mfloat-abi=softfp -mfpu=neon -fPIC -O3 -fno-strict-aliasing -fno-optimize-sibling-calls -Wall -g

CFLAGS = -DLINUX -DEGL_API_FB -mfloat-abi=softfp -mfpu=vfpv3 -fPIC -fno-strict-aliasing -fno-optimize-sibling-calls -O2 -march=armv7-a -mapcs-frame -fPIC -Wall -W -Wno-unused-parameter

CFLAGS += -I$(FSL_PLATFORM_INC) -I$(EXTRA_INC)

LFLAGS = -Wl,--library-path=$(FSL_PLATFORM_LIB),-rpath-link=$(FSL_PLATFORM_LIB) -ldl

EGL_FLAGS = -lEGL

ES11_FLAGS = -lGLESv1_CM

ES20_FLAGS = -lGLESv2 

VG11_FLAGS = -lOpenVG

ASSIMP_FLAGS = -lassimp

DEVIL_FLAGS = -lIL

#-----------------for each app here

APPNAME         = gift
DESTDIR         = ./bin
SRCDIR          = .

#LFLAGS                  += $(EGL_FLAGS) $(ES20_FLAGS) -lm
LFLAGS          += $(EGL_FLAGS) $(ES20_FLAGS) $(ASSIMP_FLAGS) $(DEVIL_FLAGS) -lm

OBJECTS         = GIFT.o obj3d.o TouchScreen.o SceneManager.o fslutil.o

first: all

all: $(APPNAME)

.PHONY: all

$(APPNAME): $(OBJECTS) 
    -@$(MKDIR) $(DESTDIR)
    $(LD) $(LFLAGS) -o $(DESTDIR)/$(APPNAME) $(OBJECTS)

%.o : %.cpp
    $(CC) $(CFLAGS) -c $&lt; -o $@

clean:
    $(DEL_FILE) $(OBJECTS) $(UTILOBJS)
    $(DEL_FILE) *~ core *.core

distclean: clean
    $(DEL_FILE) $(DESTDIR)/$(APPNAME)
    -@$(RMDIR) $(DESTDIR)


$ edit fslutil.c as below

...
#include &lt;EGL/egl.h&gt;
#include "fslutil.h" //#include &lt;fslutil.h&gt;
#include &lt;IL/il.h&gt;
...

$ make clean
$ make
$ ls bin/ -alh
total 60K
drwxrwxr-x 2 vmuser vmuser 4.0K Apr 20 20:16 .
drwxrwxr-x 4 vmuser vmuser 4.0K Apr 20 20:16 ..
-rwxrwxr-x 1 vmuser vmuser  52K Apr 20 20:16 gift
</code></pre>

<h1>6   Build image for imx6 using buildroot</h1>

<h2>6.1 Get buildroot source code</h2>

<pre><code>$ git clone http://git.buildroot.net/git/buildroot.git buildroot.git
$ cd buildroot.git
</code></pre>

<h2>6.2 Build using freescale_imx6qsabresd_defconfig default config</h2>

<pre><code>$ cd buildroot.git
$ make freescale_imx6qsabresd_defconfig
$ make
</code></pre>

<h2>6.3 Using eglibc</h2>

<pre><code>$ make menuconfig

    Toolchain type (Buildroot toolchain)  ---&gt;
    (buildroot) custom toolchain vendor name

    *** Kernel Header Options ***
    Kernel Headers (Manually specified Linux version)  ---&gt;
    (3.10.17) linux version
    Custom kernel headers series (3.10.x)  ---&gt;

    C library (eglibc)  ---&gt;
    eglibc version (2.18-svnr23787)  ---&gt; 

    ......

$ make
</code></pre>

<h2>6.4 Change device node management to static</h2>

<pre><code>$ cd buildroot.git
$ add system/device_table_imx6.txt as below
    # See package/makedevs/README for details
    #
    # This device table is used to assign proper ownership and permissions
    # on various files. It doesn't create any device file, as it is used
    # in both static device configurations (where /dev/ is static) and in
    # dynamic configurations (where devtmpfs, mdev or udev are used).
    #
    # &lt;name&gt;                        &lt;type&gt;  &lt;mode&gt;  &lt;uid&gt;   &lt;gid&gt;   &lt;major&gt; &lt;minor&gt; &lt;start&gt; &lt;inc&gt;   &lt;count&gt;
    /dev                            d       755     0       0       -       -       -       -       -
    /tmp                            d       1777    0       0       -       -       -       -       -
    /etc                            d       755     0       0       -       -       -       -       -
    /root                           d       700     0       0       -       -       -       -       -
    #/var/www                       d       755     33      33      -       -       -       -       -
    /etc/random-seed                f       600     0       0       -       -       -       -       -
    /etc/shadow                     f       600     0       0       -       -       -       -       -
    /etc/passwd                     f       644     0       0       -       -       -       -       -
    #/etc/network/if-up.d           d       755     0       0       -       -       -       -       -
    #/etc/network/if-pre-up.d       d       755     0       0       -       -       -       -       -
    #/etc/network/if-post-up.d      d       755     0       0       -       -       -       -       -
    #/etc/network/if-down.d         d       755     0       0       -       -       -       -       -
    #/etc/network/if-pre-down.d     d       755     0       0       -       -       -       -       -
    #/etc/network/if-post-down.d        d       755     0       0       -       -       -       -       -

    # uncomment this to allow starting x as non-root
    #/usr/X11R6/bin/Xfbdev          f       4755    0       0       -       -       -       -       -

$ add system/device_table_dev_imx6.txt as below
    # See package/makedevs/README for details
    #
    # This device table is used only to create device files when a static
    # device configuration is used (entries in /dev are static).
    #
    # &lt;name&gt;            &lt;type&gt;  &lt;mode&gt;  &lt;uid&gt;   &lt;gid&gt;   &lt;major&gt; &lt;minor&gt; &lt;start&gt; &lt;inc&gt;   &lt;count&gt;

    # Normal system devices
    /dev/null           c       666     0       0       1       3       0       0       -
    /dev/console        c       666     0       0       5       1       -       -       -
    /dev/ttymxc         c       666     0       0       207     16      0       1       4

$ make menuconfig

    (buildroot) System hostname
    (Welcome to Buildroot) System banner
        Passwords encoding (md5)  ---&gt;
        Init system (BusyBox)  ---&gt;
        /dev management (Static using device table)  ---&gt;
    (system/device_table_imx6.txt) Path to the permission tables
    (system/device_table_dev_imx6.txt) Path to the device tables
        Root FS skeleton (default target skeleton)  ---&gt;

    ......

$ make  
</code></pre>

<h2>6.5 Remove login prompt</h2>

<pre><code>//todo it seems not work correctly
$ cd buildroot.git
$ make menuconfig

    ......

    [ ] Run a getty (login prompt) after boot

    ......

$ make

//try this method
$ cd buildroot.git
$ make busybox-menuconfig

    ......

    [*] getty
    [ ] login                                                                                                                      
    [ ] Run logged in session in a child process

    ......

$ make
</code></pre>

<h2>6.6 Add gpu driver</h2>

<pre><code>$ cd buildroot.git
$ make menuconfig

    Target packages  ---&gt;

        Hardware handling  ---&gt;

            [*] Freescale i.MX libraries  ---&gt;

    --- Freescale i.MX libraries                                                                                            
    i.MX platform (imx6q)  ---&gt;                                                                                     
    *** imx-lib needs an imx-specific Linux kernel to be built ***                                                      
    *** imx-vpu needs an imx-specific Linux kernel to be built ***
    [ ]   firmware-imx (NEW)
    [*]   gpu-viv-bin-mx6q                                                                                                
    [*]     install examples 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build u-boot for riot board]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/15/build-u-boot-for-riot-board/"/>
    <updated>2015-04-15T14:52:23+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/15/build-u-boot-for-riot-board</id>
    <content type="html"><![CDATA[<h2>1. Get u-boot source</h2>

<pre><code>git clone https://github.com/Freescale/u-boot-fslc.git
</code></pre>

<h2>2. make &amp; build</h2>

<pre><code>$cd u-boot-fslc
$export ARCH=arm 
$export CROSS_COMPILE=arm-linux-gnueabihf-
$make riotboard_defconfig 
$make
$ls ls -l u-boot.*
    -rw-rw-r-- 1 jordon jordon 331492 Dec  7 05:44 u-boot.bin
    -rw-rw-r-- 1 jordon jordon 334848 Dec  7 05:44 u-boot.imx
    -rw-rw-r-- 1 jordon jordon   1286 Dec  7 05:44 u-boot.lds
    -rw-rw-r-- 1 jordon jordon 317244 Dec  7 05:44 u-boot.map
    -rw-rw-r-- 1 jordon jordon 994618 Dec  7 05:44 u-boot.srec
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build openwrt firmware]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/15/build-openwrt-firmware/"/>
    <updated>2015-04-15T14:51:54+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/15/build-openwrt-firmware</id>
    <content type="html"><![CDATA[<h1>1. Hardware</h1>

<p>wrtnode board <a href="http://cn.wrtnode.com/">http://cn.wrtnode.com/</a></p>

<h1>2. Backup firmware</h1>

<h2>1) ssh to wrtnode board</h2>

<pre><code>root@OpenWrt:/tmp# cat /proc/mtd
dev:    size   erasesize  name
mtd0: 00030000 00010000 "u-boot"
mtd1: 00010000 00010000 "u-boot-env"
mtd2: 00010000 00010000 "factory"
mtd3: 00fb0000 00010000 "firmware"
mtd4: 00e96447 00010000 "rootfs"
mtd5: 00780000 00010000 "rootfs_data"
</code></pre>

<h2>2) back up u-boot and factory partition to /tmp</h2>

<pre><code>root@OpenWrt:/tmp# dd if=/dev/mtd0 of=/tmp/wrtnode_u-boot.backup
root@OpenWrt:/tmp# dd if=/dev/mtd1 of=/tmp/wrtnode_u-boot-env.backup
root@OpenWrt:/tmp# dd if=/dev/mtd2 of=/tmp/wrtnode_factory.backup
root@OpenWrt:/tmp# cat /proc/mtd &gt; wrtnode_mtd_info.txt
</code></pre>

<h2>3) scp backup firmware to local pc</h2>

<pre><code>$ scp root@192.168.8.1:/tmp/wrtnode_u-boot.backup .
$ scp root@192.168.8.1:/tmp/wrtnode_u-boot-env.backup .
$ scp root@192.168.8.1:/tmp/wrtnode_factory.backup .
$ scp root@192.168.8.1:/tmp/wrtnode_mtd_info.txt .
</code></pre>

<h1>3. Build u-boot</h1>

<h1>4. Build kernel</h1>

<h1>5. Build openwrt image</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Install and Usage on Windows 7]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/14/install-octopress-on-windows-7/"/>
    <updated>2015-04-14T09:15:12+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/14/install-octopress-on-windows-7</id>
    <content type="html"><![CDATA[<h2>1.   Install git</h2>

<pre><code>    Version : Git-1.9.2-preview20140411.exe
</code></pre>

<h2>2.   Install RubyInstaller</h2>

<pre><code>    Version: rubyinstaller-2.1.5-x64
</code></pre>

<h2>3.   Add Ruby install path(Example: D:\Ruby\Ruby21-x64\bin) to user&rsquo;s PATH Environment Variable</h2>

<h2>4.   Install RubyInstaller DevKit</h2>

<pre><code>    Version: DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe
</code></pre>

<h2>5.   RubyInstaller DevKit configure</h2>

<h3>5.1 change to DevKit install dir</h3>

<pre><code>    D:\&gt; cd d:\Ruby\DevKit
</code></pre>

<h3>5.2 ruby dk.rb init</h3>

<pre><code>    d:\Ruby\DevKit&gt; ruby dk.rb init

    Initialization complete! Please review and modify the auto-generated
    'config.yml' file to ensure it contains the root directories to all
    of the installed Rubies you want enhanced by the DevKit.

    Add Ruby install path to config.yml as below

    #####################################################################
    #
    # Example:
    #
    # ---
    # - C:/ruby19trunk
    # - C:/ruby192dev
    #

    - D:\Ruby\Ruby21-x64        

    ######################################################################
</code></pre>

<h3>5.3 ruby dk.rb install</h3>

<pre><code>    d:\Ruby\DevKit&gt; ruby dk.rb install
</code></pre>

<h2>6.   Change ruby sources to <a href="http://ruby.taobao.org/">http://ruby.taobao.org/</a></h2>

<pre><code>    D:\&gt; cd d:\Ruby\DevKit

    d:\Ruby\DevKit&gt; gem sources --remove http://rubygems.org/

    d:\Ruby\DevKit&gt; gem sources --remove https://rubygems.org/

    d:\Ruby\DevKit&gt; gem sources -a http://ruby.taobao.org/

    d:\Ruby\DevKit&gt; gem sources -l

    *** CURRENT SOURCES ***

    http://ruby.taobao.org/
</code></pre>

<h2>7.   Install rdoc and bundler</h2>

<pre><code>    D:\&gt; cd d:\Ruby\DevKit

    d:\Ruby\DevKit&gt;gem install rdoc bundler

    Depending on your version of ruby, you may need to install ruby rdoc/ri data:

    &lt;= 1.8.6 : unsupported
     = 1.8.7 : gem install rdoc-data; rdoc-data --install
     = 1.9.1 : gem install rdoc-data; rdoc-data --install
    &gt;= 1.9.2 : nothing to do! Yay!
    Successfully installed rdoc-4.2.0
    Parsing documentation for rdoc-4.2.0
    Done installing documentation for rdoc after 5 seconds
    Successfully installed bundler-1.9.3
    Parsing documentation for bundler-1.9.3
    Done installing documentation for bundler after 2 seconds
    2 gems installed
</code></pre>

<h2>8    Install Octopress blog if you first using it on github</h2>

<h3>8.1 Create repo on your github</h3>

<pre><code>    Create a repo named username.github.com.git on your github
</code></pre>

<h3>8.2 Clone octopress.git</h3>

<pre><code>    $ git clone git://github.com/imathis/octopress.git username.github.com
</code></pre>

<h3>8.3 Modify octopress GEM Source</h3>

<pre><code>    $cd username.github.com

    $edit Gemfile  and change source "http://rubygems.org/"  to source "http://ruby.taobao.org/" 

    source "http://ruby.taobao.org/"
</code></pre>

<h3>8.4 Install GEM component</h3>

<pre><code>    $ bundle install

    DL is deprecated, please use Fiddle
    Fetching source index from http://ruby.taobao.org/
    Resolving dependencies...............
    Installing rake 10.4.2
    Using RedCloth 4.2.9
    Installing blankslate 2.1.2.4
    Installing hitimes 1.2.2
    Installing timers 4.0.1
    Installing celluloid 0.16.0
    Using chunky_png 1.3.4
    Using fast-stemmer 1.0.2
    Installing classifier-reborn 2.0.3
    Installing coffee-script-source 1.9.1.1
    Installing execjs 2.5.2
    Installing coffee-script 2.4.1
    Installing colorator 0.1
    Installing multi_json 1.11.0
    Installing sass 3.4.13
    Installing compass-core 1.0.3
    Installing compass-import-once 1.0.5
    Using rb-fsevent 0.9.4
    Installing ffi 1.9.8
    Installing rb-inotify 0.9.5
    Installing compass 1.0.3
    Using tilt 2.0.1
    Installing haml 4.0.6
    Installing jekyll-coffeescript 1.0.1
    Installing jekyll-gist 1.2.1
    Installing jekyll-paginate 1.1.0
    Installing jekyll-sass-converter 1.3.0
    Installing listen 2.10.0
    Installing jekyll-watch 1.2.1
    Installing kramdown 1.6.0
    Installing liquid 2.6.2
    Installing mercenary 0.3.5
    Using posix-spawn 0.3.11
    Installing yajl-ruby 1.2.1
    Installing pygments.rb 0.6.3
    Installing redcarpet 3.2.3
    Installing safe_yaml 1.0.4
    Installing parslet 1.5.0
    Installing toml 0.1.2
    Installing jekyll 2.5.3
    Installing jekyll-sitemap 0.8.1
    Installing octopress-hooks 2.6.0
    Installing octopress-date-format 2.0.2
    Using rack 1.6.0
    Using rack-protection 1.5.3
    Installing rdiscount 2.1.8
    Using rubypants 0.2.0
    Using sass-globbing 1.0.0
    Using sinatra 1.4.6
    Using stringex 1.4.0
    Using bundler 1.9.3
    Bundle complete! 14 Gemfile dependencies, 51 gems now installed.
    Use `bundle show [gemname]` to see where a bundled gem is installed.
    Post-install message from compass:
        Compass is charityware. If you love it, please donate on our behalf at http://umdf.org/compass Thanks!
    Post-install message from haml:

    HEADS UP! Haml 4.0 has many improvements, but also has changes that may break
    your application:

    * Support for Ruby 1.8.6 dropped
    * Support for Rails 2 dropped
    * Sass filter now always outputs &lt;style&gt; tags
    * Data attributes are now hyphenated, not underscored
    * html2haml utility moved to the html2haml gem
    * Textile and Maruku filters moved to the haml-contrib gem

    For more info see:

    http://rubydoc.info/github/haml/haml/file/CHANGELOG.md
</code></pre>

<h3>8.5 Install Octopress template file</h3>

<pre><code>    $ rake install

    rake aborted!
    You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6. Prepending `bundle exec` to your command may solve this.
    e:/study/username.github.com/Rakefile:2:in `&lt;top (required)&gt;'
    (See full trace by running task with --trace)


    #add "aliasalias rake='bundle exec rake'" to git bash bash_profile if display error as above

    $ echo "alias rake='bundle exec rake'" &gt;&gt; ~/.bash_profile

    $ . ~/.bash_profile
    $ aliasalias rake='bundle exec rake'
    $ rake install
</code></pre>

<h3>8.6 setup octopress and github</h3>

<pre><code>    $ cd username.github.com.git
    $ rake setup_github_pages       #you need input username and password of you github account and blog url(https://github.com/username/username.github.com.git)
</code></pre>

<h2>9    Clone your Octopress if you had used it on github</h2>

<h3>9.1 Clone your Octopress repo</h3>

<pre><code>    $ git clone -b source https://github.com/username/username.github.com.git username.github.com.git   # replace username using yours

    Cloning into 'username.github.com'...
    remote: Counting objects: 5279, done.
    remote: Total 5279 (delta 0), reused 0 (delta 0), pack-reused 5279R
    Receiving objects: 100% (5279/5279), 1.37 MiB | 129.00 KiB/s, done.
    Resolving deltas: 100% (2537/2537), done.
    Checking connectivity... done.

    $ git clone -b master https://github.com/username/username.github.com.git _deploy  # replace username using yours
</code></pre>

<h3>9.2 Install Octopress GEM component</h3>

<pre><code>    $ cd username.github.com.git

    $ bundle install

    DL is deprecated, please use Fiddle
    Fetching source index from http://ruby.taobao.org/
    Resolving dependencies...
    Installing rake 0.9.2.2
    Installing RedCloth 4.2.9
    Installing chunky_png 1.2.5
    Installing fast-stemmer 1.0.1
    Installing classifier 1.3.3
    Installing fssm 0.2.9
    Installing sass 3.2.9
    Installing compass 0.12.2
    Installing directory_watcher 1.4.1
    Installing haml 3.1.7
    Installing kramdown 0.13.8
    Installing liquid 2.3.0
    Installing syntax 1.0.0
    Installing maruku 0.6.1
    Installing posix-spawn 0.3.6
    Installing yajl-ruby 1.1.0
    Installing pygments.rb 0.3.4
    Installing jekyll 0.12.0
    Installing rack 1.5.2
    Installing rack-protection 1.5.0
    Installing rb-fsevent 0.9.1
    Installing rdiscount 2.0.7.3
    Installing rubypants 0.2.0
    Installing sass-globbing 1.0.0
    Installing tilt 1.3.7
    Installing sinatra 1.4.2
    Installing stringex 1.4.0
    Using bundler 1.9.3
    Bundle complete! 15 Gemfile dependencies, 28 gems now installed.
    Use `bundle show [gemname]` to see where a bundled gem is installed.
</code></pre>

<h2>10   Add a remote name(default is origin) for the repository git@github.com:username/username.github.com.git</h2>

<pre><code>    $ cd username.github.com.git
    $ git remote

    origin

    $ git remote add origin git@github.com:username/username.github.com.git #default name is origin, you can change it       
</code></pre>

<h2>11.  Management blog</h2>

<pre><code>    $ cd username.github.com.git
</code></pre>

<h3>11.1 Add blog</h3>

<pre><code>    $ rake new_post["blog_name"]
</code></pre>

<h3>11.2 Generate static file</h3>

<pre><code>    $ rake generate
</code></pre>

<h3>11.3 Preview blog</h3>

<pre><code>    $ rake preview

    #now you can preview blog using local address on any browser: http://localhost:4000
</code></pre>

<h3>11.4 Deploy blog to github</h3>

<pre><code>    $rake deploy

    #now you can access you blog using github address on any browser: http://username.github.com
</code></pre>

<h2>12. Management blog source code</h2>

<h3>12.1 Add file to local repo</h3>

<pre><code>    $ git add .
</code></pre>

<h3>12.2 Commit file to repo</h3>

<pre><code>    $ git commit -m "commit file comment"
</code></pre>

<h3>12.3 Push local repo file to remote</h3>

<pre><code>    $ git push origin source #origin is local repo name, source is branch name
</code></pre>

<h3>12.4 Pull last remote repo file to local</h3>

<pre><code>    $ git pull orign source
</code></pre>

<h3>12.5 Add a image to your blog</h3>

<pre><code>    1) add image file to source/images folder
    2) add below code to you blog

    ![a brick](../images/a_brick.png "A brick")
</code></pre>

<h3>12.6 Add attach file to your blog</h3>

<pre><code>    1) add attach file to source/images folder
    2) add a hyperlink and link address point to your file(such as ../images/test.txt)
</code></pre>

<p>=<a href="../images/test.txt">Attached file here(test.txt)</a></p>

<h2>13  Enable comment</h2>

<h3>13.1 Register an account on www.disqus.com</h3>

<h3>13.2 Register &ldquo;unique Disqus URL&rdquo; for github blog</h3>

<h3>13.3 Edit _config.yml as below</h3>

<pre><code># Disqus Comments
disqus_short_name: site_short_name_register_on_disqus
disqus_show_comment_count: true
</code></pre>

<h3>13.4 Enable comment on your blog as below</h3>

<pre><code>---
layout: post
title: "title name"
date: 2015-04-15 14:51:54 +0800
comments: true
categories: category1, category2 
---
</code></pre>

<h2>14  Pushing changes from two different machines</h2>

<p>If you want to blog from more than one computer, you need to make sure that you push everything before switching computers. From the first machine do the following whenever you’ve made changes:</p>

<pre><code>$ rake generate
$ git add .
$ git commit -am "Some comment here." 
$ git push origin source  # update the remote source branch 
$ rake deploy             # update the remote master branch
</code></pre>

<p>Then on the other machine, you need to pull those changes.</p>

<pre><code>$ cd octopress
$ git pull origin source  # update the local source branch
$ cd ./_deploy
$ git pull origin master  # update the local master branch
</code></pre>
]]></content>
  </entry>
  
</feed>
