<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: imx6 | Jordon Wu's Blog]]></title>
  <link href="http://jordonwu.github.io/blog/categories/imx6/atom.xml" rel="self"/>
  <link href="http://jordonwu.github.io/"/>
  <updated>2015-10-09T15:24:01+08:00</updated>
  <id>http://jordonwu.github.io/</id>
  <author>
    <name><![CDATA[Jordon Wu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[imx6 summary upgrade ltib L3.0.35_4.1.0 to L3.0.101_4.1.1]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/28/imx6-summary-upgrade-ltib-l3-dot-0-35-4-dot-1-0-to-l3-dot-0-101-4-dot-1-1/"/>
    <updated>2015-05-28T10:50:25+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/28/imx6-summary-upgrade-ltib-l3-dot-0-35-4-dot-1-0-to-l3-dot-0-101-4-dot-1-1</id>
    <content type="html"><![CDATA[<h1>1. Setup and build ltib using bsp L3.0.35_4.1.0_130816</h1>

<h1>2. Download L3.0.101_4.1.1 package</h1>

<pre><code>Version: 
    L3.0.101_4.1.1_141016_source.gz
    IMX_MMCODEC_3.0.101_4.1.1_Bundle.gz
</code></pre>

<h1>3. Upgrade to L3.0.101_4.1.1</h1>

<h2>3.1 Copy the following packages to host /opt/freescale/pkgs</h2>

<pre><code>firmware-imx-3.0.101-4.1.1.tar.gz
imx-vpu-lib-3.0.101-4.1.1.tar.gz
libfslcodec-3.0.11.tar.gz
libfslparser-3.0.11.tar.gz
libfslvpuwrap-1.0.46.tar.gz
gst-fsl-plugins-3.0.11.tar.gz
gst-fsl-plugins-3.0.11-configure.patch
glib2-2.12.1-atomic.patch
gpu-viv-bin-mx6q-3.0.101-4.1.1.tar.gz
gpu-viv-bin-mx6s-3.0.101-4.1.1.tar.gz
gpu-viv-wl-bin-mx6q-3.0.101-4.1.1.tar.gz
gpu-viv-wl-bin-mx6s-3.0.101-4.1.1.tar.gz
linux-3.0.101.tar.bz2 
linux-3.0.101-imx_4.1.1.bz2
u-boot-v2009.08-imx_3.0.101_4.1.1.tar.bz2
</code></pre>

<h2>3.2 Patch ltib_config_platform_imx.patch</h2>

<pre><code>$ cp ltib_config_platform_imx.patch Ltib_installed/config/platform/imx
$ cd Ltib_installed/config/platform/imx
$ patch -p1 –i ltib_config_platform_imx.patch
</code></pre>

<h2>3.3 Patch ltib_dist_lfs-5.1.patch</h2>

<pre><code>$ cp ltib_dist_lfs-5.1.patch Ltib_installed/dist
$ cd Ltib_installed/dist
$ patch -p1 –i ltib_dist_lfs-5.1.patch
</code></pre>

<h1>4. Config and build ltib</h1>

<pre><code>$ cd Ltib_installed/
$ ./ltib –config
$ ./ltib

$ ./ltib -m prep -p u-boot  # fetch u-boot sourc code
$ ./ltib -m prep -p kernel  # fetch kernel souce code
</code></pre>

<p>Done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Imx6 Summary Build Image for Imx6 Using Yocto]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/26/imx6-summary-build-image-for-imx6-using-yocto/"/>
    <updated>2015-05-26T17:07:56+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/26/imx6-summary-build-image-for-imx6-using-yocto</id>
    <content type="html"><![CDATA[<h1>1. Install repo</h1>

<pre><code>$ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo

or

$ install a local repo (repo-local)

$ export PATH=$PATH:/home/vmuser/bin

$ git config --global user.email "user name@email.com"

$ git config --global user.name "User Name" 
</code></pre>

<h1>2. Download freescale community bsp source code</h1>

<pre><code>$ mkdir fsl-community-bsp
$ cd fsl-community-bsp
$ repo init -u https://github.com/Freescale/fsl-community-bsp-platform -b fido
$ repo sync
</code></pre>

<h1>3. Change branch and sync</h1>

<pre><code>$ cd fsl-community-bsp
$ repo init -b master   //master or other branch
$ repo sync
</code></pre>

<h1>4. First build</h1>

<h2>4.1 Sync source code and setup environment</h2>

<pre><code>$ cd fsl-community-bsp
$ repo sync
$ source setup-environment build
$ ls
conf
</code></pre>

<h2>4.2 Choose your board</h2>

<pre><code>$ cd fsl-community-bsp

$ cd build

$ vim conf/local.conf #you can change MACHINE

MACHINE ??= 'imx6qsabresd'
DISTRO ?= 'poky'
PACKAGE_CLASSES ?= "package_rpm"
EXTRA_IMAGE_FEATURES = "debug-tweaks"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"
BB_DISKMON_DIRS = "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K"
CONF_VERSION = "1"

BB_NUMBER_THREADS = '1'
PARALLEL_MAKE = '-j 1'

DL_DIR ?= "${BSPDIR}/downloads/"
ACCEPT_FSL_EULA = "1"


//list all freescale boards conf
$ ls ../sources/meta-fsl-arm/conf/machine/*.conf -l
    -rw-rw-r-- 1 vmuser vmuser  539 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx23evk.conf
    -rw-rw-r-- 1 vmuser vmuser 2440 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx28evk.conf
    -rw-rw-r-- 1 vmuser vmuser  667 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx31pdk.conf
    -rw-rw-r-- 1 vmuser vmuser  603 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx35pdk.conf
    -rw-rw-r-- 1 vmuser vmuser  333 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx51evk.conf
    -rw-rw-r-- 1 vmuser vmuser  469 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx53ard.conf
    -rw-rw-r-- 1 vmuser vmuser  460 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx53qsb.conf
    -rw-rw-r-- 1 vmuser vmuser  638 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6dlsabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  393 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6dlsabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  533 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6qsabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  432 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6qsabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  432 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6slevk.conf
    -rw-rw-r-- 1 vmuser vmuser  615 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6solosabreauto.conf
    -rw-rw-r-- 1 vmuser vmuser  468 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/imx6solosabresd.conf
    -rw-rw-r-- 1 vmuser vmuser  542 Apr 16 23:58 ../sources/meta-fsl-arm/conf/machine/twr-vf65gs10.conf

//list all non-freescale boards conf
$ ls ../sources/meta-fsl-arm-extra/conf/machine/*.conf -l
    -rw-rw-r-- 1 vmuser vmuser  155 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10036.conf
    -rw-rw-r-- 1 vmuser vmuser  199 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10037.conf
    -rw-rw-r-- 1 vmuser vmuser  234 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10049.conf
    -rw-rw-r-- 1 vmuser vmuser  234 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10055.conf
    -rw-rw-r-- 1 vmuser vmuser  229 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10056.conf
    -rw-rw-r-- 1 vmuser vmuser  255 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10057.conf
    -rw-rw-r-- 1 vmuser vmuser  255 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cfa10058.conf
    -rw-rw-r-- 1 vmuser vmuser  466 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/cgtqmx6.conf
    -rw-rw-r-- 1 vmuser vmuser  246 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-maxi.conf
    -rw-rw-r-- 1 vmuser vmuser  190 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-micro.conf
    -rw-rw-r-- 1 vmuser vmuser  188 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx233-olinuxino-mini.conf
    -rw-rw-r-- 1 vmuser vmuser  508 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/imx6qsabrelite.conf
    -rw-rw-r-- 1 vmuser vmuser  726 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/m28evk.conf
    -rw-rw-r-- 1 vmuser vmuser  767 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/m53evk.conf
    -rw-rw-r-- 1 vmuser vmuser 1641 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/nitrogen6x.conf
    -rw-rw-r-- 1 vmuser vmuser  786 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/nitrogen6x-lite.conf
    -rw-rw-r-- 1 vmuser vmuser  538 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-dual.conf
    -rw-rw-r-- 1 vmuser vmuser  529 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-quad.conf
    -rw-rw-r-- 1 vmuser vmuser  465 Apr 16 23:58 ../sources/meta-fsl-arm-extra/conf/machine/wandboard-solo.conf

//list available images
$ find ../sources -name *image*
    ../sources/meta-fsl-arm/scripts/lib/image
    ../sources/meta-fsl-arm/classes/mfgtool-initramfs-image.bbclass
    ../sources/meta-fsl-arm/classes/image_types_fsl.bbclass
    ../sources/meta-fsl-arm/recipes-fsl/images
    ../sources/meta-fsl-arm/recipes-fsl/images/fsl-image-mfgtool-initramfs.bb
    ../sources/poky/scripts/lib/image
    ../sources/poky/scripts/lib/image/canned-wks/sdimage-bootpart.wks
    ../sources/poky/scripts/lib/wic/plugins/imager
    ../sources/poky/scripts/lib/wic/plugins/source/fsimage.py
    ../sources/poky/scripts/lib/wic/imager
    ../sources/poky/scripts/lib/wic/imager/baseimager.py
    ../sources/poky/scripts/test-remote-image
    ../sources/poky/scripts/contrib/ddimage
    ../sources/poky/scripts/runqemu-addptable2image
    ../sources/poky/documentation/ref-manual/ref-images.xml
    ../sources/poky/documentation/ref-manual/figures/image-generation.png
    ../sources/poky/documentation/ref-manual/figures/images.png
    ../sources/poky/documentation/mega-manual/figures/image-generation.png
    ../sources/poky/documentation/mega-manual/figures/images.png
    ../sources/poky/documentation/mega-manual/figures/using-a-pre-built-image.png
    ../sources/poky/documentation/mega-manual/figures/building-an-image.png
    ../sources/poky/documentation/yocto-project-qs/figures/using-a-pre-built-image.png
    ../sources/poky/documentation/yocto-project-qs/figures/building-an-image.png
    ../sources/poky/bitbake/bin/image-writer
    ../sources/poky/bitbake/lib/toaster/orm/migrations/0005_auto__add_target_image_file__add_target_file__add_field_variablehistor.py
    ../sources/poky/bitbake/lib/toaster/orm/migrations/0006_auto__add_field_target_image_size__add_field_target_license_manifest_p.py
    ../sources/poky/bitbake/lib/toaster/toastergui/static/css/images
    ../sources/poky/bitbake/lib/bb/ui/icons/images
    ../sources/poky/bitbake/lib/bb/ui/icons/images/images_hover.png
    ../sources/poky/bitbake/lib/bb/ui/icons/images/images_display.png
    ../sources/poky/bitbake/lib/bb/ui/crumbs/imagedetailspage.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/imageconfigurationpage.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/saveimagedialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/retrieveimagedialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/imageselectiondialog.py
    ../sources/poky/bitbake/lib/bb/ui/crumbs/hig/deployimagedialog.py
    ../sources/poky/meta-selftest/recipes-test/images
    ../sources/poky/meta-selftest/recipes-test/images/oe-selftest-image.bb
    ../sources/poky/meta/recipes-extended/images
    ../sources/poky/meta/recipes-extended/images/core-image-lsb-sdk.bb
    ../sources/poky/meta/recipes-extended/images/core-image-full-cmdline.bb
    ../sources/poky/meta/recipes-extended/images/core-image-kernel-dev.bb
    ../sources/poky/meta/recipes-extended/images/core-image-lsb.bb
    ../sources/poky/meta/recipes-extended/images/core-image-testmaster.bb
    ../sources/poky/meta/recipes-extended/images/core-image-lsb-dev.bb
    ../sources/poky/meta/recipes-extended/images/core-image-testmaster-initramfs.bb
    ../sources/poky/meta/recipes-multimedia/gstreamer/gst-ffmpeg-0.10.13/0001-avcodec-msrle-use-av_image_get_linesize-to-calculate.patch
    ../sources/poky/meta/recipes-qt/images
    ../sources/poky/meta/recipes-qt/images/qt4e-demo-image.bb
    ../sources/poky/meta/recipes-qt/qt4/qt4-4.8.6/0028-Don-t-crash-on-broken-GIF-images.patch
    ../sources/poky/meta/recipes-graphics/xorg-lib/xcb-util-image_0.4.0.bb
    ../sources/poky/meta/recipes-graphics/images
    ../sources/poky/meta/recipes-graphics/images/core-image-x11.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-directfb.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-weston.bb
    ../sources/poky/meta/recipes-graphics/images/core-image-clutter.bb
    ../sources/poky/meta/recipes-devtools/mkelfimage
    ../sources/poky/meta/recipes-devtools/mkelfimage/mkelfimage
    ../sources/poky/meta/recipes-devtools/mkelfimage/mkelfimage_git.bb
    ../sources/poky/meta/recipes-core/images
    ../sources/poky/meta/recipes-core/images/core-image-minimal.bb
    ../sources/poky/meta/recipes-core/images/core-image-base.bb
    ../sources/poky/meta/recipes-core/images/build-appliance-image_12.0.1.bb
    ../sources/poky/meta/recipes-core/images/build-appliance-image
    ../sources/poky/meta/recipes-core/images/core-image-minimal-mtdutils.bb
    ../sources/poky/meta/recipes-core/images/core-image-minimal-dev.bb
    ../sources/poky/meta/recipes-core/images/core-image-minimal-initramfs.bb
    ../sources/poky/meta/classes/image-buildinfo.bbclass
    ../sources/poky/meta/classes/testimage-auto.bbclass
    ../sources/poky/meta/classes/testimage.bbclass
    ../sources/poky/meta/classes/image_types_uboot.bbclass
    ../sources/poky/meta/classes/image-vmdk.bbclass
    ../sources/poky/meta/classes/core-image.bbclass
    ../sources/poky/meta/classes/image.bbclass
    ../sources/poky/meta/classes/image_types.bbclass
    ../sources/poky/meta/classes/image-prelink.bbclass
    ../sources/poky/meta/classes/image-swab.bbclass
    ../sources/poky/meta/classes/image-live.bbclass
    ../sources/poky/meta/classes/image-mklibs.bbclass
    ../sources/poky/meta/lib/oe/image.py
    ../sources/poky/meta/lib/oeqa/controllers/masterimage.py
    ../sources/poky/meta/recipes-bsp/u-boot/u-boot-mkimage_2015.01.bb
    ../sources/poky/meta/recipes-rt/images
    ../sources/poky/meta/recipes-rt/images/core-image-rt.bb
    ../sources/poky/meta/recipes-rt/images/core-image-rt-sdk.bb
    ../sources/poky/meta/recipes-connectivity/connman/connman-gnome/images
    ../sources/poky/meta/recipes-sato/images
    ../sources/poky/meta/recipes-sato/images/core-image-sato.bb
    ../sources/poky/meta/recipes-sato/images/core-image-sato-dev.bb
    ../sources/poky/meta/recipes-sato/images/core-image-sato-sdk.bb
    ../sources/poky/meta-skeleton/recipes-multilib/images
    ../sources/poky/meta-skeleton/recipes-multilib/images/core-image-multilib-example.bb
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image/libsdl-image
    ../sources/meta-openembedded/meta-oe/recipes-multimedia/libsdl-image/libsdl-image_1.2.12.bb
    ../sources/meta-openembedded/meta-oe/recipes-graphics/lxdm/lxdm/0001-lxdm.conf.in-blacklist-root-for-release-images.patch
    ../sources/meta-openembedded/meta-oe/recipes-graphics/nonworking/slim/slim/0002-Fix-image-handling-integer-overflows.patch
    ../sources/meta-openembedded/meta-oe/recipes-support/imagemagick
    ../sources/meta-openembedded/meta-oe/recipes-support/imagemagick/imagemagick_6.8.9.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-kexecboot-klibc-image.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-debug-image.bb
    ../sources/meta-openembedded/meta-initramfs/recipes-bsp/images/initramfs-kexecboot-image.bb
    ../sources/Documentation/release-notes/source/images.inc
    ../sources/Documentation/user-guide/source/images.rst
    ../sources/Documentation/user-guide/source/image-list.inc
    ../sources/meta-fsl-demos/recipes-qt/images
    ../sources/meta-fsl-demos/recipes-qt/images/qt-in-use-image.bb
    ../sources/meta-fsl-demos/recipes-qt/images/qte-in-use-image.bb
    ../sources/meta-fsl-demos/recipes-fsl/images
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-machine-test.bb
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-multimedia-full.bb
    ../sources/meta-fsl-demos/recipes-fsl/images/fsl-image-multimedia.bb
</code></pre>

<h2>4.3 Start to build</h2>

<pre><code>//list core-image-base all task 
$ bitbake -c listtasks core-image-base

// download all source only 
$ bitbake -c fetchall core-image-base

//build
$ bitbake core-image-base
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[imx6 summary linux host environment setup]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/26/imx6-summary-linux-host-environment-setup/"/>
    <updated>2015-05-26T08:52:12+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/26/imx6-summary-linux-host-environment-setup</id>
    <content type="html"><![CDATA[<h1>1.  Install Host OS</h1>

<h2>1.1 Install VMware</h2>

<pre><code>Version: VMware10.03
</code></pre>

<h2>1.2 Install ubuntu server on VMware</h2>

<pre><code>Version: ubuntu-14.04.2-server-amd64
</code></pre>

<h2>1.3 Update Sources</h2>

<pre><code>$sudo apt-get update
</code></pre>

<h1>2.  Install Host OS Service</h1>

<h2>2.1 Install ssh service</h2>

<pre><code>$ sudo apt-get install openssh-client openssh-server
</code></pre>

<h2>2.2 Install samba service</h2>

<pre><code>$ sudo apt-get install samba

$ sudo vim /etc/samba/smb.conf and add below section to the file end

[home]
comment = samba share path /home
browseable = yes
writeable = yes
path = /home
valid users = smb

$ sudo useradd smb          //add user smb

$ sudo smbpasswd -a smb     //set password for smb user

$ /etc/init.d/smbd restart  //restart smbd service
</code></pre>

<h1>3.  Install Host OS build essential</h1>

<pre><code>$ sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib \
    build-essential chrpath socat libsdl1.2-dev xterm curl tcl rpm bison m4 \
    zlib1g zlib1g-dev libncurses5-dev liblzo2-dev uuid-dev lzop texi2html texinfo \
    texlive gettext libgtk2.0-dev rpm bison m4 libfreetype6-dev libdbus-glib-1-dev \
    liborbit2-dev intltool ccache libtool uuid-dev liblzo2-dev tcl dpkg asciidoc \
    texlive-latex-base dblatex xutils-dev texlive texinfo lib32z1 lib32ncurses5 \
    lib32bz2-1.0 libc6-dev-i386 u-boot-tools scrollkeeper dos2unix
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MFGTool Emmc mksdcard.sh]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/14/mfgtool-emmc-mksdcard-dot-sh/"/>
    <updated>2015-05-14T19:07:18+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/14/mfgtool-emmc-mksdcard-dot-sh</id>
    <content type="html"><![CDATA[<h1>MFGTool Emmc mksdcard.sh comment</h1>

<h2>1.烧写脚本：</h2>

<pre><code>&lt;CMD state="Updater" type="push" body="send" file="mksdcard.sh.tar"&gt;Sending partition shell&lt;/CMD&gt; 

&lt;CMD state="Updater" type="push" body="$ tar xf $FILE "&gt; Partitioning...&lt;/CMD&gt;

&lt;CMD state="Updater" type="push" body="$ sh mksdcard.sh /dev/mmcblk0"&gt; Partitioning...&lt;/CMD&gt; 
</code></pre>

<h2>2 其中 ：$ sh mksdcard.sh /dev/mmcblk0</h2>

<pre><code>mksdcard.sh文件内容为：

#######################################################################
#!/bin/sh

# partition size in MB
BOOT_ROM_SIZE=10
BOOT_SYSTEM_SIZE=100


# call sfdisk to create partition table
# destroy the partition table
node=$1
dd if=/dev/zero of=${node} bs=1024 count=1

sfdisk --force -uM ${node} &lt;&lt; EOF
${BOOT_ROM_SIZE},${BOOT_SYSTEM_SIZE},83
,,83
EOF
######################################################################

#!/bin/sh
#partition size in MB

BOOT_ROM_SIZE=10                            #这里定义的是启动ROM 10MB
ROOT_SYSTEM_SIZE=1024                       #这里定义的是系统大小 1024mb

#call sfdisk to create partition table
#destroy the partition table

node=$1                                     #$1为命令行第一个传递的参数 在此为 /dev/mmcblk0
dd if=/dev/zero of=${node} bs=1024 count=1  #将前导一个1024字节(1KB)大小的分区零0

sfdisk--force -uM ${node} &lt;&lt; EOF            #SmartFdisk –uM表示以MB为单位生成报告  即： sfdisk --force -um  /dev/mmcblk0 &lt;&lt;EOF
${BOOT_ROM_SIZE},${ROOT_SYSTEM_SIZE},0c 
,,83
EOF

#(,,83) 将其他所有空间再分成一个区,，此处应该就是mmcblk0p2 其中 83是Linux分区标识 Uboot和kernel是直接使用dd写入mmcblk0中的，而分区则是使用sfdisk进行的，空出了uboot和kernel的位置，从起始地址10MB开始的
</code></pre>

<h2>3. linux  sfdisk命令说明</h2>

<pre><code>sfdisk reads lines of the form

         &lt;start&gt; &lt;size&gt; &lt;id&gt;&lt; bootable&gt; &lt;c,h,s&gt; &lt;c,h,s&gt;

  where each line fills one partition descriptor.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[using ltib's u-boot kernel and rootfs to boot board step by step]]></title>
    <link href="http://jordonwu.github.io/blog/2015/05/14/using-ltibs-u-boot-kernel-and-rootfs-to-boot-board-step-by-step/"/>
    <updated>2015-05-14T14:47:48+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/05/14/using-ltibs-u-boot-kernel-and-rootfs-to-boot-board-step-by-step</id>
    <content type="html"><![CDATA[<h1>1. Config and build ltib for sabre sdb imx6q</h1>

<h1>2. Get source code</h1>

<pre><code>$ cd path/ltib

$ ./ltib -m prep -p u-boot

$ cd path/ltib

$ ./ltib -m prep -p kernel
</code></pre>

<h1>3. Modify and build u-boot</h1>

<pre><code>$ cd path/ltib/rpm/BUILD/u-boot-2009.08

$ modify inlcude/configs/mx6q_sabresd.h as below

////////////////////////////////////////////////////////////////////

#if 0   //boot from nfs
#define CONFIG_EXTRA_ENV_SETTINGS                   \
        "netdev=eth0\0"                     \
        "ethprime=FEC0\0"                   \
        "uboot=u-boot.bin\0"            \
        "kernel=uImage\0"               \
        "nfsroot=/opt/eldk/arm\0"               \
        "bootargs_base=setenv bootargs console=ttymxc0,115200\0"\
        "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs "\
            "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0"\
        "bootcmd_net=run bootargs_base bootargs_nfs; "      \
            "tftpboot ${loadaddr} ${kernel}; bootm\0"   \
        "bootargs_mmc=setenv bootargs ${bootargs} ip=dhcp "     \
            "root=/dev/mmcblk0p1 rootwait\0"                \
        "bootcmd_mmc=run bootargs_base bootargs_mmc; "   \
        "mmc dev 3; "   \
        "mmc read ${loadaddr} 0x800 0x2000; bootm\0"    \
        "bootcmd=run bootcmd_net\0"
#endif

#if 1   //boot from mmc and display on lvds1 to LDB-CLAA(1280x420)
#define CONFIG_EXTRA_ENV_SETTINGS                   \
        "netdev=eth0\0"                     \
        "ethprime=FEC0\0"                   \
        "uboot=u-boot.bin\0"                    \
        "kernel=uImage\0"                   \
        "nfsroot=/opt/eldk/arm\0"               \
        "bootargs_base=setenv bootargs console=ttymxc0,115200 \0"\
        "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs "\
            "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0"\
        "bootcmd_net=run bootargs_base bootargs_nfs; "      \
            "tftpboot ${loadaddr} ${kernel}; bootm\0"   \
        "bootargs_mmc=setenv bootargs ${bootargs} "     \
            "root=/dev/mmcblk0p1 rootfstype=ext4 rootwait rw lpj=7905280 printk.time=1 verify=no" \
            " ldb=sin1 video=mxcfb0:dev=ldb,LDB-CLAA,if=RGB666,bpp=32 video=mxcfb1:off consoleblank=0 \0"\
        "bootcmd_mmc=run bootargs_base bootargs_mmc; "  \
        "mmc dev 3; "                   \
        "mmc read ${loadaddr} 0x800 0x2000; bootm\0"    \
        "bootcmd=run bootcmd_mmc\0"
#endif

#if 0   //boot from mmc and display on twice lvds to LDB-1080P60(1920x720)
#define CONFIG_EXTRA_ENV_SETTINGS                   \
        "netdev=eth0\0"                     \
        "ethprime=FEC0\0"                   \
        "uboot=u-boot.bin\0"            \
        "kernel=uImage\0"               \
        "nfsroot=/opt/eldk/arm\0"               \
        "bootargs_base=setenv bootargs console=ttymxc0,115200 \0"\
        "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs "\
            "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0"\
        "bootcmd_net=run bootargs_base bootargs_nfs; "      \
            "tftpboot ${loadaddr} ${kernel}; bootm\0"   \
        "bootargs_mmc=setenv bootargs ${bootargs} "     \
            "root=/dev/mmcblk0p1 rootfstype=ext4 rootwait rw lpj=7905280 printk.time=1 verify=no" \
            " ldb=spl0 video=mxcfb0:dev=ldb,LDB-1080P60,if=RGB24,bpp=32 video=mxcfb1:off consoleblank=0 \0"                \
        "bootcmd_mmc=run bootargs_base bootargs_mmc; "   \
        "mmc dev 3; "   \
        "mmc read ${loadaddr} 0x800 0x2000; bootm\0"    \
        "bootcmd=run bootcmd_mmc\0"
#endif

#if 0 //ltib default nfs boot
#define CONFIG_EXTRA_ENV_SETTINGS \
        "netdev=eth0\0" \
        "ethprime=FEC0\0" \
        "uboot=u-boot.bin\0" \
        "kernel=uImage\0" \
        "nfsroot=/opt/eldk/arm\0" \
        "bootargs_base=setenv bootargs console=ttymxc0,115200\0" \
        "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs " \
            "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
        "bootcmd_net=run bootargs_base bootargs_nfs; " \
            "tftpboot ${loadaddr} ${kernel}; bootm\0" \
        "bootargs_mmc=setenv bootargs ${bootargs} ip=dhcp " \
            "root=/dev/mmcblk0p1 rootwait\0" \
        "bootcmd_mmc=run bootargs_base bootargs_mmc; " \
        "mmc dev 3; " \
        "mmc read ${loadaddr} 0x800 0x2000; bootm\0"    \
        "bootcmd=run bootcmd_net\0"                             \

#else // for mmc boot

#define CONFIG_EXTRA_ENV_SETTINGS \
    "netdev=eth0\0" \
    "ethprime=FEC0\0" \
    "uboot=u-boot.bin\0" \
    "kernel=uImage\0" \
    "nfsroot=/opt/eldk/arm\0" \
    "bootargs_base=setenv bootargs console=ttymxc0,115200 \0" \
    "bootargs_nfs=setenv bootargs ${bootargs} root=/dev/nfs " \
        "ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
    "bootcmd_net=run bootargs_base bootargs_nfs; " \
        "tftpboot ${loadaddr} ${kernel}; bootm\0" \
    "bootargs_mmc=setenv bootargs ${bootargs} " \
        "root=/dev/mmcblk0p1 rootfstype=ext4 rootwait rw lpj=7905280 printk.time=1 verify=no" \
        " ldb=spl0 video=mxcfb0:dev=ldb,LDB-1080P60,if=RGB24,bpp=32 video=mxcfb1:off consoleblank=0 \0" \
    "bootcmd_mmc=run bootargs_base bootargs_mmc; " \
    "mmc dev 3; " \
    "mmc read ${loadaddr} 0x800 0x2000; bootm\0" \
    "bootcmd=run bootcmd_mmc\0" \

#endif

/////////////////////////////////////////////////////////////////////////

$ export ARCH=arm
$ export CROSS_COMPILE=/opt/gcc-linaro-arm-linux-gnueabi-2012.04-20120426_linux/bin/arm-linux-gnueabi-

$ make mx6q_sabresd_config

$ make

////////////////////////////Note/////////////////////////////////

uboot mmc read/write命令用法

mmc read用来读取mmc内容到内存，

mmc write用来写入内存内容到mmc中

具体用法,

mmc read &lt;device num&gt; addr blk# cnt [partition]

mmc write &lt;device num&gt; addr blk# cnt [partition]

mmc list

device num是mmc的设备号，可以通过mmc list查询

addr是内存地址

blk# 是mmc内的块号

cnt 块数目 ( 块大小为512Byte )

使用范例：

mmc write 2 0x90000000 0x600 0x10

把内存0x90000000开始，长度为16x512大小的数据，写入到第2个mmc设备块偏移位置为0x600处

mmc read 2 0x90000000 0x600 0x10

把第二个mmc设备块偏移为0x600处开始，长度为16x512大小的数据，读出到内存0x90000000处
///////////////////////////////////////////////
</code></pre>

<h1>4. Modify and build kernel</h1>

<pre><code>$ cd path/ltib/rpm/BUILD/linux-3.0.35

$ export ARCH=arm

$ export CROSS_COMPILE=/opt/gcc-linaro-arm-linux-gnueabi-2012.04-20120426_linux/bin/arm-linux-gnueabi-

$ make imx6_defconfig

$ make uImage
</code></pre>

<h1>5. Reduce rootfs</h1>

<pre><code>$ cd path/ltib/rootfs

$ add post_build.sh
##########################################
#!/bin/sh
cd dev
sudo mknod null c 1 3
sudo chmod 666 null

sudo mknod console c 5 1
sudo chmod 777 console

for i in 0 1 2 3 4 5 6 7 8 9 10 11 12; do sudo mknod fb$i c 29 $i; done

sudo mknod mxc_ipu c 253 0
sudo mknod mxc_vpu c 252 0
sudo mknod ttymxc0 c 207 16
sudo mknod video0 c 81 0
sudo mknod galcore c 199 0

cd ..
sudo rm -rf unit_tests
sudo rm -rf boot
sudo rm -rf opt/fsl_samples
sudo rm -rf opt/viv_samples
sudo rm -rf share

sudo rm -rf usr/include
sudo rm -rf usr/info
sudo rm -rf usr/man
sudo rm -rf usr/src
sudo rm -rf usr/share

sudo rm -rf var/spool
sudo rm -rf var/ftp
sudo rm -rf var/log
sudo rm -rf var/run
sudo rm -rf var/mail
sudo rm -rf var/lock
sudo rm -rf var/lib
sudo rm -rf var/www
###############################################

$ ./post_build.sh

$ sudo tar -cjvf ../rootfs.tar.bz2 ./*
</code></pre>

<h1>6. Flash u-boot.bin, uImage and rootfs.tar.bz2 to board mmc</h1>

<h1>7. Reset board. Done!</h1>
]]></content>
  </entry>
  
</feed>
