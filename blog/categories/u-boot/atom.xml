<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: u-boot | Jordon Wu's Blog]]></title>
  <link href="http://jordonwu.github.io/blog/categories/u-boot/atom.xml" rel="self"/>
  <link href="http://jordonwu.github.io/"/>
  <updated>2016-07-19T09:41:30+08:00</updated>
  <id>http://jordonwu.github.io/</id>
  <author>
    <name><![CDATA[Jordon Wu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Buildroot for imx L3.14.52_1.1.0_ga]]></title>
    <link href="http://jordonwu.github.io/blog/2016/04/07/buildroot-for-imx-l3-dot-14-dot-52-1-dot-1-0-ga/"/>
    <updated>2016-04-07T13:04:45+08:00</updated>
    <id>http://jordonwu.github.io/blog/2016/04/07/buildroot-for-imx-l3-dot-14-dot-52-1-dot-1-0-ga</id>
    <content type="html"><![CDATA[<h1>1. Get Buildroot</h1>

<pre><code>$ git clone git://git.buildroot.net/buildroot.git buildroot (commit id: 986fa441e49cc180f77704699a6d2bb3627bf86a)
</code></pre>

<h1>2. Edit config file for imx6qsabresd board</h1>

<pre><code>$ vim configs/freescale_imx6qsabresd_defconfig as below
################################################################################################################
# architecture
BR2_arm=y
BR2_BINFMT_ELF=y
BR2_cortex_a9=y
BR2_ARM_ENABLE_NEON=y
BR2_ARM_ENABLE_VFP=y
BR2_ARM_EABIHF=y
BR2_ARM_FPU_VFPV3D16=y
BR2_ARM_INSTRUCTIONS_ARM=y

#toolchain
BR2_TOOLCHAIN_EXTERNAL=y
BR2_TOOLCHAIN_EXTERNAL_LINARO_ARM=y
BR2_TOOLCHAIN_EXTERNAL_DOWNLOAD=y

#Build Options
BR2_DL_DIR="/opt/buildroot/dl"

# patches
BR2_GLOBAL_PATCH_DIR="board/freescale/imx6sabre/patches"

# Linux headers same as kernel, a 3.14 series
BR2_PACKAGE_HOST_LINUX_HEADERS_CUSTOM_3_14=y

# system
BR2_TARGET_GENERIC_GETTY_PORT="ttymxc0"

# kernel
BR2_LINUX_KERNEL=y
BR2_LINUX_KERNEL_CUSTOM_GIT=y
BR2_LINUX_KERNEL_CUSTOM_REPO_URL="git://git.freescale.com/imx/linux-2.6-imx.git"
BR2_LINUX_KERNEL_CUSTOM_REPO_VERSION="rel_imx_3.14.52_1.1.0_ga"
BR2_LINUX_KERNEL_DEFCONFIG="imx_v7"
#BR2_LINUX_KERNEL_UIMAGE=y
BR2_LINUX_KERNEL_ZIMAGE=y
BR2_LINUX_KERNEL_UIMAGE_LOADADDR="0x10008000"
BR2_LINUX_KERNEL_DTS_SUPPORT=y
BR2_LINUX_KERNEL_INTREE_DTS_NAME="imx6q-sabresd"

# filesystem
#BR2_TARGET_ROOTFS_EXT2=y
BR2_TARGET_ROOTFS_TAR=y
BR2_TARGET_ROOTFS_TAR_BZIP2=y

# bootloader
BR2_TARGET_UBOOT=y
BR2_TARGET_UBOOT_BOARDNAME="mx6qsabresd"
BR2_TARGET_UBOOT_FORMAT_IMX=y
BR2_TARGET_UBOOT_CUSTOM_GIT=y
BR2_TARGET_UBOOT_CUSTOM_REPO_URL="git://git.freescale.com/imx/uboot-imx.git"
BR2_TARGET_UBOOT_CUSTOM_REPO_VERSION="rel_imx_3.14.52_1.1.0_ga"
################################################################################################################
</code></pre>

<h1>3. Build image</h1>

<pre><code>$ make freescale_imx6qsabresd_defconfig
$ make -j 8
$ ls output/images/* -alh
-rw-r--r-- 1 vmuser vmuser  42K Apr  7 13:46 output/images/imx6q-sabresd.dtb
-rw-r--r-- 1 vmuser vmuser 8.3M Apr  7 13:46 output/images/rootfs.ext2
-rw-r--r-- 1 vmuser vmuser 6.7M Apr  7 13:48 output/images/rootfs.tar
-rw-r--r-- 1 vmuser vmuser 2.7M Apr  7 13:48 output/images/rootfs.tar.bz2
-rw-r--r-- 1 vmuser vmuser 403K Apr  7 13:34 output/images/u-boot.imx
-rw-r--r-- 1 vmuser vmuser 5.3M Apr  7 13:46 output/images/zImage
</code></pre>

<h1>4. Config display as HMDI</h1>

<pre><code>1) Enter u-boot console
2) 
=&gt; setenv mmcargs 'setenv bootargs console=${console},${baudrate} ${smp} root=${mmcroot} rootwait rw video=mxcfb0:dev=hdmi,1920x1080M@60,if=RGB24'
=&gt; saveenv
</code></pre>

<h1>5. Config display as single LVDS</h1>

<h1>6. Config display as dual LVDS</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build u-boot for riot board]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/15/build-u-boot-for-riot-board/"/>
    <updated>2015-04-15T14:52:23+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/15/build-u-boot-for-riot-board</id>
    <content type="html"><![CDATA[<h2>1. Get u-boot source</h2>

<pre><code>git clone https://github.com/Freescale/u-boot-fslc.git
</code></pre>

<h2>2. make &amp; build</h2>

<pre><code>$cd u-boot-fslc
$export ARCH=arm 
$export CROSS_COMPILE=arm-linux-gnueabihf-
$make riotboard_defconfig 
$make
$ls ls -l u-boot.*
    -rw-rw-r-- 1 jordon jordon 331492 Dec  7 05:44 u-boot.bin
    -rw-rw-r-- 1 jordon jordon 334848 Dec  7 05:44 u-boot.imx
    -rw-rw-r-- 1 jordon jordon   1286 Dec  7 05:44 u-boot.lds
    -rw-rw-r-- 1 jordon jordon 317244 Dec  7 05:44 u-boot.map
    -rw-rw-r-- 1 jordon jordon 994618 Dec  7 05:44 u-boot.srec
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build openwrt firmware]]></title>
    <link href="http://jordonwu.github.io/blog/2015/04/15/build-openwrt-firmware/"/>
    <updated>2015-04-15T14:51:54+08:00</updated>
    <id>http://jordonwu.github.io/blog/2015/04/15/build-openwrt-firmware</id>
    <content type="html"><![CDATA[<h1>1. Hardware</h1>

<p>wrtnode board <a href="http://cn.wrtnode.com/">http://cn.wrtnode.com/</a></p>

<h1>2. Backup firmware</h1>

<h2>1) ssh to wrtnode board</h2>

<pre><code>root@OpenWrt:/tmp# cat /proc/mtd
dev:    size   erasesize  name
mtd0: 00030000 00010000 "u-boot"
mtd1: 00010000 00010000 "u-boot-env"
mtd2: 00010000 00010000 "factory"
mtd3: 00fb0000 00010000 "firmware"
mtd4: 00e96447 00010000 "rootfs"
mtd5: 00780000 00010000 "rootfs_data"
</code></pre>

<h2>2) back up u-boot and factory partition to /tmp</h2>

<pre><code>root@OpenWrt:/tmp# dd if=/dev/mtd0 of=/tmp/wrtnode_u-boot.backup
root@OpenWrt:/tmp# dd if=/dev/mtd1 of=/tmp/wrtnode_u-boot-env.backup
root@OpenWrt:/tmp# dd if=/dev/mtd2 of=/tmp/wrtnode_factory.backup
root@OpenWrt:/tmp# cat /proc/mtd &gt; wrtnode_mtd_info.txt
</code></pre>

<h2>3) scp backup firmware to local pc</h2>

<pre><code>$ scp root@192.168.8.1:/tmp/wrtnode_u-boot.backup .
$ scp root@192.168.8.1:/tmp/wrtnode_u-boot-env.backup .
$ scp root@192.168.8.1:/tmp/wrtnode_factory.backup .
$ scp root@192.168.8.1:/tmp/wrtnode_mtd_info.txt .
</code></pre>

<h1>3. Build u-boot</h1>

<h1>4. Build kernel</h1>

<h1>5. Build openwrt image</h1>
]]></content>
  </entry>
  
</feed>
